{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Onboarding Scala Learning Path Scala\u5b66\u4e60\u8def\u7ebf","title":"Introduction"},{"location":"#scala-learning-path","text":"Scala\u5b66\u4e60\u8def\u7ebf","title":"Scala Learning Path"},{"location":"assets/scala-learning-path/","text":"Scala Learning Path Build Tool sbt Basics Know Scala Type System Build-in Data Types Boolean Byte Short Int Long Float Double Char String Variables var val Classes Traits Abstract Classes Case Classes and Case Objects Practice designing bussiness models for FP Control Structures if/then/else Structure for loops Structure for Expressions match Expressions try/catch/finally Structure Features implicit Collections ArrayBuffer List Vector Map Set Tuple Option Try Either Functional Programming Common Libraries cats cats-effect http4s circle doobie scalatest specs2 mockito scalapact","title":"Scala Learning Path"},{"location":"assets/scala-learning-path/#scala-learning-path","text":"","title":"Scala Learning Path"},{"location":"assets/scala-learning-path/#build-tool","text":"","title":"Build Tool"},{"location":"assets/scala-learning-path/#sbt","text":"","title":"sbt"},{"location":"assets/scala-learning-path/#basics","text":"","title":"Basics"},{"location":"assets/scala-learning-path/#know-scala","text":"","title":"Know Scala"},{"location":"assets/scala-learning-path/#type-system","text":"","title":"Type System"},{"location":"assets/scala-learning-path/#build-in-data-types","text":"","title":"Build-in Data Types"},{"location":"assets/scala-learning-path/#boolean","text":"","title":"Boolean"},{"location":"assets/scala-learning-path/#byte","text":"","title":"Byte"},{"location":"assets/scala-learning-path/#short","text":"","title":"Short"},{"location":"assets/scala-learning-path/#int","text":"","title":"Int"},{"location":"assets/scala-learning-path/#long","text":"","title":"Long"},{"location":"assets/scala-learning-path/#float","text":"","title":"Float"},{"location":"assets/scala-learning-path/#double","text":"","title":"Double"},{"location":"assets/scala-learning-path/#char","text":"","title":"Char"},{"location":"assets/scala-learning-path/#string","text":"","title":"String"},{"location":"assets/scala-learning-path/#variables","text":"","title":"Variables"},{"location":"assets/scala-learning-path/#var","text":"","title":"var"},{"location":"assets/scala-learning-path/#val","text":"","title":"val"},{"location":"assets/scala-learning-path/#classes","text":"","title":"Classes"},{"location":"assets/scala-learning-path/#traits","text":"","title":"Traits"},{"location":"assets/scala-learning-path/#abstract-classes","text":"","title":"Abstract Classes"},{"location":"assets/scala-learning-path/#case-classes-and-case-objects","text":"","title":"Case Classes and Case Objects"},{"location":"assets/scala-learning-path/#practice-designing-bussiness-models-for-fp","text":"","title":"Practice designing bussiness models for FP"},{"location":"assets/scala-learning-path/#control-structures","text":"","title":"Control Structures"},{"location":"assets/scala-learning-path/#ifthenelse-structure","text":"","title":"if/then/else Structure"},{"location":"assets/scala-learning-path/#for-loops-structure","text":"","title":"for loops Structure"},{"location":"assets/scala-learning-path/#for-expressions","text":"","title":"for Expressions"},{"location":"assets/scala-learning-path/#match-expressions","text":"","title":"match Expressions"},{"location":"assets/scala-learning-path/#trycatchfinally-structure","text":"","title":"try/catch/finally Structure"},{"location":"assets/scala-learning-path/#features","text":"","title":"Features"},{"location":"assets/scala-learning-path/#implicit","text":"","title":"implicit"},{"location":"assets/scala-learning-path/#collections","text":"","title":"Collections"},{"location":"assets/scala-learning-path/#arraybuffer","text":"","title":"ArrayBuffer"},{"location":"assets/scala-learning-path/#list","text":"","title":"List"},{"location":"assets/scala-learning-path/#vector","text":"","title":"Vector"},{"location":"assets/scala-learning-path/#map","text":"","title":"Map"},{"location":"assets/scala-learning-path/#set","text":"","title":"Set"},{"location":"assets/scala-learning-path/#tuple","text":"","title":"Tuple"},{"location":"assets/scala-learning-path/#option","text":"","title":"Option"},{"location":"assets/scala-learning-path/#try","text":"","title":"Try"},{"location":"assets/scala-learning-path/#either","text":"","title":"Either"},{"location":"assets/scala-learning-path/#functional-programming","text":"","title":"Functional Programming"},{"location":"assets/scala-learning-path/#common-libraries","text":"","title":"Common Libraries"},{"location":"assets/scala-learning-path/#cats","text":"","title":"cats"},{"location":"assets/scala-learning-path/#cats-effect","text":"","title":"cats-effect"},{"location":"assets/scala-learning-path/#http4s","text":"","title":"http4s"},{"location":"assets/scala-learning-path/#circle","text":"","title":"circle"},{"location":"assets/scala-learning-path/#doobie","text":"","title":"doobie"},{"location":"assets/scala-learning-path/#scalatest","text":"","title":"scalatest"},{"location":"assets/scala-learning-path/#specs2","text":"","title":"specs2"},{"location":"assets/scala-learning-path/#mockito","text":"","title":"mockito"},{"location":"assets/scala-learning-path/#scalapact","text":"","title":"scalapact"},{"location":"basics/build-in-data-types/","text":"Build-in Data Types Data type system diagram \u6709\u51e0\u4e2a\u7c7b\u578b\u9700\u8981\u7279\u522b\u8bf4\u660e\u4e0b\uff0c\u5982\u4e0b\u8868: Data Type Description Unit \u8868\u793a\u65e0\u503c\uff0c\u548cJava\u4e2d\u7684void\u6709\u7740\u4e00\u6837\u7684\u4f5c\u7528\u3002\u7528\u4f5c\u4e0d\u8fd4\u56de\u4efb\u4f55\u7ed3\u679c\u7684\u65b9\u6cd5\u7684\u7ed3\u679c\u7c7b\u578b\u3002Unit\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\u503c\uff0c\u5199\u6210() Null null \u6216\u7a7a\u5f15\u7528 Nothing Nothing\u7c7b\u578b\u5728Scala\u7684\u7c7b\u5c42\u7ea7\u7684\u6700\u5e95\u7aef\uff1b\u5b83\u662f\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\u7684\u5b50\u7c7b\u578b Any Any\u662f\u6240\u6709\u5176\u4ed6\u7c7b\u7684\u8d85\u7c7b AnyVal AnyRef\u7c7b\u662fScala\u91cc\u6240\u6709\u6570\u5b57\u7c7b\u578b\u7684\u57fa\u7c7b AnyRef AnyRef\u7c7b\u662fScala\u91cc\u6240\u6709\u5f15\u7528\u7c7b\u7684\u57fa\u7c7b A few build-in Data Types Scala \u5185\u7f6e\u4e86\u5f88\u591a\u57fa\u7840\u6570\u636e\u7c7b\u578b\u4f9b\u5f00\u53d1\u8005\u4f7f\u7528\uff0c\u6240\u6709\u7684\u8fd9\u4e9b\u6570\u636e\u7c7b\u578b\u90fd\u88ab\u5c01\u88c5\u6210\u6210\u719f\u7684 object \uff0c\u5e76\u975e\u539f\u59cb\u6570\u636e\u7c7b\u578b(int, float\u7b49) \u5982\u4e0b\u4e3a\u5b9a\u4e49\u8fd9\u4e9b\u57fa\u7840\u6570\u636e\u7c7b\u578b\u7684\u793a\u4f8b: val b: Byte = 1 val i: Int = 1 val l: Long = 1 val s: Short = 1 \u4e0a\u8ff0 Byte , Int , Long , Short \u56db\u4e2a\u6570\u636e\u7c7b\u578b\u5747\u4e3a \u6574\u6570\u578b \uff0c\u6574\u6570\u578b\u9ed8\u8ba4\u7684\u6570\u636e\u7c7b\u578b\u4e3a Int , \u5982\u679c\u4f60\u60f3\u5c06\u6574\u6570\u578b\u53d8\u91cf\u8bbe\u7f6e\u4e3a\u5176\u4ed6\u6574\u6570\u578b\u6570\u636e\u7c7b\u578b\uff0c\u4f60\u5c06\u9700\u8981\u4f7f\u7528\u7c7b\u4f3c\u5982\u4e0a\u7684 \u663e\u5f0f\u58f0\u660e\u6570\u636e\u7c7b\u578b \uff0c\u4e5f\u5373\u5728\u53d8\u91cf\u540d\u540e\u8fb9\u8ddf\u4e0a \" : {\u6570\u636e\u7c7b\u578b} \". \u5c0f\u6570\u578b\u53d8\u91cf\u9ed8\u8ba4\u7684\u6570\u636e\u7c7b\u578b\u4e3a Double , \u540c\u6837\u5730\u5982\u679c\u4f60\u60f3\u5c06\u5c0f\u6570\u578b\u53d8\u91cf\u8bbe\u7f6e\u4e3a\u5176\u4ed6\u5c0f\u6570\u578b\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u9700\u8981 \u663e\u5f0f\u58f0\u660e\u6570\u636e\u7c7b\u578b , \u5982\u4e0b\u4e3a\u5185\u7f6e\u5c0f\u6570\u578b\u6570\u636e\u7c7b\u578b\u793a\u4f8b: val d = 2.0 // default \"Double\" type val f: Float = 3.0 // set to `Float` type \u5f53\u7136\u4e86 Scala \u4e5f\u5185\u7f6e\u4e86 Boolean , String , Char \u4e09\u79cd\u57fa\u672c\u6570\u636e\u7c7b\u578b, \u793a\u4f8b\u5982\u4e0b: val b = true // default \"Boolean\" type val s = \"hello\" // default \"String\" type val c = 'a' // default \"Char\" type Tip \u5982\u4e0b\u9644\u4e0a Scala \u5b98\u65b9\u5bf9 9 \u79cd\u57fa\u672c\u6570\u636e\u7c7b\u578b \u503c\u8303\u56f4 \u7684\u8bf4\u660e: Data Type Possible Values Boolean true or false Byte 8-bit signed two\u2019s complement integer (-2^7 to 2^7-1, inclusive) Short 16-bit signed two\u2019s complement integer (-2^15 to 2^15-1, inclusive) Int 32-bit two\u2019s complement integer (-2^31 to 2^31-1, inclusive) Long 64-bit two\u2019s complement integer (-2^63 to 2^63-1, inclusive) Float 32-bit IEEE 754 single-precision float (1.40129846432481707e-45 to 3.40282346638528860e+38) Double 64-bit IEEE 754 double-precision float (4.94065645841246544e-324d to 1.79769313486231570e+308d) Char 16-bit unsigned Unicode character (0 to 2^16-1, inclusive) String a sequence of Char String Topic Scala \u7684\u5b57\u7b26\u4e32\u6709\u5f88\u591a\u4e0d\u9519\u7684\u7279\u6027\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u4e3b\u8981\u8ba8\u8bba\u51e0\u79cd\u5e38\u89c1\u7684\u5b57\u7b26\u4e32\u62fc\u63a5\u65b9\u6cd5: \u9996\u5148\u58f0\u660e\u4e24\u4e2a\u5b57\u7b26\u4e32\u53d8\u91cf val firstName = \"Shuai\" val lastName = \"Li\" \u4f7f\u7528 + \u64cd\u4f5c\u7b26\u62fc\u63a5\u591a\u4e2a\u5b57\u7b26\u4e32 val name = firstName + \" \" + lastName // Shuai Li \u4f7f\u7528 s \u5bf9\u5b57\u7b26\u4e32\u63d2\u503c\u5904\u7406 val name = s\"$firstName $lastName\" // Shuai Li s \u5b57\u7b26\u4e32\u63d2\u503c\u4e5f\u652f\u6301\u4f60\u5c06\u53d8\u91cf\u7528 \u82b1\u62ec\u53f7 \u62ec\u8d77\u6765 val name = s\"${firstName} ${lastName}\" // Shuai Li \u96be\u9053 \u82b1\u62ec\u53f7 \u5c31\u8fd9\uff1f\u4e0d\u6b62\uff0c\u82b1\u62ec\u53f7\u5185\u652f\u6301\u662f\u652f\u6301\u8868\u8fbe\u5f0f\u7684 val calculation_description = s\"1 + 1 = ${1 + 1}\" // 1 + 1 = 2 \u5bf9\u4e8e\u4e00\u4e9b\u7279\u6b8a\u5b57\u7b26\uff0c\u4f7f\u7528 s \u63d2\u503c\u5668\u65f6\u9700\u8981\u6ce8\u610f\u5bf9\u8fd9\u4e9b\u5b57\u7b26\u8fdb\u884c \u8f6c\u4e49 println(s\"The book is $$30.54\") // The book is $30.54 \u53cc\u5f15\u53f7 \u4e5f\u662f\u9700\u8981\u8fdb\u884c \u8f6c\u4e49 \u7684\uff0c\u5982\u4e0b\u5305\u542b\u6b63\u786e\u548c\u9519\u8bef\u4e24\u4e2a\u793a\u4f8b: println(s\"The focus of this book is on \\\"clean code\\\".\") // compile error println(\"\"\"The focus of this book is on \"clean code\".\"\"\") // The focus of this book is on \"clean code\". \u4e5f\u5c31\u662f\u8bf4\uff0c \u53cc\u5f15\u53f7 \u7684\u8f6c\u4e49\u9700\u8981\u901a\u8fc7 \u4e09\u91cd\u53cc\u5f15\u53f7 \u5b8c\u6210 \u4f7f\u7528 f \u5bf9\u5b57\u7b26\u4e32\u63d2\u503c\u5904\u7406 f \u5b57\u7b26\u4e32\u63d2\u503c\u5141\u8bb8\u521b\u5efa\u7b80\u5355\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c\u7c7b\u4f3c\u4e8e\u5176\u4ed6\u8bed\u8a00\u7684 printf \u3002\u4f7f\u7528 f \u63d2\u503c\u65f6\uff0c\u6240\u6709\u53d8\u91cf\u5f15\u7528\u90fd\u5e94\u8be5\u5728\u53d8\u91cf\u5c3e\u90e8\u8ffd\u52a0\u4e00\u4e2a\u683c\u5f0f\u5316\u7b26\u53f7\uff08\u5982 %d\uff09\uff0c\u8bf7\u770b\u5982\u4e0b\u793a\u4f8b: val money = 7.856 println(f\"$name%s has $money%2.2f yuan left\") // Shuai Li has 7.86 yuan left \u591a\u884c\u5b57\u7b26\u4e32\u5904\u7406 \u5728 Scala \u4e2d\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e09\u4e2a\u53cc\u5f15\u53f7\u5305\u88f9\u5b57\u7b26\u4e32\u6765\u8fbe\u5230\u521b\u5efa\u591a\u884c\u5b57\u7b26\u4e32\u7684\u76ee\u7684, \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b: val introduction = \"\"\"My name is Shuai Li...\"\"\" println(introduction) \u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u7684\u8f93\u51fa\u7ed3\u679c: My name is Shuai Li... \u4f46\u662f\u5982\u5927\u5bb6\u6240\u89c1\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6709\u4e00\u4e2a\u660e\u663e\u7684\u7f3a\u9677\u5c31\u662f: \u9664\u4e86\u7b2c\u4e00\u884c\u5916\u7684\u6240\u6709\u884c\u90fd\u662f\u5e26\u7f29\u8fdb\u6548\u679c\u7684 \uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u6211\u4eec\u53ef\u4ee5\u5c06 | \u7b26\u53f7\u52a0\u5230\u9996\u884c\u5916\u6240\u6709\u884c\u7684\u884c\u9996\uff0c\u5e76\u5728\u5b57\u7b26\u4e32\u540e\u8c03\u7528 stripMargin (\u53bb\u9664\u8fb9\u7f18\u7a7a\u767d) \u65b9\u6cd5, \u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: val introduction = \"\"\"My name |is Shuai Li...\"\"\".stripMargin println(introduction) \u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u7684\u8f93\u51fa\u7ed3\u679c: My name is Shuai Li... BigInt and BigDecimal Topic \u9488\u5bf9\u5927\u6570\u5904\u7406\u573a\u666f\uff0c Scala \u63d0\u4f9b\u4e86\u4e24\u79cd\u6570\u636e\u7c7b\u578b: BigInt \u5927\u6574\u6570 BigDecimal \u5927\u5341\u8fdb\u5236\u6570(\u5c0f\u6570) \u4e0d\u540c\u4e8e\u5176\u5728Java\u4e2d\u5bf9\u5e94\u7684\u7c7b\uff0c Scala \u4e2d\u8fd9\u4e24\u79cd\u5927\u6570\u6570\u636e\u7c7b\u578b\u652f\u6301\u6240\u6709\u4f60\u4e60\u60ef\u4f7f\u7528\u7684\u6570\u5b57\u7c7b\u578b\u7684\u64cd\u4f5c\u7b26\uff0c\u4e00\u4e2a\u5b57: \u5999 , \u8ba9\u6211\u4eec\u770b\u51e0\u4e2a REPL [1] \u73af\u5883\u4e0b\u7684\u793a\u4f8b: scala> val bi = BigInt(100000001) val bi: scala.math.BigInt = 100000001 scala> bi + bi val res2: scala.math.BigInt = 200000002 scala> bi - bi val res3: scala.math.BigInt = 0 scala> bi * bi val res4: scala.math.BigInt = 10000000200000001 scala> val bd = BigDecimal(10000.123) val bd: scala.math.BigDecimal = 10000.123 scala> bd + bd val res0: scala.math.BigDecimal = 20000.246 scala> bd * bd val res1: scala.math.BigDecimal = 100002460.01512 Referrences [1] Scala REPL, https://docs.scala-lang.org/overviews/scala-book/scala-repl.html","title":"Build-in Data Types"},{"location":"basics/build-in-data-types/#build-in-data-types","text":"","title":"Build-in Data Types"},{"location":"basics/build-in-data-types/#data-type-system-diagram","text":"\u6709\u51e0\u4e2a\u7c7b\u578b\u9700\u8981\u7279\u522b\u8bf4\u660e\u4e0b\uff0c\u5982\u4e0b\u8868: Data Type Description Unit \u8868\u793a\u65e0\u503c\uff0c\u548cJava\u4e2d\u7684void\u6709\u7740\u4e00\u6837\u7684\u4f5c\u7528\u3002\u7528\u4f5c\u4e0d\u8fd4\u56de\u4efb\u4f55\u7ed3\u679c\u7684\u65b9\u6cd5\u7684\u7ed3\u679c\u7c7b\u578b\u3002Unit\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\u503c\uff0c\u5199\u6210() Null null \u6216\u7a7a\u5f15\u7528 Nothing Nothing\u7c7b\u578b\u5728Scala\u7684\u7c7b\u5c42\u7ea7\u7684\u6700\u5e95\u7aef\uff1b\u5b83\u662f\u4efb\u4f55\u5176\u4ed6\u7c7b\u578b\u7684\u5b50\u7c7b\u578b Any Any\u662f\u6240\u6709\u5176\u4ed6\u7c7b\u7684\u8d85\u7c7b AnyVal AnyRef\u7c7b\u662fScala\u91cc\u6240\u6709\u6570\u5b57\u7c7b\u578b\u7684\u57fa\u7c7b AnyRef AnyRef\u7c7b\u662fScala\u91cc\u6240\u6709\u5f15\u7528\u7c7b\u7684\u57fa\u7c7b","title":"Data type system diagram"},{"location":"basics/build-in-data-types/#a-few-build-in-data-types","text":"Scala \u5185\u7f6e\u4e86\u5f88\u591a\u57fa\u7840\u6570\u636e\u7c7b\u578b\u4f9b\u5f00\u53d1\u8005\u4f7f\u7528\uff0c\u6240\u6709\u7684\u8fd9\u4e9b\u6570\u636e\u7c7b\u578b\u90fd\u88ab\u5c01\u88c5\u6210\u6210\u719f\u7684 object \uff0c\u5e76\u975e\u539f\u59cb\u6570\u636e\u7c7b\u578b(int, float\u7b49) \u5982\u4e0b\u4e3a\u5b9a\u4e49\u8fd9\u4e9b\u57fa\u7840\u6570\u636e\u7c7b\u578b\u7684\u793a\u4f8b: val b: Byte = 1 val i: Int = 1 val l: Long = 1 val s: Short = 1 \u4e0a\u8ff0 Byte , Int , Long , Short \u56db\u4e2a\u6570\u636e\u7c7b\u578b\u5747\u4e3a \u6574\u6570\u578b \uff0c\u6574\u6570\u578b\u9ed8\u8ba4\u7684\u6570\u636e\u7c7b\u578b\u4e3a Int , \u5982\u679c\u4f60\u60f3\u5c06\u6574\u6570\u578b\u53d8\u91cf\u8bbe\u7f6e\u4e3a\u5176\u4ed6\u6574\u6570\u578b\u6570\u636e\u7c7b\u578b\uff0c\u4f60\u5c06\u9700\u8981\u4f7f\u7528\u7c7b\u4f3c\u5982\u4e0a\u7684 \u663e\u5f0f\u58f0\u660e\u6570\u636e\u7c7b\u578b \uff0c\u4e5f\u5373\u5728\u53d8\u91cf\u540d\u540e\u8fb9\u8ddf\u4e0a \" : {\u6570\u636e\u7c7b\u578b} \". \u5c0f\u6570\u578b\u53d8\u91cf\u9ed8\u8ba4\u7684\u6570\u636e\u7c7b\u578b\u4e3a Double , \u540c\u6837\u5730\u5982\u679c\u4f60\u60f3\u5c06\u5c0f\u6570\u578b\u53d8\u91cf\u8bbe\u7f6e\u4e3a\u5176\u4ed6\u5c0f\u6570\u578b\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u9700\u8981 \u663e\u5f0f\u58f0\u660e\u6570\u636e\u7c7b\u578b , \u5982\u4e0b\u4e3a\u5185\u7f6e\u5c0f\u6570\u578b\u6570\u636e\u7c7b\u578b\u793a\u4f8b: val d = 2.0 // default \"Double\" type val f: Float = 3.0 // set to `Float` type \u5f53\u7136\u4e86 Scala \u4e5f\u5185\u7f6e\u4e86 Boolean , String , Char \u4e09\u79cd\u57fa\u672c\u6570\u636e\u7c7b\u578b, \u793a\u4f8b\u5982\u4e0b: val b = true // default \"Boolean\" type val s = \"hello\" // default \"String\" type val c = 'a' // default \"Char\" type Tip \u5982\u4e0b\u9644\u4e0a Scala \u5b98\u65b9\u5bf9 9 \u79cd\u57fa\u672c\u6570\u636e\u7c7b\u578b \u503c\u8303\u56f4 \u7684\u8bf4\u660e: Data Type Possible Values Boolean true or false Byte 8-bit signed two\u2019s complement integer (-2^7 to 2^7-1, inclusive) Short 16-bit signed two\u2019s complement integer (-2^15 to 2^15-1, inclusive) Int 32-bit two\u2019s complement integer (-2^31 to 2^31-1, inclusive) Long 64-bit two\u2019s complement integer (-2^63 to 2^63-1, inclusive) Float 32-bit IEEE 754 single-precision float (1.40129846432481707e-45 to 3.40282346638528860e+38) Double 64-bit IEEE 754 double-precision float (4.94065645841246544e-324d to 1.79769313486231570e+308d) Char 16-bit unsigned Unicode character (0 to 2^16-1, inclusive) String a sequence of Char","title":"A few build-in Data Types"},{"location":"basics/build-in-data-types/#string-topic","text":"Scala \u7684\u5b57\u7b26\u4e32\u6709\u5f88\u591a\u4e0d\u9519\u7684\u7279\u6027\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u4e3b\u8981\u8ba8\u8bba\u51e0\u79cd\u5e38\u89c1\u7684\u5b57\u7b26\u4e32\u62fc\u63a5\u65b9\u6cd5: \u9996\u5148\u58f0\u660e\u4e24\u4e2a\u5b57\u7b26\u4e32\u53d8\u91cf val firstName = \"Shuai\" val lastName = \"Li\"","title":"String Topic"},{"location":"basics/build-in-data-types/#_1","text":"val name = firstName + \" \" + lastName // Shuai Li","title":"\u4f7f\u7528 + \u64cd\u4f5c\u7b26\u62fc\u63a5\u591a\u4e2a\u5b57\u7b26\u4e32"},{"location":"basics/build-in-data-types/#s","text":"val name = s\"$firstName $lastName\" // Shuai Li s \u5b57\u7b26\u4e32\u63d2\u503c\u4e5f\u652f\u6301\u4f60\u5c06\u53d8\u91cf\u7528 \u82b1\u62ec\u53f7 \u62ec\u8d77\u6765 val name = s\"${firstName} ${lastName}\" // Shuai Li \u96be\u9053 \u82b1\u62ec\u53f7 \u5c31\u8fd9\uff1f\u4e0d\u6b62\uff0c\u82b1\u62ec\u53f7\u5185\u652f\u6301\u662f\u652f\u6301\u8868\u8fbe\u5f0f\u7684 val calculation_description = s\"1 + 1 = ${1 + 1}\" // 1 + 1 = 2 \u5bf9\u4e8e\u4e00\u4e9b\u7279\u6b8a\u5b57\u7b26\uff0c\u4f7f\u7528 s \u63d2\u503c\u5668\u65f6\u9700\u8981\u6ce8\u610f\u5bf9\u8fd9\u4e9b\u5b57\u7b26\u8fdb\u884c \u8f6c\u4e49 println(s\"The book is $$30.54\") // The book is $30.54 \u53cc\u5f15\u53f7 \u4e5f\u662f\u9700\u8981\u8fdb\u884c \u8f6c\u4e49 \u7684\uff0c\u5982\u4e0b\u5305\u542b\u6b63\u786e\u548c\u9519\u8bef\u4e24\u4e2a\u793a\u4f8b: println(s\"The focus of this book is on \\\"clean code\\\".\") // compile error println(\"\"\"The focus of this book is on \"clean code\".\"\"\") // The focus of this book is on \"clean code\". \u4e5f\u5c31\u662f\u8bf4\uff0c \u53cc\u5f15\u53f7 \u7684\u8f6c\u4e49\u9700\u8981\u901a\u8fc7 \u4e09\u91cd\u53cc\u5f15\u53f7 \u5b8c\u6210","title":"\u4f7f\u7528 s \u5bf9\u5b57\u7b26\u4e32\u63d2\u503c\u5904\u7406"},{"location":"basics/build-in-data-types/#f","text":"f \u5b57\u7b26\u4e32\u63d2\u503c\u5141\u8bb8\u521b\u5efa\u7b80\u5355\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c\u7c7b\u4f3c\u4e8e\u5176\u4ed6\u8bed\u8a00\u7684 printf \u3002\u4f7f\u7528 f \u63d2\u503c\u65f6\uff0c\u6240\u6709\u53d8\u91cf\u5f15\u7528\u90fd\u5e94\u8be5\u5728\u53d8\u91cf\u5c3e\u90e8\u8ffd\u52a0\u4e00\u4e2a\u683c\u5f0f\u5316\u7b26\u53f7\uff08\u5982 %d\uff09\uff0c\u8bf7\u770b\u5982\u4e0b\u793a\u4f8b: val money = 7.856 println(f\"$name%s has $money%2.2f yuan left\") // Shuai Li has 7.86 yuan left","title":"\u4f7f\u7528 f \u5bf9\u5b57\u7b26\u4e32\u63d2\u503c\u5904\u7406"},{"location":"basics/build-in-data-types/#_2","text":"\u5728 Scala \u4e2d\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e09\u4e2a\u53cc\u5f15\u53f7\u5305\u88f9\u5b57\u7b26\u4e32\u6765\u8fbe\u5230\u521b\u5efa\u591a\u884c\u5b57\u7b26\u4e32\u7684\u76ee\u7684, \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b: val introduction = \"\"\"My name is Shuai Li...\"\"\" println(introduction) \u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u7684\u8f93\u51fa\u7ed3\u679c: My name is Shuai Li... \u4f46\u662f\u5982\u5927\u5bb6\u6240\u89c1\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6709\u4e00\u4e2a\u660e\u663e\u7684\u7f3a\u9677\u5c31\u662f: \u9664\u4e86\u7b2c\u4e00\u884c\u5916\u7684\u6240\u6709\u884c\u90fd\u662f\u5e26\u7f29\u8fdb\u6548\u679c\u7684 \uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u6211\u4eec\u53ef\u4ee5\u5c06 | \u7b26\u53f7\u52a0\u5230\u9996\u884c\u5916\u6240\u6709\u884c\u7684\u884c\u9996\uff0c\u5e76\u5728\u5b57\u7b26\u4e32\u540e\u8c03\u7528 stripMargin (\u53bb\u9664\u8fb9\u7f18\u7a7a\u767d) \u65b9\u6cd5, \u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: val introduction = \"\"\"My name |is Shuai Li...\"\"\".stripMargin println(introduction) \u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u7684\u8f93\u51fa\u7ed3\u679c: My name is Shuai Li...","title":"\u591a\u884c\u5b57\u7b26\u4e32\u5904\u7406"},{"location":"basics/build-in-data-types/#bigint-and-bigdecimal-topic","text":"\u9488\u5bf9\u5927\u6570\u5904\u7406\u573a\u666f\uff0c Scala \u63d0\u4f9b\u4e86\u4e24\u79cd\u6570\u636e\u7c7b\u578b: BigInt \u5927\u6574\u6570 BigDecimal \u5927\u5341\u8fdb\u5236\u6570(\u5c0f\u6570) \u4e0d\u540c\u4e8e\u5176\u5728Java\u4e2d\u5bf9\u5e94\u7684\u7c7b\uff0c Scala \u4e2d\u8fd9\u4e24\u79cd\u5927\u6570\u6570\u636e\u7c7b\u578b\u652f\u6301\u6240\u6709\u4f60\u4e60\u60ef\u4f7f\u7528\u7684\u6570\u5b57\u7c7b\u578b\u7684\u64cd\u4f5c\u7b26\uff0c\u4e00\u4e2a\u5b57: \u5999 , \u8ba9\u6211\u4eec\u770b\u51e0\u4e2a REPL [1] \u73af\u5883\u4e0b\u7684\u793a\u4f8b: scala> val bi = BigInt(100000001) val bi: scala.math.BigInt = 100000001 scala> bi + bi val res2: scala.math.BigInt = 200000002 scala> bi - bi val res3: scala.math.BigInt = 0 scala> bi * bi val res4: scala.math.BigInt = 10000000200000001 scala> val bd = BigDecimal(10000.123) val bd: scala.math.BigDecimal = 10000.123 scala> bd + bd val res0: scala.math.BigDecimal = 20000.246 scala> bd * bd val res1: scala.math.BigDecimal = 100002460.01512","title":"BigInt and BigDecimal Topic"},{"location":"basics/build-in-data-types/#referrences","text":"[1] Scala REPL, https://docs.scala-lang.org/overviews/scala-book/scala-repl.html","title":"Referrences"},{"location":"basics/case-classes-and-case-objects/","text":"Case Classes And Case Objects Case Classes Scala\u4e3a\u51fd\u6570\u5f0f\u7f16\u7a0b\u63d0\u4f9b\u7684\u7279\u6027\u4e4b\u4e00\u4e3a case class . case class \u62e5\u6709\u6240\u6709\u666e\u901a class \u7684\u529f\u80fd\uff0c\u540c\u65f6\u8fd8\u6709\u66f4\u591a\u7684\u6269\u5c55\u529f\u80fd. \u5f53\u7f16\u8bd1\u5668\u68c0\u67e5\u5230 class \u524d\u8fb9\u6709 case \u5173\u952e\u5b57\u65f6\uff0c\u5b83\u4f1a\u4e3a\u4f60\u81ea\u52a8\u751f\u6210\u4e00\u4e9b\u529f\u80fd\u4ee3\u7801, \u4e3b\u8981\u5305\u542b\u5982\u4e0b\u51e0\u79cd\u7279\u6027: case class \u7684\u6784\u9020\u5668\u53c2\u6570\u9ed8\u8ba4\u4e3a\u516c\u5171\u7684 val \u53d8\u91cf, \u56e0\u6b64\u6bcf\u4e2a\u53c2\u6570\u53d8\u91cf\u7684\u8bbf\u95ee\u65b9\u6cd5\u4e5f\u4f1a\u88ab\u81ea\u52a8\u751f\u6210. apply \u65b9\u6cd5\u5c06\u4f1a\u5728 case class \u7684\u4f34\u751f\u5bf9\u8c61\u4e2d\u88ab\u751f\u6210, \u56e0\u6b64\u4f60\u4e0d\u518d\u9700\u8981\u4f7f\u7528 new \u5173\u952e\u5b57\u6765\u521b\u5efa case class \u7684\u5b9e\u4f8b. \u9ed8\u8ba4\u751f\u6210 unapply \u65b9\u6cd5\uff0c\u4f60\u5c06\u53ef\u4ee5\u5728 match \u8868\u8fbe\u5f0f\u4e2d\u6709\u66f4\u591a\u7684\u65b9\u5f0f\u53bb\u4f7f\u7528 case class . \u9ed8\u8ba4\u751f\u6210 copy \u65b9\u6cd5\uff0c\u4f60\u53ef\u80fd\u5728Scala\u7684OOP\u4e2d\u4e0d\u4f1a\u4f7f\u7528\u5b83\uff0c\u4f46\u5728Scala\u7684FP\u4e2d\u4e00\u5b9a\u4f1a\u7528\u5230\u5b83. \u9ed8\u8ba4\u751f\u6210 equals \u548c hashCode \u65b9\u6cd5\uff0c\u4f60\u4e0d\u4ec5\u53ef\u4ee5\u6bd4\u8f83\u5bf9\u8c61\uff0c\u540c\u65f6\u5c06\u8fd9\u7c7b\u5bf9\u8c61\u4f5c\u4e3a\u96c6\u5408\u7684 key \u5c06\u66f4\u52a0\u7b2c\u5bb9\u6613. \u9ed8\u8ba4\u751f\u6210 toString \u65b9\u6cd5\uff0c\u8fd9\u4e2a\u7279\u6027\u5728\u4f60debug\u7684\u65f6\u5019\u5f88\u6709\u7528. \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u901a\u8fc7\u5b9e\u4f8b\u66f4\u591a\u5730\u4e86\u89e3\u8fd9\u4e9b\u7279\u6027. With apply you don\u2019t need new \u5f53\u4f60\u5b9a\u4e49\u4e00\u4e2a case class \uff0c\u4f60\u5c06\u4e0d\u518d\u9700\u8981\u4f7f\u7528 new \u5173\u952e\u5b57\u6765\u521b\u5efa\u65b0\u7684\u5b9e\u4f8b, \u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: case class Person(name: String, age: Int) val person = Person(\"Shuai Li\", 18) println(s\"${person.name}'s age is ${person.age} years old.\") \u4e0d\u9700\u8981 new \u5173\u952e\u5b57\u521b\u5efa\u5bf9\u8c61\u7684\u5b9e\u4f8b\u662f\u56e0\u4e3a apply \u65b9\u6cd5\u5df2\u7ecf\u5728 case class \u7684\u4f34\u751f\u5bf9\u8c61\u4e2d\u88ab\u751f\u6210, apply \u65b9\u6cd5\u4f1a\u7528\u4e0e\u751f\u6210\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61. No mutator methods case class \u7684\u6784\u9020\u53c2\u6570\u9ed8\u8ba4\u662fval\u4e0d\u53ef\u53d8\u7684\uff0c\u56e0\u6b64\u7f16\u8bd1\u5668\u5c06\u4e0d\u4f1a\u4e3a case class \u751f\u6210\u5b57\u6bb5\u7684\u4fee\u6539\u65b9\u6cd5, \u6211\u4eec\u7528\u5982\u4e0b\u4ee3\u7801\u793a\u4f8b\u8fdb\u884c\u5b9e\u9a8c: val person = Person(\"Shuai Li\", 18) person.age = 20 // compiler error: reassignment to val, can't mutate the `age` field \u8fd9\u662f\u56e0\u4e3a\u51fd\u6570\u5f0f\u7f16\u7a0b\u4ece\u6765\u4e0d\u4f1a\u5141\u8bb8\u4fee\u6539\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u56e0\u6b64 case class \u6784\u9020\u53c2\u6570\u9ed8\u8ba4\u4e3aval\u7684\u8bbe\u8ba1\u662f\u6709\u9053\u7406\u7684. An unapply method case class \u6709\u4e00\u4e2a\u597d\u7684\u7279\u6027\u5c31\u662f\u5b83\u4f1a\u5728\u5b83\u7684\u4f34\u751f\u5bf9\u8c61\u4e2d\u81ea\u52a8\u751f\u6210 unapply \u65b9\u6cd5\uff0c\u7528\u4e8e\u6a21\u5f0f\u5339\u914d. \u5982\u679c\u6ca1\u6709 unapply \u65b9\u6cd5, \u7c7b\u5c06\u65e0\u6cd5\u8fdb\u884c\u6a21\u5f0f\u5339\u914d, \u5173\u4e8e unapply \u65b9\u6cd5\u7684\u5199\u6cd5\u53ef\u89c1\u5982\u4e0b\u4ee3\u7801\u793a\u4f8b: sealed trait Pet object Pet { final class Dog(val name: String) extends Pet {} final class Cat(val name: String) extends Pet {} object Dog { def unapply(arg: Dog): Option[String] = Some(arg.name) } object Cat { def unapply(arg: Cat): Option[String] = Some(arg.name) } } \u6211\u4eec\u5199\u4e00\u4e2a\u5b9e\u9645\u7528\u4f8b\u6765\u9a8c\u8bc1\u4ed6\u7684\u6709\u6548\u6027: object Main extends App { def printPetName(pet: Pet): Unit = pet match { case Dog(name) => println(s\"The dog's name is $name\") case Cat(name) => println(s\"The cat's name is $name\") } printPetName(new Dog(\"Tom\")) } \u6267\u884c\u5982\u4e0a\u4ee3\u7801\u6211\u4eec\u4f1a\u5f97\u5230\u8fd9\u6837\u7684\u8f93\u51fa: \"The dog's name is Tom\", \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u8ff0\u5b9e\u73b0\u8fc7\u7a0b\u624b\u52a8\u5b9a\u4e49\u4e86 unapply \u65b9\u6cd5\uff0c\u4f46\u662f\u5f53\u6211\u4eec\u4f7f\u7528 case class \u5c31\u4e0d\u518d\u9700\u8981\u624b\u52a8\u5b9a\u4e49 unapply \u65b9\u6cd5\u5c31\u53ef\u4ee5\u4f7f\u7528\u6a21\u5f0f\u5339\u914d, \u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: sealed trait Pet object Pet { final case class Dog(name: String) extends Pet {} final case class Cat(name: String) extends Pet {} } object Main extends App { def printPetName(pet: Pet): Unit = pet match { case Dog(name) => println(s\"The dog's name is $name\") case Cat(name) => println(s\"The cat's name is $name\") } printPetName(Dog(\"Tom\")) } \u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u540c\u6837\u7684\u8f93\u51fa: \"The dog's name is Tom\". \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6240\u6709\u7684 unapply \u65b9\u6cd5\u7684\u7c7b\u578b\u7b7e\u540d\u7b26\u5408\u67d0\u4e2a\u6807\u51c6\u3002\u4ece\u6280\u672f\u89d2\u5ea6\u8bb2\uff0c\u8fd9\u4e9b\u793a\u4f8b\u4e2d\u663e\u793a\u7684\u7279\u5b9a\u7c7b\u578b\u7684\u6a21\u5f0f\u5339\u914d\u79f0\u4e3a\u6784\u9020\u51fd\u6570\u6a21\u5f0f\u3002 Scala\u6807\u51c6\u662f unapply \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2aOption\u5143\u7ec4\uff0c\u8fd9\u4e2a\u5143\u7956\u4e2d\u8fd4\u56de case class \u6784\u9020\u51fd\u6570\u5b57\u6bb5, \u4ee3\u7801\u793a\u4f8b\u4e2d\u7684 Option[String] \u5c31\u662f\u8fd9\u6837\u7684\u5143\u7956\uff0c\u53ea\u4e0d\u8fc7\u6211\u4eec\u7684 case class \u6784\u9020\u51fd\u6570\u53ea\u6709\u4e00\u4e2a\u5b57\u6bb5\u800c\u5df2. copy method copy \u65b9\u6cd5\u4e5f\u662f\u88ab\u81ea\u52a8\u751f\u6210\u7684, \u5728\u5982\u4e0b\u573a\u666f\u4e2d copy \u65b9\u6cd5\u662f\u975e\u5e38\u6709\u5e2e\u52a9\u7684: \u514b\u9686\u4e00\u4e2a\u5bf9\u8c61 \u5728\u514b\u9686\u8fc7\u7a0b\u4e2d\u66f4\u65b0\u4e00\u4e2a\u6216\u591a\u4e2a\u5b57\u6bb5 \u53ef\u89c1\u5982\u4e0b\u4ee3\u7801\u793a\u4f8b: val oldDog = Dog(\"Tom\") val newDog = oldDog.copy(name = \"Peter\") \u5927\u5bb6\u53ef\u80fd\u7591\u60d1\u4e3a\u4ec0\u4e48\u91cd\u70b9\u5f3a\u8c03 copy \u65b9\u6cd5\uff0c\u8fd9\u662f\u56e0\u4e3a\u5728\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u4fee\u6539\u5bf9\u8c61\u7684\u6570\u636e\uff0c\u6240\u6709\u7684\u5bf9\u8c61\u5747\u4e3a\u4e0d\u53ef\u53d8\u5bf9\u8c61, \u56e0\u6b64\u6211\u4eec\u9700\u8981\u4f7f\u7528 copy \u6765\u4ece\u4e00\u4e2a\u73b0\u5b58\u7684\u793a\u4f8b\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e5f\u79f0\u4e3a \"\u590d\u5236\u65f6\u66f4\u65b0\". equals and hashCode methods case class \u4e5f\u6709\u81ea\u52a8\u751f\u6210\u7684 equals \u548c hashCode \u65b9\u6cd5, \u56e0\u6b64\u5b83\u7684\u5b9e\u4f8b\u4e4b\u95f4\u53ef\u4ee5\u8fdb\u884c\u6bd4\u8f83, \u89c1\u5982\u4e0b\u4ee3\u7801\u793a\u4f8b: scala> case class Person(name: String, relation: String) defined class Person scala> val christina = Person(\"Christina\", \"niece\") christina: Person = Person(Christina,niece) scala> val hannah = Person(\"Hannah\", \"niece\") hannah: Person = Person(Hannah,niece) scala> christina == hannah res1: Boolean = false \u8fd9\u4e9b\u65b9\u6cd5\u4f1a\u5e2e\u52a9\u4f60\u66f4\u5bb9\u6613\u5730\u5728\u5bb9\u5668\u4e2d\u4f7f\u7528\u4f60\u7684\u5bf9\u8c61\uff0c\u6bd4\u5982 set \u3001 map , \u901a\u5e38\u60c5\u51b5\u4e0b\u4f60\u53ef\u4ee5\u5728\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\u76f4\u63a5\u5c06\u5bf9\u8c61\u4f5c\u4e3akey. toString methods case class \u4e5f\u4f1a\u6709\u4e00\u4e2a\u9ed8\u8ba4\u7684 toString \u65b9\u6cd5\u5b9e\u73b0\uff0c\u5b83\u81f3\u5c11\u80fd\u5728Debug\u7684\u65f6\u5019\u5e2e\u52a9\u5230\u4f60. Summary \u5c3d\u7ba1\u6240\u6709\u8fd9\u4e9b\u7279\u6027\u5bf9\u51fd\u6570\u5f0f\u7f16\u7a0b\u90fd\u6709\u5f88\u5927\u597d\u5904\uff0c\u6b63\u5982\u4ed6\u4eec\u5728\u300aScala \u7f16\u7a0b\uff08Odersky\u3001Spoon \u548c Venners\uff09\u4e00\u4e66\u4e2d\u6240\u5199\u7684\u90a3\u6837\uff0c\u201c\u6848\u4f8b\u7c7b\u7684\u6700\u5927\u4f18\u52bf\u5728\u4e8e\u5b83\u4eec\u652f\u6301\u6a21\u5f0f\u5339\u914d\u3002\u201d\u6a21\u5f0f\u5339\u914d\u662f\u51fd\u6570\u5f0f\u7f16\u7a0b(FP)\u8bed\u8a00\u7684\u4e00\u4e2a\u4e3b\u8981\u7279\u6027\uff0c Scala \u7684 case class \u63d0\u4f9b\u4e86\u4e00\u79cd\u5728\u5339\u914d\u8868\u8fbe\u5f0f\u548c\u5176\u4ed6\u9886\u57df\u5b9e\u73b0\u6a21\u5f0f\u5339\u914d\u7684\u7b80\u5355\u65b9\u6cd5. Case Objects \u5728\u4e86\u89e3 case object \u4e4b\u524d\uff0c\u6211\u4eec\u5e94\u8be5\u4e86\u89e3\u4e00\u4e9b\u5173\u4e8e\u201c\u5e38\u89c4\u201d\u7684Scala\u5bf9\u8c61\u7684\u80cc\u666f\u77e5\u8bc6. \u4e00\u822c\u60c5\u51b5\u4e0b\u5f53\u6211\u4eec\u60f3\u521b\u5efa\u4e00\u4e2a\u5355\u4f8b\u5bf9\u8c61\u65f6\uff0c\u4f1a\u4f7f\u7528Scala\u5bf9\u8c61. \"\u4e0e\u7c7b\u7684\u5355\u4e2a\u5b9e\u4f8b\u65e0\u5173\u7684\u65b9\u6cd5\u548c\u503c\u5e94\u8be5\u5c5e\u4e8e\u5355\u4f8b\u5bf9\u8c61\uff0c\u4f7f\u7528\u5173\u952e\u5b57 object \u800c\u4e0d\u662f class \u8868\u793a.\" \u4e00\u4e2a\u5e38\u89c1\u7684 object \u4f7f\u7528\u573a\u666f\u662f\u521b\u5efa\u4e00\u4e2a\u201c\u5de5\u5177\u96c6\u201d\u5bf9\u8c61\u65f6\uff0c\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b\uff1a object TimeOps { def convertDate2Timestamp(date: String, pattern: String): Long = ... def dayOfWeek(date: String): Int = ... def isReskDay(date: String): Boolean = ... } \u8fd9\u662f\u4f7f\u7528 object \u7ed3\u6784\u7684\u901a\u7528\u65b9\u5f0f. Case objects case object \u7c7b\u4f3c\u4e8e object \uff0c\u5c31\u50cf case class \u6bd4\u666e\u901a\u7684 class \u5177\u6709\u66f4\u591a\u7279\u6027\u4e00\u6837\uff0c case object \u6bd4\u666e\u901a\u7684 object \u5177\u6709\u66f4\u591a\u7279\u6027\u3002\u5176\u7279\u6027\u5982\u4e0b\uff1a \u5b83\u662f\u53ef\u5e8f\u5217\u5316\u7684 \u5b83\u5177\u6709\u9ed8\u8ba4\u7684 hashCode \u65b9\u6cd5\u5b9e\u73b0 \u5b83\u5177\u6709\u6539\u8fdb\u7684 toString \u65b9\u6cd5\u5b9e\u73b0 \u6b63\u662f\u7531\u4e8e\u8fd9\u4e9b\u7279\u6027\uff0c case object \u4e3b\u8981\u5728\u4e24\u4e2a\u573a\u666f\u4f7f\u7528\uff1a \u521b\u5efa\u679a\u4e3e\u65f6 \u4e3a\u8981\u5728\u5176\u4ed6\u5bf9\u8c61\u4e4b\u95f4\u4f20\u9012\u7684\"\u6d88\u606f\"\u521b\u5efa\u5bb9\u5668\u65f6\uff08\u4f8b\u5982\u4f7f\u7528 Akka actor \u5e93\uff09 Creating enumerations with case objects Scala\u4e2d\u7ec4\u7ec7\u679a\u4e3e\u7684\u5177\u4f53\u65b9\u5f0f\uff0c\u89c1\u5982\u4e0b\u4ee3\u7801\u793a\u4f8b: sealed trait Channel object Channel { case object Sold extends Channel case object Leased extends Channel } \u6211\u4eec\u53ef\u4ee5\u540c\u5982\u4e0b\u4ee3\u7801\u6240\u793a\u4f7f\u7528\u8fd9\u4e9b\u679a\u4e3e: case class House ( price: BigDecimal, channel: Channel, area: Double ) Using case objects as messages case object \u7684\u53e6\u4e00\u4e2a\u4f7f\u7528\u573a\u666f\u662f\uff0c\u5f53\u4f60\u60f3\u8981\u5bf9\"\u6d88\u606f\"\u7684\u6982\u5ff5\u8fdb\u884c\u5efa\u6a21\u65f6. \u4f8b\u5982\uff0c\u5047\u8bbe\u4f60\u6b63\u5728\u7f16\u5199\u4e00\u4e2a\u50cf\u82f9\u679cSiri\u8fd9\u6837\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u4e14\u4f60\u5e0c\u671b\u80fd\u591f\u4f20\u9012\"\u8bf4\u8bdd\"\u6d88\u606f\uff0c\u4f8b\u5982\"\u8bf4\u51fa\u968f\u9644\u7684\u6587\u672c\"\uff0c\"\u505c\u6b62\u8bf4\u8bdd\"\uff0c\"\u6682\u505c\"\u548c\"\u6062\u590d\"\u3002\u5728 Scala \u4e2d\uff0c\u4f60\u53ef\u4ee5\u4e3a\u8fd9\u4e9b\u6d88\u606f\u521b\u5efa\u5355\u4f8b\u5bf9\u8c61\uff0c\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: case class StartSpeakingMessage(textToSpeak: String) case object StopSpeakingMessage case object PauseSpeakingMessage case object ResumeSpeakingMessage \u6ce8\u610f\uff0c StartSpeakMessage \u88ab\u5b9a\u4e49\u4e3a case class \u800c\u4e0d\u662f case object . \u8fd9\u662f\u56e0\u4e3a\u5bf9\u8c61\u4e0d\u80fd\u6709\u4efb\u4f55\u6784\u9020\u51fd\u6570\u53c2\u6570. \u7ed9\u5b9a\u8fd9\u4e9b\u6d88\u606f\uff0c\u5982\u679cSiri\u662f\u4f7f\u7528Akka\u5e93\u7f16\u5199\u7684\uff0c\u90a3\u4e48\u60a8\u5c06\u5728\"speak\"\u7c7b\u4e2d\u627e\u5230\u8fd9\u6837\u7684\u4ee3\u7801\uff1a class Speak extends Actor { def receive = { case StartSpeakingMessage(textToSpeak) => // code to speak the text case StopSpeakingMessage => // code to stop speaking case PauseSpeakingMessage => // code to pause speaking case ResumeSpeakingMessage => // code to resume speaking } } \u5982\u4f60\u6240\u89c1, \u8fd9\u662f\u5728 Scala \u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f20\u9012\u6d88\u606f\u7684\u597d\u65b9\u6cd5.","title":"Case Classes And Case Objects"},{"location":"basics/case-classes-and-case-objects/#case-classes-and-case-objects","text":"","title":"Case Classes And Case Objects"},{"location":"basics/case-classes-and-case-objects/#case-classes","text":"Scala\u4e3a\u51fd\u6570\u5f0f\u7f16\u7a0b\u63d0\u4f9b\u7684\u7279\u6027\u4e4b\u4e00\u4e3a case class . case class \u62e5\u6709\u6240\u6709\u666e\u901a class \u7684\u529f\u80fd\uff0c\u540c\u65f6\u8fd8\u6709\u66f4\u591a\u7684\u6269\u5c55\u529f\u80fd. \u5f53\u7f16\u8bd1\u5668\u68c0\u67e5\u5230 class \u524d\u8fb9\u6709 case \u5173\u952e\u5b57\u65f6\uff0c\u5b83\u4f1a\u4e3a\u4f60\u81ea\u52a8\u751f\u6210\u4e00\u4e9b\u529f\u80fd\u4ee3\u7801, \u4e3b\u8981\u5305\u542b\u5982\u4e0b\u51e0\u79cd\u7279\u6027: case class \u7684\u6784\u9020\u5668\u53c2\u6570\u9ed8\u8ba4\u4e3a\u516c\u5171\u7684 val \u53d8\u91cf, \u56e0\u6b64\u6bcf\u4e2a\u53c2\u6570\u53d8\u91cf\u7684\u8bbf\u95ee\u65b9\u6cd5\u4e5f\u4f1a\u88ab\u81ea\u52a8\u751f\u6210. apply \u65b9\u6cd5\u5c06\u4f1a\u5728 case class \u7684\u4f34\u751f\u5bf9\u8c61\u4e2d\u88ab\u751f\u6210, \u56e0\u6b64\u4f60\u4e0d\u518d\u9700\u8981\u4f7f\u7528 new \u5173\u952e\u5b57\u6765\u521b\u5efa case class \u7684\u5b9e\u4f8b. \u9ed8\u8ba4\u751f\u6210 unapply \u65b9\u6cd5\uff0c\u4f60\u5c06\u53ef\u4ee5\u5728 match \u8868\u8fbe\u5f0f\u4e2d\u6709\u66f4\u591a\u7684\u65b9\u5f0f\u53bb\u4f7f\u7528 case class . \u9ed8\u8ba4\u751f\u6210 copy \u65b9\u6cd5\uff0c\u4f60\u53ef\u80fd\u5728Scala\u7684OOP\u4e2d\u4e0d\u4f1a\u4f7f\u7528\u5b83\uff0c\u4f46\u5728Scala\u7684FP\u4e2d\u4e00\u5b9a\u4f1a\u7528\u5230\u5b83. \u9ed8\u8ba4\u751f\u6210 equals \u548c hashCode \u65b9\u6cd5\uff0c\u4f60\u4e0d\u4ec5\u53ef\u4ee5\u6bd4\u8f83\u5bf9\u8c61\uff0c\u540c\u65f6\u5c06\u8fd9\u7c7b\u5bf9\u8c61\u4f5c\u4e3a\u96c6\u5408\u7684 key \u5c06\u66f4\u52a0\u7b2c\u5bb9\u6613. \u9ed8\u8ba4\u751f\u6210 toString \u65b9\u6cd5\uff0c\u8fd9\u4e2a\u7279\u6027\u5728\u4f60debug\u7684\u65f6\u5019\u5f88\u6709\u7528. \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u901a\u8fc7\u5b9e\u4f8b\u66f4\u591a\u5730\u4e86\u89e3\u8fd9\u4e9b\u7279\u6027.","title":"Case Classes"},{"location":"basics/case-classes-and-case-objects/#with-apply-you-dont-need-new","text":"\u5f53\u4f60\u5b9a\u4e49\u4e00\u4e2a case class \uff0c\u4f60\u5c06\u4e0d\u518d\u9700\u8981\u4f7f\u7528 new \u5173\u952e\u5b57\u6765\u521b\u5efa\u65b0\u7684\u5b9e\u4f8b, \u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: case class Person(name: String, age: Int) val person = Person(\"Shuai Li\", 18) println(s\"${person.name}'s age is ${person.age} years old.\") \u4e0d\u9700\u8981 new \u5173\u952e\u5b57\u521b\u5efa\u5bf9\u8c61\u7684\u5b9e\u4f8b\u662f\u56e0\u4e3a apply \u65b9\u6cd5\u5df2\u7ecf\u5728 case class \u7684\u4f34\u751f\u5bf9\u8c61\u4e2d\u88ab\u751f\u6210, apply \u65b9\u6cd5\u4f1a\u7528\u4e0e\u751f\u6210\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61.","title":"With apply you don\u2019t need new"},{"location":"basics/case-classes-and-case-objects/#no-mutator-methods","text":"case class \u7684\u6784\u9020\u53c2\u6570\u9ed8\u8ba4\u662fval\u4e0d\u53ef\u53d8\u7684\uff0c\u56e0\u6b64\u7f16\u8bd1\u5668\u5c06\u4e0d\u4f1a\u4e3a case class \u751f\u6210\u5b57\u6bb5\u7684\u4fee\u6539\u65b9\u6cd5, \u6211\u4eec\u7528\u5982\u4e0b\u4ee3\u7801\u793a\u4f8b\u8fdb\u884c\u5b9e\u9a8c: val person = Person(\"Shuai Li\", 18) person.age = 20 // compiler error: reassignment to val, can't mutate the `age` field \u8fd9\u662f\u56e0\u4e3a\u51fd\u6570\u5f0f\u7f16\u7a0b\u4ece\u6765\u4e0d\u4f1a\u5141\u8bb8\u4fee\u6539\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u56e0\u6b64 case class \u6784\u9020\u53c2\u6570\u9ed8\u8ba4\u4e3aval\u7684\u8bbe\u8ba1\u662f\u6709\u9053\u7406\u7684.","title":"No mutator methods"},{"location":"basics/case-classes-and-case-objects/#an-unapply-method","text":"case class \u6709\u4e00\u4e2a\u597d\u7684\u7279\u6027\u5c31\u662f\u5b83\u4f1a\u5728\u5b83\u7684\u4f34\u751f\u5bf9\u8c61\u4e2d\u81ea\u52a8\u751f\u6210 unapply \u65b9\u6cd5\uff0c\u7528\u4e8e\u6a21\u5f0f\u5339\u914d. \u5982\u679c\u6ca1\u6709 unapply \u65b9\u6cd5, \u7c7b\u5c06\u65e0\u6cd5\u8fdb\u884c\u6a21\u5f0f\u5339\u914d, \u5173\u4e8e unapply \u65b9\u6cd5\u7684\u5199\u6cd5\u53ef\u89c1\u5982\u4e0b\u4ee3\u7801\u793a\u4f8b: sealed trait Pet object Pet { final class Dog(val name: String) extends Pet {} final class Cat(val name: String) extends Pet {} object Dog { def unapply(arg: Dog): Option[String] = Some(arg.name) } object Cat { def unapply(arg: Cat): Option[String] = Some(arg.name) } } \u6211\u4eec\u5199\u4e00\u4e2a\u5b9e\u9645\u7528\u4f8b\u6765\u9a8c\u8bc1\u4ed6\u7684\u6709\u6548\u6027: object Main extends App { def printPetName(pet: Pet): Unit = pet match { case Dog(name) => println(s\"The dog's name is $name\") case Cat(name) => println(s\"The cat's name is $name\") } printPetName(new Dog(\"Tom\")) } \u6267\u884c\u5982\u4e0a\u4ee3\u7801\u6211\u4eec\u4f1a\u5f97\u5230\u8fd9\u6837\u7684\u8f93\u51fa: \"The dog's name is Tom\", \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e0a\u8ff0\u5b9e\u73b0\u8fc7\u7a0b\u624b\u52a8\u5b9a\u4e49\u4e86 unapply \u65b9\u6cd5\uff0c\u4f46\u662f\u5f53\u6211\u4eec\u4f7f\u7528 case class \u5c31\u4e0d\u518d\u9700\u8981\u624b\u52a8\u5b9a\u4e49 unapply \u65b9\u6cd5\u5c31\u53ef\u4ee5\u4f7f\u7528\u6a21\u5f0f\u5339\u914d, \u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: sealed trait Pet object Pet { final case class Dog(name: String) extends Pet {} final case class Cat(name: String) extends Pet {} } object Main extends App { def printPetName(pet: Pet): Unit = pet match { case Dog(name) => println(s\"The dog's name is $name\") case Cat(name) => println(s\"The cat's name is $name\") } printPetName(Dog(\"Tom\")) } \u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u540c\u6837\u7684\u8f93\u51fa: \"The dog's name is Tom\". \u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u6240\u6709\u7684 unapply \u65b9\u6cd5\u7684\u7c7b\u578b\u7b7e\u540d\u7b26\u5408\u67d0\u4e2a\u6807\u51c6\u3002\u4ece\u6280\u672f\u89d2\u5ea6\u8bb2\uff0c\u8fd9\u4e9b\u793a\u4f8b\u4e2d\u663e\u793a\u7684\u7279\u5b9a\u7c7b\u578b\u7684\u6a21\u5f0f\u5339\u914d\u79f0\u4e3a\u6784\u9020\u51fd\u6570\u6a21\u5f0f\u3002 Scala\u6807\u51c6\u662f unapply \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2aOption\u5143\u7ec4\uff0c\u8fd9\u4e2a\u5143\u7956\u4e2d\u8fd4\u56de case class \u6784\u9020\u51fd\u6570\u5b57\u6bb5, \u4ee3\u7801\u793a\u4f8b\u4e2d\u7684 Option[String] \u5c31\u662f\u8fd9\u6837\u7684\u5143\u7956\uff0c\u53ea\u4e0d\u8fc7\u6211\u4eec\u7684 case class \u6784\u9020\u51fd\u6570\u53ea\u6709\u4e00\u4e2a\u5b57\u6bb5\u800c\u5df2.","title":"An unapply method"},{"location":"basics/case-classes-and-case-objects/#copy-method","text":"copy \u65b9\u6cd5\u4e5f\u662f\u88ab\u81ea\u52a8\u751f\u6210\u7684, \u5728\u5982\u4e0b\u573a\u666f\u4e2d copy \u65b9\u6cd5\u662f\u975e\u5e38\u6709\u5e2e\u52a9\u7684: \u514b\u9686\u4e00\u4e2a\u5bf9\u8c61 \u5728\u514b\u9686\u8fc7\u7a0b\u4e2d\u66f4\u65b0\u4e00\u4e2a\u6216\u591a\u4e2a\u5b57\u6bb5 \u53ef\u89c1\u5982\u4e0b\u4ee3\u7801\u793a\u4f8b: val oldDog = Dog(\"Tom\") val newDog = oldDog.copy(name = \"Peter\") \u5927\u5bb6\u53ef\u80fd\u7591\u60d1\u4e3a\u4ec0\u4e48\u91cd\u70b9\u5f3a\u8c03 copy \u65b9\u6cd5\uff0c\u8fd9\u662f\u56e0\u4e3a\u5728\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u4fee\u6539\u5bf9\u8c61\u7684\u6570\u636e\uff0c\u6240\u6709\u7684\u5bf9\u8c61\u5747\u4e3a\u4e0d\u53ef\u53d8\u5bf9\u8c61, \u56e0\u6b64\u6211\u4eec\u9700\u8981\u4f7f\u7528 copy \u6765\u4ece\u4e00\u4e2a\u73b0\u5b58\u7684\u793a\u4f8b\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e5f\u79f0\u4e3a \"\u590d\u5236\u65f6\u66f4\u65b0\".","title":"copy method"},{"location":"basics/case-classes-and-case-objects/#equals-and-hashcode-methods","text":"case class \u4e5f\u6709\u81ea\u52a8\u751f\u6210\u7684 equals \u548c hashCode \u65b9\u6cd5, \u56e0\u6b64\u5b83\u7684\u5b9e\u4f8b\u4e4b\u95f4\u53ef\u4ee5\u8fdb\u884c\u6bd4\u8f83, \u89c1\u5982\u4e0b\u4ee3\u7801\u793a\u4f8b: scala> case class Person(name: String, relation: String) defined class Person scala> val christina = Person(\"Christina\", \"niece\") christina: Person = Person(Christina,niece) scala> val hannah = Person(\"Hannah\", \"niece\") hannah: Person = Person(Hannah,niece) scala> christina == hannah res1: Boolean = false \u8fd9\u4e9b\u65b9\u6cd5\u4f1a\u5e2e\u52a9\u4f60\u66f4\u5bb9\u6613\u5730\u5728\u5bb9\u5668\u4e2d\u4f7f\u7528\u4f60\u7684\u5bf9\u8c61\uff0c\u6bd4\u5982 set \u3001 map , \u901a\u5e38\u60c5\u51b5\u4e0b\u4f60\u53ef\u4ee5\u5728\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\u76f4\u63a5\u5c06\u5bf9\u8c61\u4f5c\u4e3akey.","title":"equals and hashCode methods"},{"location":"basics/case-classes-and-case-objects/#tostring-methods","text":"case class \u4e5f\u4f1a\u6709\u4e00\u4e2a\u9ed8\u8ba4\u7684 toString \u65b9\u6cd5\u5b9e\u73b0\uff0c\u5b83\u81f3\u5c11\u80fd\u5728Debug\u7684\u65f6\u5019\u5e2e\u52a9\u5230\u4f60.","title":"toString methods"},{"location":"basics/case-classes-and-case-objects/#summary","text":"\u5c3d\u7ba1\u6240\u6709\u8fd9\u4e9b\u7279\u6027\u5bf9\u51fd\u6570\u5f0f\u7f16\u7a0b\u90fd\u6709\u5f88\u5927\u597d\u5904\uff0c\u6b63\u5982\u4ed6\u4eec\u5728\u300aScala \u7f16\u7a0b\uff08Odersky\u3001Spoon \u548c Venners\uff09\u4e00\u4e66\u4e2d\u6240\u5199\u7684\u90a3\u6837\uff0c\u201c\u6848\u4f8b\u7c7b\u7684\u6700\u5927\u4f18\u52bf\u5728\u4e8e\u5b83\u4eec\u652f\u6301\u6a21\u5f0f\u5339\u914d\u3002\u201d\u6a21\u5f0f\u5339\u914d\u662f\u51fd\u6570\u5f0f\u7f16\u7a0b(FP)\u8bed\u8a00\u7684\u4e00\u4e2a\u4e3b\u8981\u7279\u6027\uff0c Scala \u7684 case class \u63d0\u4f9b\u4e86\u4e00\u79cd\u5728\u5339\u914d\u8868\u8fbe\u5f0f\u548c\u5176\u4ed6\u9886\u57df\u5b9e\u73b0\u6a21\u5f0f\u5339\u914d\u7684\u7b80\u5355\u65b9\u6cd5.","title":"Summary"},{"location":"basics/case-classes-and-case-objects/#case-objects","text":"\u5728\u4e86\u89e3 case object \u4e4b\u524d\uff0c\u6211\u4eec\u5e94\u8be5\u4e86\u89e3\u4e00\u4e9b\u5173\u4e8e\u201c\u5e38\u89c4\u201d\u7684Scala\u5bf9\u8c61\u7684\u80cc\u666f\u77e5\u8bc6. \u4e00\u822c\u60c5\u51b5\u4e0b\u5f53\u6211\u4eec\u60f3\u521b\u5efa\u4e00\u4e2a\u5355\u4f8b\u5bf9\u8c61\u65f6\uff0c\u4f1a\u4f7f\u7528Scala\u5bf9\u8c61. \"\u4e0e\u7c7b\u7684\u5355\u4e2a\u5b9e\u4f8b\u65e0\u5173\u7684\u65b9\u6cd5\u548c\u503c\u5e94\u8be5\u5c5e\u4e8e\u5355\u4f8b\u5bf9\u8c61\uff0c\u4f7f\u7528\u5173\u952e\u5b57 object \u800c\u4e0d\u662f class \u8868\u793a.\" \u4e00\u4e2a\u5e38\u89c1\u7684 object \u4f7f\u7528\u573a\u666f\u662f\u521b\u5efa\u4e00\u4e2a\u201c\u5de5\u5177\u96c6\u201d\u5bf9\u8c61\u65f6\uff0c\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b\uff1a object TimeOps { def convertDate2Timestamp(date: String, pattern: String): Long = ... def dayOfWeek(date: String): Int = ... def isReskDay(date: String): Boolean = ... } \u8fd9\u662f\u4f7f\u7528 object \u7ed3\u6784\u7684\u901a\u7528\u65b9\u5f0f.","title":"Case Objects"},{"location":"basics/case-classes-and-case-objects/#case-objects_1","text":"case object \u7c7b\u4f3c\u4e8e object \uff0c\u5c31\u50cf case class \u6bd4\u666e\u901a\u7684 class \u5177\u6709\u66f4\u591a\u7279\u6027\u4e00\u6837\uff0c case object \u6bd4\u666e\u901a\u7684 object \u5177\u6709\u66f4\u591a\u7279\u6027\u3002\u5176\u7279\u6027\u5982\u4e0b\uff1a \u5b83\u662f\u53ef\u5e8f\u5217\u5316\u7684 \u5b83\u5177\u6709\u9ed8\u8ba4\u7684 hashCode \u65b9\u6cd5\u5b9e\u73b0 \u5b83\u5177\u6709\u6539\u8fdb\u7684 toString \u65b9\u6cd5\u5b9e\u73b0 \u6b63\u662f\u7531\u4e8e\u8fd9\u4e9b\u7279\u6027\uff0c case object \u4e3b\u8981\u5728\u4e24\u4e2a\u573a\u666f\u4f7f\u7528\uff1a \u521b\u5efa\u679a\u4e3e\u65f6 \u4e3a\u8981\u5728\u5176\u4ed6\u5bf9\u8c61\u4e4b\u95f4\u4f20\u9012\u7684\"\u6d88\u606f\"\u521b\u5efa\u5bb9\u5668\u65f6\uff08\u4f8b\u5982\u4f7f\u7528 Akka actor \u5e93\uff09","title":"Case objects"},{"location":"basics/case-classes-and-case-objects/#creating-enumerations-with-case-objects","text":"Scala\u4e2d\u7ec4\u7ec7\u679a\u4e3e\u7684\u5177\u4f53\u65b9\u5f0f\uff0c\u89c1\u5982\u4e0b\u4ee3\u7801\u793a\u4f8b: sealed trait Channel object Channel { case object Sold extends Channel case object Leased extends Channel } \u6211\u4eec\u53ef\u4ee5\u540c\u5982\u4e0b\u4ee3\u7801\u6240\u793a\u4f7f\u7528\u8fd9\u4e9b\u679a\u4e3e: case class House ( price: BigDecimal, channel: Channel, area: Double )","title":"Creating enumerations with case objects"},{"location":"basics/case-classes-and-case-objects/#using-case-objects-as-messages","text":"case object \u7684\u53e6\u4e00\u4e2a\u4f7f\u7528\u573a\u666f\u662f\uff0c\u5f53\u4f60\u60f3\u8981\u5bf9\"\u6d88\u606f\"\u7684\u6982\u5ff5\u8fdb\u884c\u5efa\u6a21\u65f6. \u4f8b\u5982\uff0c\u5047\u8bbe\u4f60\u6b63\u5728\u7f16\u5199\u4e00\u4e2a\u50cf\u82f9\u679cSiri\u8fd9\u6837\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u4e14\u4f60\u5e0c\u671b\u80fd\u591f\u4f20\u9012\"\u8bf4\u8bdd\"\u6d88\u606f\uff0c\u4f8b\u5982\"\u8bf4\u51fa\u968f\u9644\u7684\u6587\u672c\"\uff0c\"\u505c\u6b62\u8bf4\u8bdd\"\uff0c\"\u6682\u505c\"\u548c\"\u6062\u590d\"\u3002\u5728 Scala \u4e2d\uff0c\u4f60\u53ef\u4ee5\u4e3a\u8fd9\u4e9b\u6d88\u606f\u521b\u5efa\u5355\u4f8b\u5bf9\u8c61\uff0c\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: case class StartSpeakingMessage(textToSpeak: String) case object StopSpeakingMessage case object PauseSpeakingMessage case object ResumeSpeakingMessage \u6ce8\u610f\uff0c StartSpeakMessage \u88ab\u5b9a\u4e49\u4e3a case class \u800c\u4e0d\u662f case object . \u8fd9\u662f\u56e0\u4e3a\u5bf9\u8c61\u4e0d\u80fd\u6709\u4efb\u4f55\u6784\u9020\u51fd\u6570\u53c2\u6570. \u7ed9\u5b9a\u8fd9\u4e9b\u6d88\u606f\uff0c\u5982\u679cSiri\u662f\u4f7f\u7528Akka\u5e93\u7f16\u5199\u7684\uff0c\u90a3\u4e48\u60a8\u5c06\u5728\"speak\"\u7c7b\u4e2d\u627e\u5230\u8fd9\u6837\u7684\u4ee3\u7801\uff1a class Speak extends Actor { def receive = { case StartSpeakingMessage(textToSpeak) => // code to speak the text case StopSpeakingMessage => // code to stop speaking case PauseSpeakingMessage => // code to pause speaking case ResumeSpeakingMessage => // code to resume speaking } } \u5982\u4f60\u6240\u89c1, \u8fd9\u662f\u5728 Scala \u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f20\u9012\u6d88\u606f\u7684\u597d\u65b9\u6cd5.","title":"Using case objects as messages"},{"location":"basics/classes/","text":"Classes \u4e3a\u4e86\u652f\u6301\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff0cScala\u63d0\u4f9b\u4e86\u7c7b\u7ed3\u6784\uff0c\u76f8\u6bd4\u4e8eJava\u548cC#\u7b49\u8bed\u8a00\uff0c\u5b83\u7684\u8bed\u6cd5\u66f4\u4e3a\u7b80\u6d01, \u4f46\u4ed6\u4ecd\u7136\u662f\u6613\u7528\u4e14\u53ef\u8bfb\u7684. Basic Class Constructors \u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u7c7b\uff0c\u5e76\u5b9a\u4e49\u4e00\u4e2a\u6709\u4e24\u4e2a\u53c2\u6570\u7684\u7c7b\u6784\u9020\u5668, \u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: class Person(var firstName: String, var lastName: String) // Use Class Person val person = new Person(\"Andrew\", \"Li\") println(person.firstName + \" \" + person.lastName) // Andrew Li \u5728Scala\u7c7b\u6784\u9020\u5668\u4e2d\u5b9a\u4e49\u7684\u6240\u6709\u53c2\u6570\uff0c\u90fd\u4f1a\u5728\u7f16\u8bd1\u671f\u95f4\u81ea\u52a8\u5728\u7c7b\u4e2d\u521b\u5efa\u51fa\u5bf9\u5e94\u7684\u53d8\u91cf\uff0c\u5982\u793a\u4f8b\u53ef\u89c1\uff0c\u6784\u9020\u5668\u5b9a\u4e49\u4e86\u4e24\u4e2a var \u53d8\u91cf\uff0c\u56e0\u6b64\u4ed6\u4eec\u90fd\u662f\u53ef\u4fee\u6539\u7684\uff0c\u4fee\u6539\u65b9\u5f0f\u89c1\u5982\u4e0b\u4ee3\u7801\u793a\u4f8b: person.firstName = \"Shuai\" println(person.firstName + \" \" + person.lastName) // Shuai Li \u6211\u4eec\u5bf9\u6bd4\u4e0b\u5728Scala\u548cJava\u4e2d\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7c7b\u7684\u533a\u522b\uff0c\u770b\u770bScala\u7684\u7c7b\u662f\u5426\u8db3\u591f\u7b80\u6d01\uff0c\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: // Create a class in Scala class Person(var firstName: String, var lastName: String) // Create a class in Java public class Person { private String firstName; private String lastName; public Person(String firstName, String lastName) { this.firstName = firstName; this.lastName = lastName; } public String getFirstName() { return this.firstName; } public void setFirstName(String firstName) { this.firstName = firstName; } public String getLastName() { return this.lastName; } public void setLastName(String lastName) { this.lastName = lastName; } } val makes fileds read-only \u524d\u8fb9\u63d0\u5230\uff0cPerson\u7c7b\u4e2d\u6240\u6709\u7684\u5b57\u6bb5\u90fd\u88ab\u5b9a\u4e49\u6210var, \u8fd9\u4e9b\u5b57\u6bb5\u662f\u53ef\u53d8\u7684.\u5b9e\u9645\u4e0a\u4f60\u4e5f\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u5b57\u6bb5\u5b9a\u4e49\u6210val\uff0c\u8fd9\u6837\u6240\u6709\u7684\u5b57\u6bb5\u5c06\u662f\u4e0d\u53ef\u53d8\u7684, \u5982\u4e0b\u4ee3\u7801\u793a\u4f8b\u6240\u89c1: class Person(val firstName: String, val lastName: String) // Use Person class val person = new Person(\"Andrew\", \"Li\") person.firstName = \"Shuai\" // error: reassignment to val Tip: \u5f53\u4f60\u4f7f\u7528Scala\u5b9e\u8df5\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u65f6\uff0c\u7528var\u6765\u5b9a\u4e49class\u7684\u53d8\u91cf\u663e\u7136\u66f4\u5408\u9002\uff0c\u56e0\u4e3a\u8fd9\u6837\u4f60\u53ef\u4ee5\u968f\u610f\u4fee\u6539\u5b83\u4eec. \u4f46\u662f\u5728\u4f7f\u7528Scala\u5b9e\u8df5\u51fd\u6570\u5f0f\u7f16\u7a0b\u65f6, \u4e00\u822c\u6211\u4eec\u4f1a\u4f7f\u7528case class\u800c\u4e0d\u5728\u662fclass, case class\u9002\u5408\u4e8e\u4e0d\u53ef\u53d8\u5f97\u6570\u636e\uff0c\u51fd\u6570\u5f0f\u7f16\u7a0b\u91cc\u6570\u636e\u7684\u4e0d\u53ef\u53d8\u662f\u88ab\u63d0\u5021\u7684\uff0c\u56e0\u4e3a\u4e0d\u53ef\u53d8\u4f1a\u4fdd\u8bc1\u7a0b\u5e8f\u7684\u5065\u58ee\u6027. Class Structure \u5728Scala\u4e2d, class\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u7ec4\u6210\u90e8\u5206: class\u6784\u9020\u5668\u7684\u53c2\u6570 \u7c7b\u4e3b\u4f53\u4e2d\u5b9a\u4e49\u7684\u88ab\u8c03\u7528\u7684\u65b9\u6cd5 \u7c7b\u4e3b\u4f53\u4e2d\u80fd\u591f\u5728\u521d\u59cb\u5316(new)\u65f6\u88ab\u76f4\u63a5\u6267\u884c\u7684\u8bed\u53e5\u548c\u8868\u8fbe\u5f0f \u5f53\u7136\u4e86\uff0c\u9664\u4e86\u6784\u9020\u5668\u4e2d\u7684\u53d8\u91cf\uff0c\u4f60\u53ef\u4ee5\u5728class\u4e2d\u5b9a\u4e49\u4e00\u4e9b\u53d8\u91cf, \u8ddfJava\u6781\u5176\u76f8\u4f3c\uff0c\u8fd9\u4e9b\u53d8\u91cf\u5c06\u4f1a\u5728class\u521d\u59cb\u5316\u65f6\u88ab\u5206\u914d\u6307\u5b9a\u7684\u503c. \u5982\u4e0b\u4ee3\u7801\u793a\u4f8b\u5c55\u793a\u4e86\u4f60\u80fd\u5728class\u4e2d\u8fdb\u884c\u7684\u4e00\u4e9b\u64cd\u4f5c: class Person(var firstName: String, var lastName: String) { println(\"the constructor begins\") // 'public' access by default var age = 0 // some class fields private val AMOUNT_OF_EYES = 2 // some methods override def toString(): String = s\"$firstName $lastName is $age years old\" def printAmountOfEyes(): Unit = println(s\"AMOUNT_OF_EYES = $AMOUNT_OF_EYES\") def printDescription(): Unit = println(this) printAmountOfEyes() printDescription() println(\"you've reached the end of the constructor\") } var person = new Person(\"Andrew\", \"Li\") // When executing the above code to init person object, we can see those logs as follows: // the constructor begins // AMOUNT_OF_EYES = 2 // Andrew Li is 0 years old // you've reached the end of the constructor Auxiliary Class Constructors \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49this\u65b9\u6cd5\u6765\u5b9a\u4e49\"\u8865\u5145\u7c7b\u6784\u9020\u5668\", \u5728\u5b9a\u4e49\u8865\u5145\u7c7b\u6784\u9020\u5668\u65f6\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u51e0\u70b9: \u6bcf\u4e2a\u8865\u5145\u7c7b\u6784\u9020\u5668\u5fc5\u987b\u6709\u4e0d\u540c\u7684\u65b9\u6cd5\u7b7e\u540d(\u5728\u8fd9\u91cc\u4e3b\u8981\u662f\u4e0d\u540c\u7c7b\u6784\u9020\u5668\u7684\u7684\u53c2\u6570\u5fc5\u987b\u4e0d\u540c) \u6bcf\u4e2a\u8865\u5145\u7c7b\u6784\u9020\u5668\u5fc5\u987b\u8c03\u7528\u4e00\u4e2a\u4e4b\u524d\u5df2\u7ecf\u5b9a\u4e49\u597d\u7684\u6784\u9020\u5668 \u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: // the primary constructor class Person (var name: String, var age: Int) { // one-arg auxiliary constructor def this(age: Int) = { this(\"default name\", age) } // one-arg auxiliary constructor def this(name: String) = { this(name, 0) } // zero-arg auxiliary constructor def this() = { this(\"default name\", 0) } override def toString = s\"The person called $name is $age years old\" } Tip: \u8865\u5145\u7c7b\u6784\u9020\u5668\u662f\u4e00\u4e2a\u597d\u7684\u7279\u6027\uff0c\u4f46\u662f\u56e0\u4e3aScala\u4e2d\u6211\u4eec\u53ef\u4ee5\u7ed9\u53c2\u6570\u6307\u5b9a\u9ed8\u8ba4\u503c\uff0c\u56e0\u6b64\u5b9e\u9645\u4e0a\u8865\u5145\u7c7b\u6784\u9020\u5668\u4f7f\u7528\u7684\u573a\u666f\u5e76\u4e0d\u591a, \u5728\u4e0b\u4e00\u8282\u4e2d\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u7ed9\u53c2\u6570\u6307\u5b9a\u9ed8\u8ba4\u503c. Supplying Default Values for Constructor Parameters Scala\u652f\u6301\u6211\u4eec\u7ed9\u7c7b\u6784\u9020\u5668\u6307\u5b9a\u9ed8\u8ba4\u503c, \u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: class Socket(var timeout: Int = 2000, var linger: Int = 3000) { override def toString = s\"timeout: $timeout, linger: $linger\" } \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u793a\u4f8b\u4e2d\u7684\u51e0\u79cd\u65b9\u5f0f\u521b\u5efaSocket\u5bf9\u8c61: new Socket() new Socket(1000) new Socket(4000, 6000) Benefits: \u4f60\u53ef\u4ee5\u63d0\u4f9b\u9996\u9009\u7684, \u9ed8\u8ba4\u7684\u503c\u4e3a\u4f60\u7684\u7c7b\u6784\u9020\u5668\u53c2\u6570 \u8fd9\u5c06\u5141\u8bb8\u4f7f\u7528\u4f60\u5b9a\u4e49\u7684\u7c7b\u7684\u5f00\u53d1\u8005\u6839\u636e\u4ed6\u4eec\u81ea\u5df1\u7684\u8981\u6c42\u8986\u76d6\u90a3\u4e9b\u9ed8\u8ba4\u503c Bonus: Named parameters Scala\u8fd8\u6709\u4e00\u4e2a\u6709\u7528\u7684\u7279\u6027\uff0c\u5f53\u4f60\u5728\u521b\u5efa\u7c7b\u5b9e\u4f8b\u7684\u65f6\u5019\u53ef\u4ee5\u4f60\u53ef\u4ee5\u4f7f\u7528\u547d\u540d\u7684\u53c2\u6570\uff0c\u89c1\u5982\u4e0b\u4ee3\u7801\u793a\u4f8b: val socket = new Socket(linger=3000, timeout=2000) val socket = new Socket(timeout=2000) val socket = new Socket(linger=3000) \u5f88\u660e\u663e\uff0c\u5982\u4e0a\u7684\u793a\u4f8b\u5c06\u6bd4\u5982\u4e0b\u793a\u4f8b\u66f4\u5177\u53ef\u8bfb\u6027: val socket = new Socket(2000, 3000) Basic Scala Methods \u5728Scala\u4e2d, \u65b9\u6cd5\u662f\u88ab\u5b9a\u4e49\u5728\u7c7b\u91cc\u7684, \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u770b\u4e00\u4e0b\u5e38\u89c1\u7684\u7528\u6cd5, \u89c1\u5982\u4e0b\u4ee3\u7801\u793a\u4f8b: def double(a: Int) = a * a // Explicitly declare the return value def double(a: Int): Int = a * a \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u662f\u5426\u663e\u5f0f\u58f0\u660e\u5f0f\u6211\u4eec\u7684\u81ea\u7531\uff0c\u4f46\u662f\u4e00\u822c\u51fd\u6570\u4f53\u903b\u8f91\u7b80\u5355\u4e14\u8fd4\u56de\u503c\u7c7b\u578b\u6bd4\u8f83\u5bb9\u6613\u770b\u51fa\u6765\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u663e\u5f0f\u58f0\u660e, \u5f53\u8fd4\u56de\u503c\u7c7b\u578b\u662f\u6211\u4eec\u7684\u81ea\u5b9a\u4e49\u7c7b\u578b\u5e76\u4e14\u65b9\u6cd5\u4f53\u903b\u8f91\u6bd4\u8f83\u590d\u6742\u65e0\u6cd5\u4e00\u773c\u770b\u51fa\u6765\u8fd4\u56de\u503c\uff0c\u63a8\u8350\u663e\u5f0f\u58f0\u660e\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u8fd9\u6837\u80fd\u663e\u8457\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027. \u65b9\u6cd5\u7684\u7ed3\u6784\u8bf4\u660e: def \u662f\u58f0\u660e\u65b9\u6cd5\u7684\u5173\u952e\u5b57 double \u662f\u65b9\u6cd5\u7684\u540d\u79f0\uff0c\u5c3d\u91cf\u7528\u4e1a\u52a1\u542b\u4e49\u4e3a\u65b9\u6cd5\u547d\u540d a: Int \u662f\u65b9\u6cd5\u7684\u53c2\u6570, a \u662f\u53c2\u6570\u540d, Int \u662f\u53c2\u6570\u7c7b\u578b : Int \u662f\u663e\u5f0f\u58f0\u660e\u4e86\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u7c7b\u578b a * a \u662f\u65b9\u6cd5\u4f53\uff0c\u5355\u884c\u65b9\u6cd5\u4f53\u53ef\u4ee5\u7528\u76f4\u63a5\u7528 = \u5b9a\u4e49\uff0c\u5982\u4e0a\u8ff0\u4ee3\u7801\u793a\u4f8b, \u591a\u884c\u65b9\u6cd5\u4f53\u9700\u8981\u4f7f\u7528 {} \u5b9a\u4e49\uff0c\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: def addThenDouble(a: Int, b: Int): Int = { val sum = a + b val doubled = sum * 2 doubled }","title":"Class"},{"location":"basics/classes/#classes","text":"\u4e3a\u4e86\u652f\u6301\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff0cScala\u63d0\u4f9b\u4e86\u7c7b\u7ed3\u6784\uff0c\u76f8\u6bd4\u4e8eJava\u548cC#\u7b49\u8bed\u8a00\uff0c\u5b83\u7684\u8bed\u6cd5\u66f4\u4e3a\u7b80\u6d01, \u4f46\u4ed6\u4ecd\u7136\u662f\u6613\u7528\u4e14\u53ef\u8bfb\u7684.","title":"Classes"},{"location":"basics/classes/#basic-class-constructors","text":"\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u7c7b\uff0c\u5e76\u5b9a\u4e49\u4e00\u4e2a\u6709\u4e24\u4e2a\u53c2\u6570\u7684\u7c7b\u6784\u9020\u5668, \u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: class Person(var firstName: String, var lastName: String) // Use Class Person val person = new Person(\"Andrew\", \"Li\") println(person.firstName + \" \" + person.lastName) // Andrew Li \u5728Scala\u7c7b\u6784\u9020\u5668\u4e2d\u5b9a\u4e49\u7684\u6240\u6709\u53c2\u6570\uff0c\u90fd\u4f1a\u5728\u7f16\u8bd1\u671f\u95f4\u81ea\u52a8\u5728\u7c7b\u4e2d\u521b\u5efa\u51fa\u5bf9\u5e94\u7684\u53d8\u91cf\uff0c\u5982\u793a\u4f8b\u53ef\u89c1\uff0c\u6784\u9020\u5668\u5b9a\u4e49\u4e86\u4e24\u4e2a var \u53d8\u91cf\uff0c\u56e0\u6b64\u4ed6\u4eec\u90fd\u662f\u53ef\u4fee\u6539\u7684\uff0c\u4fee\u6539\u65b9\u5f0f\u89c1\u5982\u4e0b\u4ee3\u7801\u793a\u4f8b: person.firstName = \"Shuai\" println(person.firstName + \" \" + person.lastName) // Shuai Li \u6211\u4eec\u5bf9\u6bd4\u4e0b\u5728Scala\u548cJava\u4e2d\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7c7b\u7684\u533a\u522b\uff0c\u770b\u770bScala\u7684\u7c7b\u662f\u5426\u8db3\u591f\u7b80\u6d01\uff0c\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: // Create a class in Scala class Person(var firstName: String, var lastName: String) // Create a class in Java public class Person { private String firstName; private String lastName; public Person(String firstName, String lastName) { this.firstName = firstName; this.lastName = lastName; } public String getFirstName() { return this.firstName; } public void setFirstName(String firstName) { this.firstName = firstName; } public String getLastName() { return this.lastName; } public void setLastName(String lastName) { this.lastName = lastName; } }","title":"Basic Class Constructors"},{"location":"basics/classes/#val-makes-fileds-read-only","text":"\u524d\u8fb9\u63d0\u5230\uff0cPerson\u7c7b\u4e2d\u6240\u6709\u7684\u5b57\u6bb5\u90fd\u88ab\u5b9a\u4e49\u6210var, \u8fd9\u4e9b\u5b57\u6bb5\u662f\u53ef\u53d8\u7684.\u5b9e\u9645\u4e0a\u4f60\u4e5f\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u5b57\u6bb5\u5b9a\u4e49\u6210val\uff0c\u8fd9\u6837\u6240\u6709\u7684\u5b57\u6bb5\u5c06\u662f\u4e0d\u53ef\u53d8\u7684, \u5982\u4e0b\u4ee3\u7801\u793a\u4f8b\u6240\u89c1: class Person(val firstName: String, val lastName: String) // Use Person class val person = new Person(\"Andrew\", \"Li\") person.firstName = \"Shuai\" // error: reassignment to val Tip: \u5f53\u4f60\u4f7f\u7528Scala\u5b9e\u8df5\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u65f6\uff0c\u7528var\u6765\u5b9a\u4e49class\u7684\u53d8\u91cf\u663e\u7136\u66f4\u5408\u9002\uff0c\u56e0\u4e3a\u8fd9\u6837\u4f60\u53ef\u4ee5\u968f\u610f\u4fee\u6539\u5b83\u4eec. \u4f46\u662f\u5728\u4f7f\u7528Scala\u5b9e\u8df5\u51fd\u6570\u5f0f\u7f16\u7a0b\u65f6, \u4e00\u822c\u6211\u4eec\u4f1a\u4f7f\u7528case class\u800c\u4e0d\u5728\u662fclass, case class\u9002\u5408\u4e8e\u4e0d\u53ef\u53d8\u5f97\u6570\u636e\uff0c\u51fd\u6570\u5f0f\u7f16\u7a0b\u91cc\u6570\u636e\u7684\u4e0d\u53ef\u53d8\u662f\u88ab\u63d0\u5021\u7684\uff0c\u56e0\u4e3a\u4e0d\u53ef\u53d8\u4f1a\u4fdd\u8bc1\u7a0b\u5e8f\u7684\u5065\u58ee\u6027.","title":"val makes fileds read-only"},{"location":"basics/classes/#class-structure","text":"\u5728Scala\u4e2d, class\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\u7ec4\u6210\u90e8\u5206: class\u6784\u9020\u5668\u7684\u53c2\u6570 \u7c7b\u4e3b\u4f53\u4e2d\u5b9a\u4e49\u7684\u88ab\u8c03\u7528\u7684\u65b9\u6cd5 \u7c7b\u4e3b\u4f53\u4e2d\u80fd\u591f\u5728\u521d\u59cb\u5316(new)\u65f6\u88ab\u76f4\u63a5\u6267\u884c\u7684\u8bed\u53e5\u548c\u8868\u8fbe\u5f0f \u5f53\u7136\u4e86\uff0c\u9664\u4e86\u6784\u9020\u5668\u4e2d\u7684\u53d8\u91cf\uff0c\u4f60\u53ef\u4ee5\u5728class\u4e2d\u5b9a\u4e49\u4e00\u4e9b\u53d8\u91cf, \u8ddfJava\u6781\u5176\u76f8\u4f3c\uff0c\u8fd9\u4e9b\u53d8\u91cf\u5c06\u4f1a\u5728class\u521d\u59cb\u5316\u65f6\u88ab\u5206\u914d\u6307\u5b9a\u7684\u503c. \u5982\u4e0b\u4ee3\u7801\u793a\u4f8b\u5c55\u793a\u4e86\u4f60\u80fd\u5728class\u4e2d\u8fdb\u884c\u7684\u4e00\u4e9b\u64cd\u4f5c: class Person(var firstName: String, var lastName: String) { println(\"the constructor begins\") // 'public' access by default var age = 0 // some class fields private val AMOUNT_OF_EYES = 2 // some methods override def toString(): String = s\"$firstName $lastName is $age years old\" def printAmountOfEyes(): Unit = println(s\"AMOUNT_OF_EYES = $AMOUNT_OF_EYES\") def printDescription(): Unit = println(this) printAmountOfEyes() printDescription() println(\"you've reached the end of the constructor\") } var person = new Person(\"Andrew\", \"Li\") // When executing the above code to init person object, we can see those logs as follows: // the constructor begins // AMOUNT_OF_EYES = 2 // Andrew Li is 0 years old // you've reached the end of the constructor","title":"Class Structure"},{"location":"basics/classes/#auxiliary-class-constructors","text":"\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b9a\u4e49this\u65b9\u6cd5\u6765\u5b9a\u4e49\"\u8865\u5145\u7c7b\u6784\u9020\u5668\", \u5728\u5b9a\u4e49\u8865\u5145\u7c7b\u6784\u9020\u5668\u65f6\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u51e0\u70b9: \u6bcf\u4e2a\u8865\u5145\u7c7b\u6784\u9020\u5668\u5fc5\u987b\u6709\u4e0d\u540c\u7684\u65b9\u6cd5\u7b7e\u540d(\u5728\u8fd9\u91cc\u4e3b\u8981\u662f\u4e0d\u540c\u7c7b\u6784\u9020\u5668\u7684\u7684\u53c2\u6570\u5fc5\u987b\u4e0d\u540c) \u6bcf\u4e2a\u8865\u5145\u7c7b\u6784\u9020\u5668\u5fc5\u987b\u8c03\u7528\u4e00\u4e2a\u4e4b\u524d\u5df2\u7ecf\u5b9a\u4e49\u597d\u7684\u6784\u9020\u5668 \u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: // the primary constructor class Person (var name: String, var age: Int) { // one-arg auxiliary constructor def this(age: Int) = { this(\"default name\", age) } // one-arg auxiliary constructor def this(name: String) = { this(name, 0) } // zero-arg auxiliary constructor def this() = { this(\"default name\", 0) } override def toString = s\"The person called $name is $age years old\" } Tip: \u8865\u5145\u7c7b\u6784\u9020\u5668\u662f\u4e00\u4e2a\u597d\u7684\u7279\u6027\uff0c\u4f46\u662f\u56e0\u4e3aScala\u4e2d\u6211\u4eec\u53ef\u4ee5\u7ed9\u53c2\u6570\u6307\u5b9a\u9ed8\u8ba4\u503c\uff0c\u56e0\u6b64\u5b9e\u9645\u4e0a\u8865\u5145\u7c7b\u6784\u9020\u5668\u4f7f\u7528\u7684\u573a\u666f\u5e76\u4e0d\u591a, \u5728\u4e0b\u4e00\u8282\u4e2d\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u7ed9\u53c2\u6570\u6307\u5b9a\u9ed8\u8ba4\u503c.","title":"Auxiliary Class Constructors"},{"location":"basics/classes/#supplying-default-values-for-constructor-parameters","text":"Scala\u652f\u6301\u6211\u4eec\u7ed9\u7c7b\u6784\u9020\u5668\u6307\u5b9a\u9ed8\u8ba4\u503c, \u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: class Socket(var timeout: Int = 2000, var linger: Int = 3000) { override def toString = s\"timeout: $timeout, linger: $linger\" } \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u793a\u4f8b\u4e2d\u7684\u51e0\u79cd\u65b9\u5f0f\u521b\u5efaSocket\u5bf9\u8c61: new Socket() new Socket(1000) new Socket(4000, 6000) Benefits: \u4f60\u53ef\u4ee5\u63d0\u4f9b\u9996\u9009\u7684, \u9ed8\u8ba4\u7684\u503c\u4e3a\u4f60\u7684\u7c7b\u6784\u9020\u5668\u53c2\u6570 \u8fd9\u5c06\u5141\u8bb8\u4f7f\u7528\u4f60\u5b9a\u4e49\u7684\u7c7b\u7684\u5f00\u53d1\u8005\u6839\u636e\u4ed6\u4eec\u81ea\u5df1\u7684\u8981\u6c42\u8986\u76d6\u90a3\u4e9b\u9ed8\u8ba4\u503c","title":"Supplying Default Values for Constructor Parameters"},{"location":"basics/classes/#bonus-named-parameters","text":"Scala\u8fd8\u6709\u4e00\u4e2a\u6709\u7528\u7684\u7279\u6027\uff0c\u5f53\u4f60\u5728\u521b\u5efa\u7c7b\u5b9e\u4f8b\u7684\u65f6\u5019\u53ef\u4ee5\u4f60\u53ef\u4ee5\u4f7f\u7528\u547d\u540d\u7684\u53c2\u6570\uff0c\u89c1\u5982\u4e0b\u4ee3\u7801\u793a\u4f8b: val socket = new Socket(linger=3000, timeout=2000) val socket = new Socket(timeout=2000) val socket = new Socket(linger=3000) \u5f88\u660e\u663e\uff0c\u5982\u4e0a\u7684\u793a\u4f8b\u5c06\u6bd4\u5982\u4e0b\u793a\u4f8b\u66f4\u5177\u53ef\u8bfb\u6027: val socket = new Socket(2000, 3000)","title":"Bonus: Named parameters"},{"location":"basics/classes/#basic-scala-methods","text":"\u5728Scala\u4e2d, \u65b9\u6cd5\u662f\u88ab\u5b9a\u4e49\u5728\u7c7b\u91cc\u7684, \u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u770b\u4e00\u4e0b\u5e38\u89c1\u7684\u7528\u6cd5, \u89c1\u5982\u4e0b\u4ee3\u7801\u793a\u4f8b: def double(a: Int) = a * a // Explicitly declare the return value def double(a: Int): Int = a * a \u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u662f\u5426\u663e\u5f0f\u58f0\u660e\u5f0f\u6211\u4eec\u7684\u81ea\u7531\uff0c\u4f46\u662f\u4e00\u822c\u51fd\u6570\u4f53\u903b\u8f91\u7b80\u5355\u4e14\u8fd4\u56de\u503c\u7c7b\u578b\u6bd4\u8f83\u5bb9\u6613\u770b\u51fa\u6765\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u663e\u5f0f\u58f0\u660e, \u5f53\u8fd4\u56de\u503c\u7c7b\u578b\u662f\u6211\u4eec\u7684\u81ea\u5b9a\u4e49\u7c7b\u578b\u5e76\u4e14\u65b9\u6cd5\u4f53\u903b\u8f91\u6bd4\u8f83\u590d\u6742\u65e0\u6cd5\u4e00\u773c\u770b\u51fa\u6765\u8fd4\u56de\u503c\uff0c\u63a8\u8350\u663e\u5f0f\u58f0\u660e\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u8fd9\u6837\u80fd\u663e\u8457\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027. \u65b9\u6cd5\u7684\u7ed3\u6784\u8bf4\u660e: def \u662f\u58f0\u660e\u65b9\u6cd5\u7684\u5173\u952e\u5b57 double \u662f\u65b9\u6cd5\u7684\u540d\u79f0\uff0c\u5c3d\u91cf\u7528\u4e1a\u52a1\u542b\u4e49\u4e3a\u65b9\u6cd5\u547d\u540d a: Int \u662f\u65b9\u6cd5\u7684\u53c2\u6570, a \u662f\u53c2\u6570\u540d, Int \u662f\u53c2\u6570\u7c7b\u578b : Int \u662f\u663e\u5f0f\u58f0\u660e\u4e86\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u7c7b\u578b a * a \u662f\u65b9\u6cd5\u4f53\uff0c\u5355\u884c\u65b9\u6cd5\u4f53\u53ef\u4ee5\u7528\u76f4\u63a5\u7528 = \u5b9a\u4e49\uff0c\u5982\u4e0a\u8ff0\u4ee3\u7801\u793a\u4f8b, \u591a\u884c\u65b9\u6cd5\u4f53\u9700\u8981\u4f7f\u7528 {} \u5b9a\u4e49\uff0c\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: def addThenDouble(a: Int, b: Int): Int = { val sum = a + b val doubled = sum * 2 doubled }","title":"Basic Scala Methods"},{"location":"basics/companion-object/","text":"Companion Object Scala\u4e2d\u7c7b\u548c\u5bf9\u8c61\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u540d\u79f0, \u5728\u8fd9\u79cd\u573a\u666f\u4e0b\u7684\u7c7b\u79f0\u4e4b\u4e3a\u4f34\u751f\u7c7b\uff0c\u5bf9\u8c61\u79f0\u4e4b\u4e3a\u4f34\u751f\u5bf9\u8c61, \u8fd9\u662fScala\u7684\u7279\u6027. Meaning \u8003\u8651\u5230\u4e0eJava\u7684\u517c\u5bb9\u6027,\u5f15\u5165\u4e86 \u4f34\u751f \u7684\u7279\u6027. \u5b9e\u9645\u4e0aJava\u4e2d static variables \u7684\u8bbe\u8ba1\u7834\u574f\u4e86\u9762\u5411\u5bf9\u8c61\u89c4\u8303\u7684\u5b8c\u6574\u6027 1 , \u56e0\u6b64Scala\u5728\u8bbe\u8ba1\u4e4b\u521d\u5c31\u653e\u5f03\u4e86 static \u7279\u6027, \u8bbe\u8ba1\u4e86 \u4f34\u751f \u6765\u4fdd\u8bc1\u517c\u5bb9\u6027. \u8003\u8651\u5230JVM\u7684\u4f18\u5316. \u6211\u4eec\u77e5\u9053Java\u4e2d\u9759\u6001\u5c5e\u6027\u4f1a\u5728\u6574\u4e2aJVM\u4e2d\u4ec5\u5f00\u8f9f\u4e00\u5757\u5185\u5b58\u7a7a\u95f4, \u76f8\u6bd4\u4e8e\u5b9e\u4f8b\u5c5e\u6027\u8282\u7701\u4e86\u5927\u91cf\u5185\u5b58\u8d44\u6e90\uff0c\u800cScala\u4e2d\u7684 \u4f34\u751f\u5bf9\u8c61 \u627f\u8f7d\u7684\u4e3b\u8981\u5c31\u662f\u9759\u6001\u5c5e\u6027\uff0c\u56e0\u6b64 \u4f34\u751f \u4f1a\u8282\u7701\u5927\u91cf\u7684\u5185\u5b58\u8d44\u6e90. How to use \u521b\u5efa\u4e00\u5bf9\u7b80\u5355\u7684\u4f34\u751f\u7c7b\u548c\u4f34\u751f\u5bf9\u8c61, \u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: class Demo { private val class_var = 10; def init(): Unit = { // codes } } object Demo { private val object_var = \"demo\"; def access(): Unit = { // codes } } \u4f34\u751f\u7c7b\u548c\u4f34\u751f\u5bf9\u8c61\u9700\u8981\u9075\u5faa\u5982\u4e0b\u89c4\u5219: \u4f34\u751f\u7c7b\u4e2d\u5b9e\u73b0\u6240\u6709\u7684\u5b9e\u4f8b\u6210\u5458 \u4f34\u751f\u5bf9\u8c61\u4e2d\u5b9e\u73b0\u6240\u6709\u7684\u9759\u6001\u53d8\u91cf \u4f34\u751f\u7c7b\u4e0e\u4f34\u751f\u5bf9\u8c61\u540c\u540d\u540c\u6587\u4ef6 Features \u4f34\u751f \u7279\u6027\u6709\u5982\u4e0b\u4e24\u4e2a\u7279\u70b9: \u5728\u540c\u4e00\u4e2a\u7c7b\u6587\u4ef6\u65e2\u53ef\u5b9a\u4e49\u5b9e\u4f8b\u6210\u5458\uff0c\u53c8\u53ef\u5b9a\u4e49\u9759\u6001\u6210\u5458 \u4f34\u751f\u7c7b\u548c\u4f34\u751f\u5bf9\u8c61\u53ef\u4ee5\u4e92\u76f8\u8bbf\u95ee\u5bf9\u65b9\u7684\u79c1\u6709\u53d8\u91cf\u53ca\u65b9\u6cd5 \u79c1\u6709\u53d8\u91cf\u548c\u65b9\u6cd5\u7684\u4e92\u76f8\u8bbf\u95ee\u65b9\u5f0f\u53ef\u89c1\u5982\u4e0b\u4ee3\u7801\u793a\u4f8b: class Demo { private val class_var = 10; def init(): Unit = { println(\"variable from class:\" + class_var) println(\"variable from object:\" + Demo.object_var) } } object Demo { private val object_var = \"demo\"; def access(): Unit = { println(\"variable from object:\" + object_var) val demo = new Demo() println(\"variable from class:\" + demo.class_var) } } object Main extends App { println(\"variable from object:\" + Demo.object_var); println(\"variable from class:\" + (new Demo()).class_var); } \u603b\u7ed3\u8d77\u6765\uff0c\u4f34\u751f\u7c7b\u548c\u4f34\u751f\u5bf9\u8c61\u4e92\u76f8\u8bbf\u95ee\u79c1\u6709\u5c5e\u6027\u4e3b\u8981\u9075\u5faa\u5982\u4e0b\u89c4\u5219: \u4f34\u751f\u7c7b\u4e2d\u901a\u8fc7 object\u540d \u7684 . \u64cd\u4f5c\u7b26\u6765\u8bbf\u95ee\u4f34\u751f\u5bf9\u8c61\u7684\u79c1\u6709\u5c5e\u6027 \u4f34\u751f\u5bf9\u8c61\u4e2d\u901a\u8fc7 class\u5b9e\u4f8b\u5bf9\u8c61 \u7684 . \u64cd\u4f5c\u7b26\u53f7\u8bbf\u95ee\u4f34\u751f\u7c7b\u7684\u79c1\u6709\u5c5e\u6027 Referrences [1] Why are static variables considered evil?, https://stackoverflow.com/questions/7026507/why-are-static-variables-considered-evil","title":"Companion Object"},{"location":"basics/companion-object/#companion-object","text":"Scala\u4e2d\u7c7b\u548c\u5bf9\u8c61\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u540d\u79f0, \u5728\u8fd9\u79cd\u573a\u666f\u4e0b\u7684\u7c7b\u79f0\u4e4b\u4e3a\u4f34\u751f\u7c7b\uff0c\u5bf9\u8c61\u79f0\u4e4b\u4e3a\u4f34\u751f\u5bf9\u8c61, \u8fd9\u662fScala\u7684\u7279\u6027.","title":"Companion Object"},{"location":"basics/companion-object/#meaning","text":"\u8003\u8651\u5230\u4e0eJava\u7684\u517c\u5bb9\u6027,\u5f15\u5165\u4e86 \u4f34\u751f \u7684\u7279\u6027. \u5b9e\u9645\u4e0aJava\u4e2d static variables \u7684\u8bbe\u8ba1\u7834\u574f\u4e86\u9762\u5411\u5bf9\u8c61\u89c4\u8303\u7684\u5b8c\u6574\u6027 1 , \u56e0\u6b64Scala\u5728\u8bbe\u8ba1\u4e4b\u521d\u5c31\u653e\u5f03\u4e86 static \u7279\u6027, \u8bbe\u8ba1\u4e86 \u4f34\u751f \u6765\u4fdd\u8bc1\u517c\u5bb9\u6027. \u8003\u8651\u5230JVM\u7684\u4f18\u5316. \u6211\u4eec\u77e5\u9053Java\u4e2d\u9759\u6001\u5c5e\u6027\u4f1a\u5728\u6574\u4e2aJVM\u4e2d\u4ec5\u5f00\u8f9f\u4e00\u5757\u5185\u5b58\u7a7a\u95f4, \u76f8\u6bd4\u4e8e\u5b9e\u4f8b\u5c5e\u6027\u8282\u7701\u4e86\u5927\u91cf\u5185\u5b58\u8d44\u6e90\uff0c\u800cScala\u4e2d\u7684 \u4f34\u751f\u5bf9\u8c61 \u627f\u8f7d\u7684\u4e3b\u8981\u5c31\u662f\u9759\u6001\u5c5e\u6027\uff0c\u56e0\u6b64 \u4f34\u751f \u4f1a\u8282\u7701\u5927\u91cf\u7684\u5185\u5b58\u8d44\u6e90.","title":"Meaning"},{"location":"basics/companion-object/#how-to-use","text":"\u521b\u5efa\u4e00\u5bf9\u7b80\u5355\u7684\u4f34\u751f\u7c7b\u548c\u4f34\u751f\u5bf9\u8c61, \u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: class Demo { private val class_var = 10; def init(): Unit = { // codes } } object Demo { private val object_var = \"demo\"; def access(): Unit = { // codes } } \u4f34\u751f\u7c7b\u548c\u4f34\u751f\u5bf9\u8c61\u9700\u8981\u9075\u5faa\u5982\u4e0b\u89c4\u5219: \u4f34\u751f\u7c7b\u4e2d\u5b9e\u73b0\u6240\u6709\u7684\u5b9e\u4f8b\u6210\u5458 \u4f34\u751f\u5bf9\u8c61\u4e2d\u5b9e\u73b0\u6240\u6709\u7684\u9759\u6001\u53d8\u91cf \u4f34\u751f\u7c7b\u4e0e\u4f34\u751f\u5bf9\u8c61\u540c\u540d\u540c\u6587\u4ef6","title":"How to use"},{"location":"basics/companion-object/#features","text":"\u4f34\u751f \u7279\u6027\u6709\u5982\u4e0b\u4e24\u4e2a\u7279\u70b9: \u5728\u540c\u4e00\u4e2a\u7c7b\u6587\u4ef6\u65e2\u53ef\u5b9a\u4e49\u5b9e\u4f8b\u6210\u5458\uff0c\u53c8\u53ef\u5b9a\u4e49\u9759\u6001\u6210\u5458 \u4f34\u751f\u7c7b\u548c\u4f34\u751f\u5bf9\u8c61\u53ef\u4ee5\u4e92\u76f8\u8bbf\u95ee\u5bf9\u65b9\u7684\u79c1\u6709\u53d8\u91cf\u53ca\u65b9\u6cd5 \u79c1\u6709\u53d8\u91cf\u548c\u65b9\u6cd5\u7684\u4e92\u76f8\u8bbf\u95ee\u65b9\u5f0f\u53ef\u89c1\u5982\u4e0b\u4ee3\u7801\u793a\u4f8b: class Demo { private val class_var = 10; def init(): Unit = { println(\"variable from class:\" + class_var) println(\"variable from object:\" + Demo.object_var) } } object Demo { private val object_var = \"demo\"; def access(): Unit = { println(\"variable from object:\" + object_var) val demo = new Demo() println(\"variable from class:\" + demo.class_var) } } object Main extends App { println(\"variable from object:\" + Demo.object_var); println(\"variable from class:\" + (new Demo()).class_var); } \u603b\u7ed3\u8d77\u6765\uff0c\u4f34\u751f\u7c7b\u548c\u4f34\u751f\u5bf9\u8c61\u4e92\u76f8\u8bbf\u95ee\u79c1\u6709\u5c5e\u6027\u4e3b\u8981\u9075\u5faa\u5982\u4e0b\u89c4\u5219: \u4f34\u751f\u7c7b\u4e2d\u901a\u8fc7 object\u540d \u7684 . \u64cd\u4f5c\u7b26\u6765\u8bbf\u95ee\u4f34\u751f\u5bf9\u8c61\u7684\u79c1\u6709\u5c5e\u6027 \u4f34\u751f\u5bf9\u8c61\u4e2d\u901a\u8fc7 class\u5b9e\u4f8b\u5bf9\u8c61 \u7684 . \u64cd\u4f5c\u7b26\u53f7\u8bbf\u95ee\u4f34\u751f\u7c7b\u7684\u79c1\u6709\u5c5e\u6027","title":"Features"},{"location":"basics/companion-object/#referrences","text":"[1] Why are static variables considered evil?, https://stackoverflow.com/questions/7026507/why-are-static-variables-considered-evil","title":"Referrences"},{"location":"basics/control-structures/","text":"Control Structures Scala\u62e5\u6709\u4f60\u5e0c\u671b\u80fd\u5728\u7f16\u7a0b\u8bed\u8a00\u4e2d\u627e\u5230\u7684\u57fa\u672c\u7684\u63a7\u5236\u7ed3\u6784\uff0c\u5982\u4e0b\u6240\u793a: if/then/else for loops try/catch/finally Scala\u4e5f\u6709\u51e0\u4e2a\u72ec\u7279\u7684\u63a7\u5236\u7ed3\u6784\uff0c\u5982\u4e0b\u6240\u793a: match expressions for expressions \u63a5\u4e0b\u6765\u8be6\u7ec6\u8bb2\u89e3\u8fd9\u4e9b\u63a7\u5236\u7ed3\u6784. if/then/else Structure \u4e09\u79cd\u5e38\u89c1\u7684\u4ee3\u7801\u793a\u4f8b if (x == y) { doSomething() } // another style if (x == y) doSomething() if (x == y) { doSomething() } else { doSomethingElse() } if (x == y) { doSomethingForXY() } else if (x == z) { doSomethingForXZ() } else { doSomethingElse() } if \u8868\u8fbe\u5f0f\u603b\u662f\u4f1a\u8fd4\u56de\u4e00\u4e2a\u7ed3\u679c Scala\u6709\u4e00\u4e2a\u597d\u7684\u7279\u6027\u5c31\u662fif\u7ed3\u6784\u603b\u662f\u4f1a\u8fd4\u56de\u4e00\u4e2a\u7ed3\u679c\uff0c\u4f46\u662f\u4f60\u53ef\u4ee5\u5ffd\u7565\u5b83\u8fd4\u56de\u7684\u7ed3\u679c\uff0c\u5c31\u50cf\u5982\u4e0a\u4ee3\u7801\u793a\u4f8b\u4e2d\u90a3\u6837. \u4f46\u662f\u66f4\u52a0\u901a\u7528\u7684\u505a\u6cd5\u662f\u5c06\u5b83\u8fd4\u56de\u7684\u7ed3\u679c\u6307\u5411\u4e00\u4e2a\u53d8\u91cf\uff0c\u5c24\u5176\u662f\u5728\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d, \u5982\u4e0b\u4e3a\u4ee3\u7801\u793a\u4f8b: val minValue = if (x < y) x else y \u770b\u5230\u8fd9\u6837\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230 \"\u4e09\u5143\u8fd0\u7b97\u7b26\", \u662f\u7684\uff0c\u5b83\u5b9e\u73b0\u4e86\u548c\u4e09\u5143\u8fd0\u7b97\u7b26\u4e00\u6837\u7684\u529f\u80fd\uff0c\u56e0\u6b64Scala\u6ca1\u6709\u518d\u5f15\u5165\u7279\u6b8a\u7684\u4e09\u5143\u8fd0\u7b97\u7b26 Note: \u9762\u5411\u8868\u8fbe\u5f0f\u7f16\u7a0b \u5f53\u4f60\u5199\u7684\u6bcf\u4e00\u4e2a\u8868\u8fbe\u5f0f\u90fd\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u7ed3\u679c\u65f6, \u6211\u4eec\u79f0\u8fd9\u79cd\u98ce\u683c\u4e3a \"\u9762\u5411\u8868\u8fbe\u5f0f\u7f16\u7a0b\"(expression-oriented programming), \u7b80\u79f0 EOP, \u4e0a\u4e00\u4e2a\u4ee3\u7801\u793a\u4f8b\u5c31\u662f\u8fd9\u4e2a\u98ce\u683c. \u76f8\u53cd\u7684, \u4e0d\u8fd4\u56de\u7ed3\u679c\u7684\u4ee3\u7801\u884c\u88ab\u53eb\u505a \"\u8bed\u53e5\", \u8fd9\u79cd\u8bed\u53e5\u7684\u4f5c\u7528\u5c31\u662f\u4e3a\u4e86\u4ea7\u751f\u526f\u4f5c\u7528 1 , \u5982\u4e0b\u4e3a\u4ee3\u7801\u793a\u4f8b: if (a == b) doSomething() // This is a statements, is for side-effects for loops Structure for\u5faa\u73af\u6700\u7b80\u5355\u7684\u4f7f\u7528\u573a\u666f\u5c31\u662f\u7528\u6765\u904d\u5386\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\uff0c\u5982\u4e0b\u662f\u4e00\u4e2a\u4ee3\u7801\u793a\u4f8b: val nums = Seq(1, 2, 3, 4) // given a sequence of integers for (n <- nums) println(n) \u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528for\u5faa\u73af\u8fdb\u884c\u7d2f\u52a0\u8fd0\u7b97\uff0c\u5982\u4e0b\u4e3a\u6c42\u524d100\u9879\u7d2f\u52a0\u7684\u548c\u7684\u4ee3\u7801\u793a\u4f8b: var i = 0 var sum = 0 for (i <- 1 to 100) sum += i println(sum) // 5050 for\u5faa\u73af\u4e5f\u53ef\u4ee5\u7528\u6765\u904d\u5386Map\u5bb9\u5668\uff0c\u5982\u4e0b\u4e3a\u4ee3\u7801\u793a\u4f8b: val scores = Map( \"Andrew\" -> 100, \"Tom\" -> 95, \"Pater\" -> 60 ) for ((name, score) <- scores) println(s\"Name: $name, Score: $score\") The foreach method \u51fa\u4e8e\u904d\u5386\u5bb9\u5668\u4e2d\u5143\u7d20\u5e76\u6253\u5370\u5143\u7d20\u7684\u76ee\u7684\uff0c\u5728Scala\u4e2d\u6211\u4eec\u540c\u6837\u53ef\u4ee5\u4f7f\u7528 foreach \u65b9\u6cd5, foreach \u65b9\u6cd5\u5728Scala\u5927\u591a\u6570\u7684\u5bb9\u5668\u7c7b\u4e2d\u90fd\u662f\u53ef\u7528\u7684\uff0c\u751a\u81f3\u5305\u62ecMap, \u5982\u4e0b\u4e3a\u5e38\u7528\u7684\u4ee3\u7801\u793a\u4f8b: val nums = Seq(1, 2, 3, 4) nums.foreach(println) val scores = Map( \"Andrew\" -> 100, \"Tom\" -> 95, \"Pater\" -> 60 ) scores.foreach { case (name, score) => println(s\"Name: $name, Score: $score\") } for Expressions \u5982\u4f55\u4f60\u8fd8\u80fd\u60f3\u8d77\u6211\u4eec\u5728\"if/then/else\" Structure\u90a3\u4e00\u8282\u4e2d\u4f7f\u7528\u7684\"\u9762\u5411\u8868\u8fbe\u5f0f\u7f16\u7a0b\"(EOP)\u4ee5\u53ca\u8868\u8fbe\u5f0f\u548c\u8bed\u53e5\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u4f60\u4f1a\u53d1\u73b0\u6211\u4eec\u4e0a\u4e00\u8282\u4e2d\u4f7f\u7528 for \u548c foreach \u65b9\u6cd5\u4f5c\u4e3a\u4e00\u79cd\u4ea7\u751f\"\u526f\u4f5c\u7528\"\u7684\u5de5\u5177\uff0c\u6211\u4eec\u5229\u7528\u4ed6\u4eec\u548c println \u65b9\u6cd5\u5c06\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u503c\u6253\u5370\u51fa\u6765. \u4e00\u65e6\u4f60\u5f00\u59cb\u7528Scala\u5de5\u4f5c\uff0c\u4f60\u4f1a\u53d1\u73b0\u5728\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\uff0c\u4f60\u80fd\u591f\u4f7f\u7528\u76f8\u6bd4for\u8bed\u53e5\u6765\u8bf4\u529f\u80fd\u66f4\u4e3a\u5f3a\u5927\u7684for\u8868\u8fbe\u5f0f\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\u533a\u5206\uff0cfor\u8bed\u53e5\u4e0efor\u8868\u8fbe\u5f0f\u662f\u4e0d\u4e00\u6837\u7684\uff0cfor\u8bed\u53e5\u7528\u6765\u4ea7\u751f\u526f\u4f5c\u7528\u7684\u573a\u666f(\u6bd4\u5982\u8bf4\u6253\u5370\u8f93\u51fa), for\u8868\u8fbe\u5f0f\u7528\u6765\u4ece\u73b0\u6709\u5bb9\u5668\u4ea7\u751f\u5bb9\u5668\u7684\u573a\u666f\uff0c\u53ef\u89c1\u5982\u4e0bfor\u8868\u8fbe\u5f0f\u7684\u4ee3\u7801\u793a\u4f8b: val nums = Seq(1, 2, 3, 4 ) val doubleNums = for (n <- nums) yield n * 2 // doubleNums: (2, 4, 6, 8) // using a block of code val doubleNums = for (n <- nums) yield { n * 2 } // doubleNums: (2, 4, 6, 8) Tips: yield \u540e\u8fb9\u65e2\u53ef\u4ee5\u662f\u4e00\u4e2a\u7b80\u77ed\u7684\u8868\u8fbe\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u590d\u6742\u7684\u4ee3\u7801\u5757(\u7528{}\u62ec\u4f4f\u7684\u90e8\u5206)\uff0c\u4e00\u822c\u63a8\u8350\u4f7f\u7528\u7b80\u5355\u7684\u8868\u8fbe\u5f0f, \u5982\u679c\u903b\u8f91\u590d\u6742\u975e\u5f97\u5199\u6210\u591a\u884c\u7684\u4ee3\u7801\u5757\uff0c\u53ef\u4ee5\u8003\u8651\u5c06\u590d\u6742\u7684\u903b\u8f91\u62bd\u8c61\u51fa\u4e00\u4e2a\u65b9\u6cd5\uff0c\u8fd9\u6837 yield \u540e\u8fb9\u4ecd\u7136\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u8868\u8fbe\u5f0f\uff0c\u53ea\u4e0d\u8fc7\u53d8\u6210\u4e86\u4e00\u4e2a\u65b9\u6cd5\u7684\u8c03\u7528 \u6ce8\u610f\u6b64\u5904\u7684 yield \u5173\u952e\u5b57, \u4ed6\u7684\u610f\u601d\u662f\u6211\u8981\u6839\u636e\u5df2\u6709\u7684\u5bb9\u5668\u4ea7\u51fa\u4e00\u4e2a\u65b0\u5bb9\u5668\uff0c\u8fd9\u91cc\u662f\"\u4ea7\u51fa\"\u7684\u610f\u601d match Expressions Scala\u8bbe\u8ba1\u4e86\u4e00\u79cd\"match\"\u8868\u8fbe\u5f0f, \u5b83\u7c7b\u4f3c\u4e8eJava\u4e2d\u7684 switch \u8bed\u53e5, \u5982\u4e0b\u4e3a\u4ee3\u7801\u793a\u4f8b: val i = 5 val numberDescription = i match { case 1 => \"equals one\" case 2 => \"equals two\" case 11 => \"equals three\" case _ => \"else number\" } println(numberDescription) // else number \u5982\u4ee3\u7801\u793a\u4f8b\u53ef\u89c1, \u5f53\"i\"\u5339\u914d\u5230\u67d0\u4e2acase\u65f6\uff0c\u4f1a\u8fd4\u56decase\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\uff0c\u6700\u7ec8\u5c06\u8fd4\u56de\u7684\u5b57\u7b26\u4e32\u6307\u5411\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\"numberDescription\", \"_\" \u4ee3\u8868\u7684\u662f\u4efb\u4f55\u5176\u4ed6\u503c(\u9664\u4e861, 2, 11\u4e4b\u5916), \u5b83\u662f\u9ed8\u8ba4\u7684case, \u8ddfJava\u4e2d\u7684\"default\"\u662f\u4e00\u4e2a\u4f5c\u7528. Tip: Scala\u4e2d\u7684\"match\"\u8868\u8fbe\u5f0f\u4e5f\u662f\u6709\u8fd4\u56de\u503c\u7684\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u53ef\u4ee5\u7528\u4f5c\u4ea7\u751f\u526f\u4f5c\u7528, \u8fd9\u5bf9\u51fd\u6570\u5f0f\u7f16\u7a0b\u548c\u53cb\u597d \u9898\u5916\u8bdd - \u7b80\u5355\u770b\u4e0bScala\u4e2d\u5982\u4f55\u5b9a\u4e49\u65b9\u6cd5 \u5982\u4e0b\u4ee3\u7801\u793a\u4f8b\u5b9a\u4e49\u4e86\u4e00\u4e2a\u503c\u8f6c\u5316\u7684\u7b80\u5355\u65b9\u6cd5: def convertBooleanToStringMessage(bool: Boolean): String = { if (bool) \"true\" else \"false\" } val result = convertBooleanToStringMessage(true) // true \u8fd9\u4e2a\u65b9\u6cd5\u662f\u4e3a\u4e86\u5c06\u5165\u53c2\u7684Boolean\u7c7b\u578b\u53d8\u91cf\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u53d8\u91cf \u4f7f\u7528\"match\"\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u65b9\u6cd5\u4f53 \u6211\u4eec\u53ef\u4ee5\u7528\"match\"\u8868\u8fbe\u5f0f\u91cd\u6784\u4e0b\u4e0a\u4e00\u8282\u4e2d\u7684\"convertBooleanToStringMessage\"\u65b9\u6cd5\uff0c\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: def convertBooleanToStringMessage(bool: Boolean): String = bool match { case true => \"true\" case false => \"false\" } \u53e6\u5916\u63d0\u4e00\u70b9\uff0cScala\u7684\"match\"\u8868\u8fbe\u5f0f\u7684\u4e00\u4e2a\"case\"\u8bed\u53e5\u5176\u5b9e\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u5339\u914d\u89c4\u5219, \u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: val evenOrOdd = i match { case 1 | 3 | 5 | 7 | 9 => println(\"odd\") case 2 | 4 | 6 | 8 | 10 => println(\"even\") case _ => println(\"some other number\") } \u8fd9\u91cc\u7684\"|\"\u8868\u793a\u6216\u8005\uff0c\u7528\u6765\u7ec4\u5408\u591a\u4e2a\"\u503c\"\u5339\u914d\u89c4\u5219\uff0c\u8fd9\u4e48\u8bf4\u662f\u56e0\u4e3a\u5982\u679c\u662f\u591a\u4e2a\"\u8868\u8fbe\u5f0f\"\u5339\u914d\u89c4\u5219\u7684\"\u6216\"\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\"||\", \u8fd9\u4e00\u70b9\u540e\u540e\u7eed\u4f1a\u5728\u793a\u4f8b\u4e2d\u5c55\u793a. \u5728\"case\"\u8bed\u53e5\u4e2d\u4f7f\u7528\"if\"\u8868\u8fbe\u5f0f if\u8868\u8fbe\u5f0f\u548ccase\u8bed\u53e5\u7684\u7ec4\u5408\u5c06\u4f1a\u4f7f\"\u6a21\u5f0f\u5339\u914d\" 2 \u66f4\u52a0\u7684\u5f3a\u5927, \u89c1\u5982\u4e0b\u4ee3\u7801\u793a\u4f8b: count match { case 1 => println(\"one, a lonely number\") case x if x == 2 || x == 3 => println(\"two's company, three's a crowd\") case x if x > 3 => println(\"4+, that's a party\") case _ => println(\"i'm guessing your number is zero or less\") } \u8fd9\u91cc\u7684\"||\"\u8868\u793a\u6216\u8005, \u7528\u6765\u7ec4\u5408\u591a\u4e2a\"\u8868\u8fbe\u5f0f\"\u5339\u914d\u89c4\u5219, \u5728\u7b2c\u4e8c\u4e2acase\u8bed\u53e5\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u7a0b\u5e8f\u4f1a\u5c06\u5165\u53c2count\u6307\u5411\u53d8\u91cfx\uff0c\u7136\u540e\u4f7f\u7528if\u53bb\u5224\u65adx(\u8fd9\u91cc\u5b9e\u9645\u4e0a\u5c31\u662fcount\u7684\u503c)\u662f\u5426\u7b49\u4e8e2\u6216\u80053\uff0c\u8fd9\u5c31\u662fcase\u8bed\u53e5\u4e2dif\u8868\u8fbe\u5f0f\u7684\u7528\u6cd5. \u5bf9\u4e8e\u5339\u914d\u6570\u5b57\u8303\u56f4\u6709\u8fd9\u4e48\u4e00\u4e2a\u4ee3\u7801\u793a\u4f8b: i match { case a if 0 to 9 contains a => println(\"0-9 range: \" + a) case b if 10 to 19 contains b => println(\"10-19 range: \" + b) case c if 20 to 29 contains c => println(\"20-29 range: \" + c) case _ => println(\"Hmmm...\") } \u5728\u5b9e\u9645\u5de5\u4f5c\u4e2dif\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528\u5f15\u7528\u5b57\u6bb5\u662f\u4e00\u4e2a\u5e38\u89c1\u7684\u573a\u666f, \u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: i match { case x if (x.symbol == \"XYZ\" && x.price < 20) => buy(x) case x if (x.symbol == \"XYZ\" && x.price > 50) => sell(x) case x => doNothing(x) } try/catch/finally Structure \u4f60\u53ef\u4ee5\u4f7f\u7528\"try/catch/finally\"\u6765\u6355\u83b7\u548c\u7ba1\u7406\u5f02\u5e38. Scala\u4e2d\u4f7f\u7528 case \u8bed\u53e5\u6765\u5339\u914d\u53ef\u80fd\u53d1\u751f\u7684\u4e0d\u540c\u7c7b\u578b\u7684\u5f02\u5e38, \u5982\u4e0b\u662f\u4e00\u4e2a\u57fa\u672c\u7684\u4ee3\u7801\u793a\u4f8b: var fileText = \"\" try { fileText = openAndReadAFile(fileName) } catch { case e: FileNotFoundException => println(\"Couldn't find that file.\") case e: IOException => println(\"Had an IOException trying to read that file\") } \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c openAndReadAFile \u65b9\u6cd5\u7528\u6765\u6253\u5f00\u5e76\u8bfb\u53d6\u4e00\u4e2a\u6587\u4ef6\uff0c\u7136\u540e\u5c06\u8bfb\u53d6\u7ed3\u679c\u6307\u5411\u53d8\u91cf fileText , Scala\u4f7f\u7528Java\u7684 java.io.* \u7c7b\u64cd\u4f5c\u6587\u4ef6\uff0c\u56e0\u6b64\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6700\u53ef\u80fd\u629b\u51fa\u7684\u5f02\u5e38\u5c31\u662f FileNotFoundException \u548c IOException , \u8fd9\u4e24\u4e2a\u5f02\u5e38\u5728\u793a\u4f8b\u7684 catch \u4ee3\u7801\u5757\u4e2d\u88ab\u6355\u83b7\u5e76\u5904\u7406. \u5728\u5f02\u5e38\u6355\u83b7\u548c\u5904\u7406\u4e2d, finally \u8bed\u53e5\u4e00\u822c\u7528\u4e8e\u8d44\u6e90\u7684\u5173\u95ed\uff0c\u6bd4\u5982\u6587\u4ef6\u8d44\u6e90\u3001\u6570\u636e\u5e93\u8fde\u63a5\u7b49, \u53ef\u89c1\u5982\u4e0b\u4ee3\u7801\u793a\u4f8b: try { // your scala code here } catch { case e: FooException => handleFooException(e) case e: BarException => handleBarException(e) case _: Throwable => println(\"Got some other kind of Throwable exception\") } finally { // your scala code here, such as closing a database connection // or file handle } \u5728Scala\u7684\"try/catch/finally\"\u8bed\u6cd5\u4e2d\u6700\u68d2\u7684\u4e8b\u60c5\u5c31\u662f\u5bf9\u4e8e\u4e0d\u540c\u7c7b\u578b\u7684\u5f02\u5e38\u5904\u7406\uff0c\u6211\u4eec\u53ea\u9700\u5728 catch \u4ee3\u7801\u5757\u4e2d\u4f7f\u7528 case \u8fdb\u884c\u5339\u914d\u5373\u53ef\uff0c\u8fd9\u79cd\u65b9\u5f0f\u663e\u5f97\u76f8\u5f53\u7b80\u6d01\uff0c\u8fd9\u5c06\u4f1a\u4f7f\u4f60\u7684\u4ee3\u7801\u98ce\u683c\u4e00\u81f4\uff0c\u4e5f\u4f1a\u63d0\u5347\u4ee3\u7801\u7684\u53ef\u8bfb\u6027. Referrences [1] Side Effects, https://en.wikipedia.org/wiki/Side_effect_(computer_science) [2] Pattern Matching, https://en.wikipedia.org/wiki/Pattern_matching","title":"Control Structures"},{"location":"basics/control-structures/#control-structures","text":"Scala\u62e5\u6709\u4f60\u5e0c\u671b\u80fd\u5728\u7f16\u7a0b\u8bed\u8a00\u4e2d\u627e\u5230\u7684\u57fa\u672c\u7684\u63a7\u5236\u7ed3\u6784\uff0c\u5982\u4e0b\u6240\u793a: if/then/else for loops try/catch/finally Scala\u4e5f\u6709\u51e0\u4e2a\u72ec\u7279\u7684\u63a7\u5236\u7ed3\u6784\uff0c\u5982\u4e0b\u6240\u793a: match expressions for expressions \u63a5\u4e0b\u6765\u8be6\u7ec6\u8bb2\u89e3\u8fd9\u4e9b\u63a7\u5236\u7ed3\u6784.","title":"Control Structures"},{"location":"basics/control-structures/#ifthenelse-structure","text":"","title":"if/then/else Structure"},{"location":"basics/control-structures/#_1","text":"if (x == y) { doSomething() } // another style if (x == y) doSomething() if (x == y) { doSomething() } else { doSomethingElse() } if (x == y) { doSomethingForXY() } else if (x == z) { doSomethingForXZ() } else { doSomethingElse() }","title":"\u4e09\u79cd\u5e38\u89c1\u7684\u4ee3\u7801\u793a\u4f8b"},{"location":"basics/control-structures/#if","text":"Scala\u6709\u4e00\u4e2a\u597d\u7684\u7279\u6027\u5c31\u662fif\u7ed3\u6784\u603b\u662f\u4f1a\u8fd4\u56de\u4e00\u4e2a\u7ed3\u679c\uff0c\u4f46\u662f\u4f60\u53ef\u4ee5\u5ffd\u7565\u5b83\u8fd4\u56de\u7684\u7ed3\u679c\uff0c\u5c31\u50cf\u5982\u4e0a\u4ee3\u7801\u793a\u4f8b\u4e2d\u90a3\u6837. \u4f46\u662f\u66f4\u52a0\u901a\u7528\u7684\u505a\u6cd5\u662f\u5c06\u5b83\u8fd4\u56de\u7684\u7ed3\u679c\u6307\u5411\u4e00\u4e2a\u53d8\u91cf\uff0c\u5c24\u5176\u662f\u5728\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d, \u5982\u4e0b\u4e3a\u4ee3\u7801\u793a\u4f8b: val minValue = if (x < y) x else y \u770b\u5230\u8fd9\u6837\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u5f88\u5bb9\u6613\u60f3\u5230 \"\u4e09\u5143\u8fd0\u7b97\u7b26\", \u662f\u7684\uff0c\u5b83\u5b9e\u73b0\u4e86\u548c\u4e09\u5143\u8fd0\u7b97\u7b26\u4e00\u6837\u7684\u529f\u80fd\uff0c\u56e0\u6b64Scala\u6ca1\u6709\u518d\u5f15\u5165\u7279\u6b8a\u7684\u4e09\u5143\u8fd0\u7b97\u7b26","title":"if \u8868\u8fbe\u5f0f\u603b\u662f\u4f1a\u8fd4\u56de\u4e00\u4e2a\u7ed3\u679c"},{"location":"basics/control-structures/#note","text":"\u5f53\u4f60\u5199\u7684\u6bcf\u4e00\u4e2a\u8868\u8fbe\u5f0f\u90fd\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u7ed3\u679c\u65f6, \u6211\u4eec\u79f0\u8fd9\u79cd\u98ce\u683c\u4e3a \"\u9762\u5411\u8868\u8fbe\u5f0f\u7f16\u7a0b\"(expression-oriented programming), \u7b80\u79f0 EOP, \u4e0a\u4e00\u4e2a\u4ee3\u7801\u793a\u4f8b\u5c31\u662f\u8fd9\u4e2a\u98ce\u683c. \u76f8\u53cd\u7684, \u4e0d\u8fd4\u56de\u7ed3\u679c\u7684\u4ee3\u7801\u884c\u88ab\u53eb\u505a \"\u8bed\u53e5\", \u8fd9\u79cd\u8bed\u53e5\u7684\u4f5c\u7528\u5c31\u662f\u4e3a\u4e86\u4ea7\u751f\u526f\u4f5c\u7528 1 , \u5982\u4e0b\u4e3a\u4ee3\u7801\u793a\u4f8b: if (a == b) doSomething() // This is a statements, is for side-effects","title":"Note: \u9762\u5411\u8868\u8fbe\u5f0f\u7f16\u7a0b"},{"location":"basics/control-structures/#for-loops-structure","text":"for\u5faa\u73af\u6700\u7b80\u5355\u7684\u4f7f\u7528\u573a\u666f\u5c31\u662f\u7528\u6765\u904d\u5386\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\uff0c\u5982\u4e0b\u662f\u4e00\u4e2a\u4ee3\u7801\u793a\u4f8b: val nums = Seq(1, 2, 3, 4) // given a sequence of integers for (n <- nums) println(n) \u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528for\u5faa\u73af\u8fdb\u884c\u7d2f\u52a0\u8fd0\u7b97\uff0c\u5982\u4e0b\u4e3a\u6c42\u524d100\u9879\u7d2f\u52a0\u7684\u548c\u7684\u4ee3\u7801\u793a\u4f8b: var i = 0 var sum = 0 for (i <- 1 to 100) sum += i println(sum) // 5050 for\u5faa\u73af\u4e5f\u53ef\u4ee5\u7528\u6765\u904d\u5386Map\u5bb9\u5668\uff0c\u5982\u4e0b\u4e3a\u4ee3\u7801\u793a\u4f8b: val scores = Map( \"Andrew\" -> 100, \"Tom\" -> 95, \"Pater\" -> 60 ) for ((name, score) <- scores) println(s\"Name: $name, Score: $score\")","title":"for loops Structure"},{"location":"basics/control-structures/#the-foreach-method","text":"\u51fa\u4e8e\u904d\u5386\u5bb9\u5668\u4e2d\u5143\u7d20\u5e76\u6253\u5370\u5143\u7d20\u7684\u76ee\u7684\uff0c\u5728Scala\u4e2d\u6211\u4eec\u540c\u6837\u53ef\u4ee5\u4f7f\u7528 foreach \u65b9\u6cd5, foreach \u65b9\u6cd5\u5728Scala\u5927\u591a\u6570\u7684\u5bb9\u5668\u7c7b\u4e2d\u90fd\u662f\u53ef\u7528\u7684\uff0c\u751a\u81f3\u5305\u62ecMap, \u5982\u4e0b\u4e3a\u5e38\u7528\u7684\u4ee3\u7801\u793a\u4f8b: val nums = Seq(1, 2, 3, 4) nums.foreach(println) val scores = Map( \"Andrew\" -> 100, \"Tom\" -> 95, \"Pater\" -> 60 ) scores.foreach { case (name, score) => println(s\"Name: $name, Score: $score\") }","title":"The foreach method"},{"location":"basics/control-structures/#for-expressions","text":"\u5982\u4f55\u4f60\u8fd8\u80fd\u60f3\u8d77\u6211\u4eec\u5728\"if/then/else\" Structure\u90a3\u4e00\u8282\u4e2d\u4f7f\u7528\u7684\"\u9762\u5411\u8868\u8fbe\u5f0f\u7f16\u7a0b\"(EOP)\u4ee5\u53ca\u8868\u8fbe\u5f0f\u548c\u8bed\u53e5\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u4f60\u4f1a\u53d1\u73b0\u6211\u4eec\u4e0a\u4e00\u8282\u4e2d\u4f7f\u7528 for \u548c foreach \u65b9\u6cd5\u4f5c\u4e3a\u4e00\u79cd\u4ea7\u751f\"\u526f\u4f5c\u7528\"\u7684\u5de5\u5177\uff0c\u6211\u4eec\u5229\u7528\u4ed6\u4eec\u548c println \u65b9\u6cd5\u5c06\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u503c\u6253\u5370\u51fa\u6765. \u4e00\u65e6\u4f60\u5f00\u59cb\u7528Scala\u5de5\u4f5c\uff0c\u4f60\u4f1a\u53d1\u73b0\u5728\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\uff0c\u4f60\u80fd\u591f\u4f7f\u7528\u76f8\u6bd4for\u8bed\u53e5\u6765\u8bf4\u529f\u80fd\u66f4\u4e3a\u5f3a\u5927\u7684for\u8868\u8fbe\u5f0f\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\u533a\u5206\uff0cfor\u8bed\u53e5\u4e0efor\u8868\u8fbe\u5f0f\u662f\u4e0d\u4e00\u6837\u7684\uff0cfor\u8bed\u53e5\u7528\u6765\u4ea7\u751f\u526f\u4f5c\u7528\u7684\u573a\u666f(\u6bd4\u5982\u8bf4\u6253\u5370\u8f93\u51fa), for\u8868\u8fbe\u5f0f\u7528\u6765\u4ece\u73b0\u6709\u5bb9\u5668\u4ea7\u751f\u5bb9\u5668\u7684\u573a\u666f\uff0c\u53ef\u89c1\u5982\u4e0bfor\u8868\u8fbe\u5f0f\u7684\u4ee3\u7801\u793a\u4f8b: val nums = Seq(1, 2, 3, 4 ) val doubleNums = for (n <- nums) yield n * 2 // doubleNums: (2, 4, 6, 8) // using a block of code val doubleNums = for (n <- nums) yield { n * 2 } // doubleNums: (2, 4, 6, 8) Tips: yield \u540e\u8fb9\u65e2\u53ef\u4ee5\u662f\u4e00\u4e2a\u7b80\u77ed\u7684\u8868\u8fbe\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u590d\u6742\u7684\u4ee3\u7801\u5757(\u7528{}\u62ec\u4f4f\u7684\u90e8\u5206)\uff0c\u4e00\u822c\u63a8\u8350\u4f7f\u7528\u7b80\u5355\u7684\u8868\u8fbe\u5f0f, \u5982\u679c\u903b\u8f91\u590d\u6742\u975e\u5f97\u5199\u6210\u591a\u884c\u7684\u4ee3\u7801\u5757\uff0c\u53ef\u4ee5\u8003\u8651\u5c06\u590d\u6742\u7684\u903b\u8f91\u62bd\u8c61\u51fa\u4e00\u4e2a\u65b9\u6cd5\uff0c\u8fd9\u6837 yield \u540e\u8fb9\u4ecd\u7136\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u8868\u8fbe\u5f0f\uff0c\u53ea\u4e0d\u8fc7\u53d8\u6210\u4e86\u4e00\u4e2a\u65b9\u6cd5\u7684\u8c03\u7528 \u6ce8\u610f\u6b64\u5904\u7684 yield \u5173\u952e\u5b57, \u4ed6\u7684\u610f\u601d\u662f\u6211\u8981\u6839\u636e\u5df2\u6709\u7684\u5bb9\u5668\u4ea7\u51fa\u4e00\u4e2a\u65b0\u5bb9\u5668\uff0c\u8fd9\u91cc\u662f\"\u4ea7\u51fa\"\u7684\u610f\u601d","title":"for Expressions"},{"location":"basics/control-structures/#match-expressions","text":"Scala\u8bbe\u8ba1\u4e86\u4e00\u79cd\"match\"\u8868\u8fbe\u5f0f, \u5b83\u7c7b\u4f3c\u4e8eJava\u4e2d\u7684 switch \u8bed\u53e5, \u5982\u4e0b\u4e3a\u4ee3\u7801\u793a\u4f8b: val i = 5 val numberDescription = i match { case 1 => \"equals one\" case 2 => \"equals two\" case 11 => \"equals three\" case _ => \"else number\" } println(numberDescription) // else number \u5982\u4ee3\u7801\u793a\u4f8b\u53ef\u89c1, \u5f53\"i\"\u5339\u914d\u5230\u67d0\u4e2acase\u65f6\uff0c\u4f1a\u8fd4\u56decase\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\uff0c\u6700\u7ec8\u5c06\u8fd4\u56de\u7684\u5b57\u7b26\u4e32\u6307\u5411\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\"numberDescription\", \"_\" \u4ee3\u8868\u7684\u662f\u4efb\u4f55\u5176\u4ed6\u503c(\u9664\u4e861, 2, 11\u4e4b\u5916), \u5b83\u662f\u9ed8\u8ba4\u7684case, \u8ddfJava\u4e2d\u7684\"default\"\u662f\u4e00\u4e2a\u4f5c\u7528. Tip: Scala\u4e2d\u7684\"match\"\u8868\u8fbe\u5f0f\u4e5f\u662f\u6709\u8fd4\u56de\u503c\u7684\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u53ef\u4ee5\u7528\u4f5c\u4ea7\u751f\u526f\u4f5c\u7528, \u8fd9\u5bf9\u51fd\u6570\u5f0f\u7f16\u7a0b\u548c\u53cb\u597d","title":"match Expressions"},{"location":"basics/control-structures/#-scala","text":"\u5982\u4e0b\u4ee3\u7801\u793a\u4f8b\u5b9a\u4e49\u4e86\u4e00\u4e2a\u503c\u8f6c\u5316\u7684\u7b80\u5355\u65b9\u6cd5: def convertBooleanToStringMessage(bool: Boolean): String = { if (bool) \"true\" else \"false\" } val result = convertBooleanToStringMessage(true) // true \u8fd9\u4e2a\u65b9\u6cd5\u662f\u4e3a\u4e86\u5c06\u5165\u53c2\u7684Boolean\u7c7b\u578b\u53d8\u91cf\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u53d8\u91cf","title":"\u9898\u5916\u8bdd - \u7b80\u5355\u770b\u4e0bScala\u4e2d\u5982\u4f55\u5b9a\u4e49\u65b9\u6cd5"},{"location":"basics/control-structures/#match","text":"\u6211\u4eec\u53ef\u4ee5\u7528\"match\"\u8868\u8fbe\u5f0f\u91cd\u6784\u4e0b\u4e0a\u4e00\u8282\u4e2d\u7684\"convertBooleanToStringMessage\"\u65b9\u6cd5\uff0c\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: def convertBooleanToStringMessage(bool: Boolean): String = bool match { case true => \"true\" case false => \"false\" } \u53e6\u5916\u63d0\u4e00\u70b9\uff0cScala\u7684\"match\"\u8868\u8fbe\u5f0f\u7684\u4e00\u4e2a\"case\"\u8bed\u53e5\u5176\u5b9e\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u5339\u914d\u89c4\u5219, \u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: val evenOrOdd = i match { case 1 | 3 | 5 | 7 | 9 => println(\"odd\") case 2 | 4 | 6 | 8 | 10 => println(\"even\") case _ => println(\"some other number\") } \u8fd9\u91cc\u7684\"|\"\u8868\u793a\u6216\u8005\uff0c\u7528\u6765\u7ec4\u5408\u591a\u4e2a\"\u503c\"\u5339\u914d\u89c4\u5219\uff0c\u8fd9\u4e48\u8bf4\u662f\u56e0\u4e3a\u5982\u679c\u662f\u591a\u4e2a\"\u8868\u8fbe\u5f0f\"\u5339\u914d\u89c4\u5219\u7684\"\u6216\"\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528\"||\", \u8fd9\u4e00\u70b9\u540e\u540e\u7eed\u4f1a\u5728\u793a\u4f8b\u4e2d\u5c55\u793a.","title":"\u4f7f\u7528\"match\"\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u65b9\u6cd5\u4f53"},{"location":"basics/control-structures/#caseif","text":"if\u8868\u8fbe\u5f0f\u548ccase\u8bed\u53e5\u7684\u7ec4\u5408\u5c06\u4f1a\u4f7f\"\u6a21\u5f0f\u5339\u914d\" 2 \u66f4\u52a0\u7684\u5f3a\u5927, \u89c1\u5982\u4e0b\u4ee3\u7801\u793a\u4f8b: count match { case 1 => println(\"one, a lonely number\") case x if x == 2 || x == 3 => println(\"two's company, three's a crowd\") case x if x > 3 => println(\"4+, that's a party\") case _ => println(\"i'm guessing your number is zero or less\") } \u8fd9\u91cc\u7684\"||\"\u8868\u793a\u6216\u8005, \u7528\u6765\u7ec4\u5408\u591a\u4e2a\"\u8868\u8fbe\u5f0f\"\u5339\u914d\u89c4\u5219, \u5728\u7b2c\u4e8c\u4e2acase\u8bed\u53e5\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u7a0b\u5e8f\u4f1a\u5c06\u5165\u53c2count\u6307\u5411\u53d8\u91cfx\uff0c\u7136\u540e\u4f7f\u7528if\u53bb\u5224\u65adx(\u8fd9\u91cc\u5b9e\u9645\u4e0a\u5c31\u662fcount\u7684\u503c)\u662f\u5426\u7b49\u4e8e2\u6216\u80053\uff0c\u8fd9\u5c31\u662fcase\u8bed\u53e5\u4e2dif\u8868\u8fbe\u5f0f\u7684\u7528\u6cd5. \u5bf9\u4e8e\u5339\u914d\u6570\u5b57\u8303\u56f4\u6709\u8fd9\u4e48\u4e00\u4e2a\u4ee3\u7801\u793a\u4f8b: i match { case a if 0 to 9 contains a => println(\"0-9 range: \" + a) case b if 10 to 19 contains b => println(\"10-19 range: \" + b) case c if 20 to 29 contains c => println(\"20-29 range: \" + c) case _ => println(\"Hmmm...\") } \u5728\u5b9e\u9645\u5de5\u4f5c\u4e2dif\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528\u5f15\u7528\u5b57\u6bb5\u662f\u4e00\u4e2a\u5e38\u89c1\u7684\u573a\u666f, \u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: i match { case x if (x.symbol == \"XYZ\" && x.price < 20) => buy(x) case x if (x.symbol == \"XYZ\" && x.price > 50) => sell(x) case x => doNothing(x) }","title":"\u5728\"case\"\u8bed\u53e5\u4e2d\u4f7f\u7528\"if\"\u8868\u8fbe\u5f0f"},{"location":"basics/control-structures/#trycatchfinally-structure","text":"\u4f60\u53ef\u4ee5\u4f7f\u7528\"try/catch/finally\"\u6765\u6355\u83b7\u548c\u7ba1\u7406\u5f02\u5e38. Scala\u4e2d\u4f7f\u7528 case \u8bed\u53e5\u6765\u5339\u914d\u53ef\u80fd\u53d1\u751f\u7684\u4e0d\u540c\u7c7b\u578b\u7684\u5f02\u5e38, \u5982\u4e0b\u662f\u4e00\u4e2a\u57fa\u672c\u7684\u4ee3\u7801\u793a\u4f8b: var fileText = \"\" try { fileText = openAndReadAFile(fileName) } catch { case e: FileNotFoundException => println(\"Couldn't find that file.\") case e: IOException => println(\"Had an IOException trying to read that file\") } \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c openAndReadAFile \u65b9\u6cd5\u7528\u6765\u6253\u5f00\u5e76\u8bfb\u53d6\u4e00\u4e2a\u6587\u4ef6\uff0c\u7136\u540e\u5c06\u8bfb\u53d6\u7ed3\u679c\u6307\u5411\u53d8\u91cf fileText , Scala\u4f7f\u7528Java\u7684 java.io.* \u7c7b\u64cd\u4f5c\u6587\u4ef6\uff0c\u56e0\u6b64\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u6700\u53ef\u80fd\u629b\u51fa\u7684\u5f02\u5e38\u5c31\u662f FileNotFoundException \u548c IOException , \u8fd9\u4e24\u4e2a\u5f02\u5e38\u5728\u793a\u4f8b\u7684 catch \u4ee3\u7801\u5757\u4e2d\u88ab\u6355\u83b7\u5e76\u5904\u7406. \u5728\u5f02\u5e38\u6355\u83b7\u548c\u5904\u7406\u4e2d, finally \u8bed\u53e5\u4e00\u822c\u7528\u4e8e\u8d44\u6e90\u7684\u5173\u95ed\uff0c\u6bd4\u5982\u6587\u4ef6\u8d44\u6e90\u3001\u6570\u636e\u5e93\u8fde\u63a5\u7b49, \u53ef\u89c1\u5982\u4e0b\u4ee3\u7801\u793a\u4f8b: try { // your scala code here } catch { case e: FooException => handleFooException(e) case e: BarException => handleBarException(e) case _: Throwable => println(\"Got some other kind of Throwable exception\") } finally { // your scala code here, such as closing a database connection // or file handle } \u5728Scala\u7684\"try/catch/finally\"\u8bed\u6cd5\u4e2d\u6700\u68d2\u7684\u4e8b\u60c5\u5c31\u662f\u5bf9\u4e8e\u4e0d\u540c\u7c7b\u578b\u7684\u5f02\u5e38\u5904\u7406\uff0c\u6211\u4eec\u53ea\u9700\u5728 catch \u4ee3\u7801\u5757\u4e2d\u4f7f\u7528 case \u8fdb\u884c\u5339\u914d\u5373\u53ef\uff0c\u8fd9\u79cd\u65b9\u5f0f\u663e\u5f97\u76f8\u5f53\u7b80\u6d01\uff0c\u8fd9\u5c06\u4f1a\u4f7f\u4f60\u7684\u4ee3\u7801\u98ce\u683c\u4e00\u81f4\uff0c\u4e5f\u4f1a\u63d0\u5347\u4ee3\u7801\u7684\u53ef\u8bfb\u6027.","title":"try/catch/finally Structure"},{"location":"basics/control-structures/#referrences","text":"[1] Side Effects, https://en.wikipedia.org/wiki/Side_effect_(computer_science) [2] Pattern Matching, https://en.wikipedia.org/wiki/Pattern_matching","title":"Referrences"},{"location":"basics/know-scala/","text":"Know Scala What is Scala? \u6982\u62ec\u5730\u8bb2\uff0cScala\u662f\u4e00\u79cd\u878d\u5408\u4e86\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u548c\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e24\u79cd\u7f16\u7a0b\u8303\u5f0f\u7684\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\uff0cScala\u7684\u9759\u6001\u7c7b\u578b\u7cfb\u7edf\u6709\u6548\u5730\u964d\u4f4e\u4e86\u590d\u6742\u5e94\u7528\u4e2dBug\u7684\u51fa\u73b0\u7387\uff08\u6784\u5efa\u5065\u58ee\u7cfb\u7edf\uff09. Scala\u652f\u6301 JVM \u548c JavaScript \u4e24\u79cd\u8fd0\u884c\u73af\u5883\uff0c\u8fd9\u4e2a\u7279\u6027\u5c06\u4f7f\u5f97\u6211\u4eec\u57fa\u4e8e\u73b0\u6709\u7684\u3001\u5e9e\u5927\u7684\u7c7b\u5e93\u751f\u6001\u53bb\u6784\u5efa\u9ad8\u6027\u80fd\u7cfb\u7edf\u66f4\u52a0\u5bb9\u6613. Scala Features Scala\u7684\u521b\u9020\u6df1\u53d7Java, Ruby, Smalltalk, ML, Haskell, Erlang\u7b49\u8bed\u8a00\u5f71\u54cd \u9759\u6001\u7c7b\u578b\u8bed\u8a00\uff0c\u53d8\u91cf\u7684\u7c7b\u578b\u5728\u7f16\u8bd1\u671f\u5c31\u5df2\u7ecf\u786e\u5b9a\uff0cscala\u53d8\u91cf\u7c7b\u578b\u7684\u786e\u5b9a\u4f9d\u8d56\u4e8e\u5176\u7279\u6709\u7684\u7c7b\u578b\u63a8\u6f14\u7cfb\u7edf \u62e5\u6709\u590d\u6742\u7684\u7c7b\u578b\u63a8\u6f14\u7cfb\u7edf. \u901a\u8fc7\u4f7f\u7528\u7c7b\u578b\u63a8\u6f14\uff0cScala \u7f16\u5199\u7684\u4ee3\u7801\u80fd\u591f\u548c\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\u7f16\u5199\u7684\u4ee3\u7801\u4e00\u6837\u7cbe\u7b80. \u7b80\u6d01\u7684\u8bed\u6cd5\uff0c\u4f46\u4ecd\u7136\u53ef\u8bfb\uff0c\u4f7f\u7528 Scala \u4e4b\u540e\uff0cJava \u4e2d\u5197\u957f\u7684\u8868\u8fbe\u5f0f\u4e0d\u89c1\u4e86\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u7b80\u6d01\u7684 Scala \u65b9\u8a00. Scala \u5b8c\u5168\u652f\u6301\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff08OOP\uff09. Scala \u5f15\u5165\u7279\u5f81\uff08trait\uff09\u6539\u8fdb\u4e86 Java \u7684\u5bf9\u8c61\u6a21\u578b. trait \u80fd\u901a\u8fc7\u4f7f\u7528\u6df7\u5408\u7ed3\u6784\uff08mixin composition\uff09\u7b80\u6d01\u5730\u5b9e\u73b0\u65b0\u7684\u7c7b\u578b. \u5728 Scala \u4e2d\uff0c\u4e00\u5207\u90fd\u662f\u5bf9\u8c61\uff0c\u5373\u4f7f\u662f\u6570\u503c\u7c7b\u578b. Scala \u5b8c\u5168\u652f\u6301\u51fd\u6570\u5f0f\u7f16\u7a0b\uff08FP\uff09\uff0c\u51fd\u6570\u5f0f\u7f16\u7a0b\u5df2\u7ecf\u88ab\u89c6\u4e3a\u89e3\u51b3\u5e76\u53d1\u3001\u5927\u6570\u636e\u4ee5\u53ca\u4ee3\u7801\u6b63\u786e\u6027\u95ee\u9898\u7684\u6700\u4f73\u5de5\u5177. \u4f7f\u7528\u4e0d\u53ef\u53d8\u503c\u3001\u88ab\u89c6\u4e3a\u4e00\u7b49\u516c\u6c11\u7684\u51fd\u6570\u3001\u65e0\u526f\u4f5c\u7528\u7684\u51fd\u6570\u3001\u9ad8\u9636\u51fd\u6570\u4ee5\u53ca\u51fd\u6570\u96c6\u5408\uff0c\u6709\u52a9\u4e8e\u7f16\u5199\u51fa\u7b80\u6d01\u3001\u5f3a\u5927\u800c\u53c8\u6b63\u786e\u7684\u4ee3\u7801. Scala\u6e90\u4ee3\u7801\u80fd\u591f\u88ab\u7f16\u8bd1\u6210 .class \u6587\u4ef6\uff0c\u8fd0\u884c\u5728 JVM \u4e0a. Scala\u5c06\u4f1a\u8ba9\u4f60\u7684\u7f16\u7a0b\u5de5\u4f5c\u5bcc\u6709\u6210\u6548\uff0c\u4f46\u540c\u65f6\u5b83\u4e5f\u662f\u4e00\u79cd \u6df1\u5165 \u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u968f\u7740\u4f60\u4e0d\u65ad\u5730\u4f7f\u7528Scala\u6765\u7f16\u7a0b\uff0c\u4f60\u4f1a\u53d1\u73b0\u66f4\u597d\u7684\u7f16\u7801\u65b9\u5f0f. \u6709\u4eba\u8bf4\uff0cScala \u4f1a\u6539\u53d8\u4f60\u7684\u7f16\u7a0b\u601d\u7ef4\uff08\u8fd9\u662f\u4e00\u4ef6\u597d\u4e8b\u60c5\uff09. Comments // \u5355\u884c\u6ce8\u91ca /* \u591a\u884c\u6ce8\u91ca \u591a\u884c\u6ce8\u91ca */ /** * \u591a\u884c\u6ce8\u91ca * \u591a\u884c\u6ce8\u91ca */ Naming conventions Scala\u9075\u5faa\u9a7c\u5cf0\u547d\u540d\u89c4\u8303. Class names: Person, StoreEmployee Variable names: name, firstName Method names: convertToInt, toUpper Hello, World object Hello { def main(args: Array[String]): Unit = { println(\"Hello World!\") } } \u521b\u5efa\u4e00\u4e2a\u540d\u4e3a Hello.scala \u7684\u6587\u4ef6\uff0c\u5199\u5165\u5982\u4e0a\u4ee3\u7801\u5e76\u4fdd\u5b58 \u4f7f\u7528 scalac \u547d\u4ee4\u5bf9\u6e90\u4ee3\u7801\u6587\u4ef6\u8fdb\u884c\u7f16\u8bd1\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u4e24\u4e2a\u6587\u4ef6 Hello$.class Hello.class $ scalac Hello.scala \u4f7f\u7528 scala \u547d\u4ee4\u8fd0\u884c\u4e0a\u4e00\u6b65\u4ea7\u51fa\u7684\u5b57\u8282\u7801\u6587\u4ef6 $ scala Hello Tip: object \u8ddf class \u662f\u7c7b\u4f3c\u7684, \u5f53\u4f60\u4ec5\u4ec5\u60f3\u8981\u8fd9\u4e2a\u7c7b\u7684\u4e00\u4e2a\u5b9e\u4f8b\u65f6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 object \u8ddfJava\u76f8\u6bd4\u8f83\u65f6, object \u91cc\u7684 main \u65b9\u6cd5\u7c7b\u4f3c\u4e8eJava\u7c7b\u7684\u9759\u6001\u65b9\u6cd5 Hello, World -- Version 2 object Hello2 extends App { println(\"Hello World!\") } \u4f7f\u7528\u8ddf\u4e0a\u4e00\u4e2aSection\u540c\u6837\u7684\u65b9\u5f0f\u53ef\u4ee5\u6253\u5370\u51fa\u540c\u6837\u7684\u7ed3\u679c Tip: App \u662f\u4e00\u4e2a trait , \u8fd9\u4e2aScala\u7684\u7279\u6027\uff0c App \u5305\u542b\u4e86 main \u65b9\u6cd5\uff0c\u56e0\u6b64\u4f60\u65e0\u9700\u81ea\u5df1\u5b9e\u73b0\u5b83. trait \u7c7b\u4f3c\u4e8eJava\u4e2d\u7684\u62bd\u8c61\u7c7b\uff08abstract class\uff09.","title":"Know Scala"},{"location":"basics/know-scala/#know-scala","text":"","title":"Know Scala"},{"location":"basics/know-scala/#what-is-scala","text":"\u6982\u62ec\u5730\u8bb2\uff0cScala\u662f\u4e00\u79cd\u878d\u5408\u4e86\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u548c\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e24\u79cd\u7f16\u7a0b\u8303\u5f0f\u7684\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\uff0cScala\u7684\u9759\u6001\u7c7b\u578b\u7cfb\u7edf\u6709\u6548\u5730\u964d\u4f4e\u4e86\u590d\u6742\u5e94\u7528\u4e2dBug\u7684\u51fa\u73b0\u7387\uff08\u6784\u5efa\u5065\u58ee\u7cfb\u7edf\uff09. Scala\u652f\u6301 JVM \u548c JavaScript \u4e24\u79cd\u8fd0\u884c\u73af\u5883\uff0c\u8fd9\u4e2a\u7279\u6027\u5c06\u4f7f\u5f97\u6211\u4eec\u57fa\u4e8e\u73b0\u6709\u7684\u3001\u5e9e\u5927\u7684\u7c7b\u5e93\u751f\u6001\u53bb\u6784\u5efa\u9ad8\u6027\u80fd\u7cfb\u7edf\u66f4\u52a0\u5bb9\u6613.","title":"What is Scala?"},{"location":"basics/know-scala/#scala-features","text":"Scala\u7684\u521b\u9020\u6df1\u53d7Java, Ruby, Smalltalk, ML, Haskell, Erlang\u7b49\u8bed\u8a00\u5f71\u54cd \u9759\u6001\u7c7b\u578b\u8bed\u8a00\uff0c\u53d8\u91cf\u7684\u7c7b\u578b\u5728\u7f16\u8bd1\u671f\u5c31\u5df2\u7ecf\u786e\u5b9a\uff0cscala\u53d8\u91cf\u7c7b\u578b\u7684\u786e\u5b9a\u4f9d\u8d56\u4e8e\u5176\u7279\u6709\u7684\u7c7b\u578b\u63a8\u6f14\u7cfb\u7edf \u62e5\u6709\u590d\u6742\u7684\u7c7b\u578b\u63a8\u6f14\u7cfb\u7edf. \u901a\u8fc7\u4f7f\u7528\u7c7b\u578b\u63a8\u6f14\uff0cScala \u7f16\u5199\u7684\u4ee3\u7801\u80fd\u591f\u548c\u52a8\u6001\u7c7b\u578b\u8bed\u8a00\u7f16\u5199\u7684\u4ee3\u7801\u4e00\u6837\u7cbe\u7b80. \u7b80\u6d01\u7684\u8bed\u6cd5\uff0c\u4f46\u4ecd\u7136\u53ef\u8bfb\uff0c\u4f7f\u7528 Scala \u4e4b\u540e\uff0cJava \u4e2d\u5197\u957f\u7684\u8868\u8fbe\u5f0f\u4e0d\u89c1\u4e86\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u7b80\u6d01\u7684 Scala \u65b9\u8a00. Scala \u5b8c\u5168\u652f\u6301\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff08OOP\uff09. Scala \u5f15\u5165\u7279\u5f81\uff08trait\uff09\u6539\u8fdb\u4e86 Java \u7684\u5bf9\u8c61\u6a21\u578b. trait \u80fd\u901a\u8fc7\u4f7f\u7528\u6df7\u5408\u7ed3\u6784\uff08mixin composition\uff09\u7b80\u6d01\u5730\u5b9e\u73b0\u65b0\u7684\u7c7b\u578b. \u5728 Scala \u4e2d\uff0c\u4e00\u5207\u90fd\u662f\u5bf9\u8c61\uff0c\u5373\u4f7f\u662f\u6570\u503c\u7c7b\u578b. Scala \u5b8c\u5168\u652f\u6301\u51fd\u6570\u5f0f\u7f16\u7a0b\uff08FP\uff09\uff0c\u51fd\u6570\u5f0f\u7f16\u7a0b\u5df2\u7ecf\u88ab\u89c6\u4e3a\u89e3\u51b3\u5e76\u53d1\u3001\u5927\u6570\u636e\u4ee5\u53ca\u4ee3\u7801\u6b63\u786e\u6027\u95ee\u9898\u7684\u6700\u4f73\u5de5\u5177. \u4f7f\u7528\u4e0d\u53ef\u53d8\u503c\u3001\u88ab\u89c6\u4e3a\u4e00\u7b49\u516c\u6c11\u7684\u51fd\u6570\u3001\u65e0\u526f\u4f5c\u7528\u7684\u51fd\u6570\u3001\u9ad8\u9636\u51fd\u6570\u4ee5\u53ca\u51fd\u6570\u96c6\u5408\uff0c\u6709\u52a9\u4e8e\u7f16\u5199\u51fa\u7b80\u6d01\u3001\u5f3a\u5927\u800c\u53c8\u6b63\u786e\u7684\u4ee3\u7801. Scala\u6e90\u4ee3\u7801\u80fd\u591f\u88ab\u7f16\u8bd1\u6210 .class \u6587\u4ef6\uff0c\u8fd0\u884c\u5728 JVM \u4e0a. Scala\u5c06\u4f1a\u8ba9\u4f60\u7684\u7f16\u7a0b\u5de5\u4f5c\u5bcc\u6709\u6210\u6548\uff0c\u4f46\u540c\u65f6\u5b83\u4e5f\u662f\u4e00\u79cd \u6df1\u5165 \u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u968f\u7740\u4f60\u4e0d\u65ad\u5730\u4f7f\u7528Scala\u6765\u7f16\u7a0b\uff0c\u4f60\u4f1a\u53d1\u73b0\u66f4\u597d\u7684\u7f16\u7801\u65b9\u5f0f. \u6709\u4eba\u8bf4\uff0cScala \u4f1a\u6539\u53d8\u4f60\u7684\u7f16\u7a0b\u601d\u7ef4\uff08\u8fd9\u662f\u4e00\u4ef6\u597d\u4e8b\u60c5\uff09.","title":"Scala Features"},{"location":"basics/know-scala/#comments","text":"// \u5355\u884c\u6ce8\u91ca /* \u591a\u884c\u6ce8\u91ca \u591a\u884c\u6ce8\u91ca */ /** * \u591a\u884c\u6ce8\u91ca * \u591a\u884c\u6ce8\u91ca */","title":"Comments"},{"location":"basics/know-scala/#naming-conventions","text":"Scala\u9075\u5faa\u9a7c\u5cf0\u547d\u540d\u89c4\u8303. Class names: Person, StoreEmployee Variable names: name, firstName Method names: convertToInt, toUpper","title":"Naming conventions"},{"location":"basics/know-scala/#hello-world","text":"object Hello { def main(args: Array[String]): Unit = { println(\"Hello World!\") } } \u521b\u5efa\u4e00\u4e2a\u540d\u4e3a Hello.scala \u7684\u6587\u4ef6\uff0c\u5199\u5165\u5982\u4e0a\u4ee3\u7801\u5e76\u4fdd\u5b58 \u4f7f\u7528 scalac \u547d\u4ee4\u5bf9\u6e90\u4ee3\u7801\u6587\u4ef6\u8fdb\u884c\u7f16\u8bd1\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u4e24\u4e2a\u6587\u4ef6 Hello$.class Hello.class $ scalac Hello.scala \u4f7f\u7528 scala \u547d\u4ee4\u8fd0\u884c\u4e0a\u4e00\u6b65\u4ea7\u51fa\u7684\u5b57\u8282\u7801\u6587\u4ef6 $ scala Hello Tip: object \u8ddf class \u662f\u7c7b\u4f3c\u7684, \u5f53\u4f60\u4ec5\u4ec5\u60f3\u8981\u8fd9\u4e2a\u7c7b\u7684\u4e00\u4e2a\u5b9e\u4f8b\u65f6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 object \u8ddfJava\u76f8\u6bd4\u8f83\u65f6, object \u91cc\u7684 main \u65b9\u6cd5\u7c7b\u4f3c\u4e8eJava\u7c7b\u7684\u9759\u6001\u65b9\u6cd5","title":"Hello, World"},{"location":"basics/know-scala/#hello-world-version-2","text":"object Hello2 extends App { println(\"Hello World!\") } \u4f7f\u7528\u8ddf\u4e0a\u4e00\u4e2aSection\u540c\u6837\u7684\u65b9\u5f0f\u53ef\u4ee5\u6253\u5370\u51fa\u540c\u6837\u7684\u7ed3\u679c Tip: App \u662f\u4e00\u4e2a trait , \u8fd9\u4e2aScala\u7684\u7279\u6027\uff0c App \u5305\u542b\u4e86 main \u65b9\u6cd5\uff0c\u56e0\u6b64\u4f60\u65e0\u9700\u81ea\u5df1\u5b9e\u73b0\u5b83. trait \u7c7b\u4f3c\u4e8eJava\u4e2d\u7684\u62bd\u8c61\u7c7b\uff08abstract class\uff09.","title":"Hello, World -- Version 2"},{"location":"basics/traits/","text":"Traits trait\u662fScala\u4e2d\u9664\u4e86class\u5916\u7684\u53e6\u4e00\u4e2a\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7279\u6027\uff0c\u4f60\u53ef\u4ee5\u50cfJava\u4e2d\u7684interface\u90a3\u6837\u4f7f\u7528trait\uff0c\u4ec5\u4ec5\u628a\u5b83\u5f53\u505a\u4e00\u4e2a\u63a5\u53e3; \u540c\u65f6\uff0c\u4f60\u4e5f\u53ef\u4ee5\u50cfJava\u4e2d\u7684\u62bd\u8c61\u7c7b(abstract class)\u90a3\u6837\u4f7f\u7528trait, \u5728trait\u4e2d\u5b9a\u4e49\u5b8c\u6574\u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u4ec5\u4ec5\u53ea\u662f\u58f0\u660e\u65b9\u6cd5. Scala\u7684class\u4e5f\u80fd\u7ee7\u627f\u4e00\u4e2a\u6216\u8005\u591a\u4e2atrait. Using Scala Traits as Interfaces \u5f53\u6211\u4eec\u5c06 trait \u5f53\u505a\u63a5\u53e3\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 trait \u91cc\u4ec5\u4ec5\u5b9a\u4e49\u4e00\u4e9b\u529f\u80fd\u7684\u63a5\u53e3\uff0c\u800c\u5e76\u4e0d\u4e3a\u8fd9\u4e9b\u529f\u80fd\u5b9e\u73b0\u4efb\u4f55\u7684\u884c\u4e3a. A simple example \u6211\u4eec\u4ece\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5f00\u59cb\uff0c\u60f3\u8c61\u4e00\u4e0b\u4f60\u60f3\u8981\u5199\u4e00\u4e9b\u4ee3\u7801\u4e3a\u52a8\u7269\u6784\u5efa\u6a21\u578b, \u6bd4\u5982\u732b\u3001\u72d7, \u6211\u4eec\u53ef\u4ee5\u5148\u63d0\u53d6\u4e00\u4e9b\u52a8\u7269\u7684\u901a\u7528\u7279\u6027, \u6bd4\u5982\u52a8\u7269\u90fd\u4f1a\u53eb\uff0c\u52a8\u7269\u90fd\u4f1a\u8dd1, \u4f46\u662f\u53eb\u7684\u58f0\u97f3\u4e0d\u4e00\u6837\uff0c\u8dd1\u7684\u65b9\u5f0f\u4e5f\u4e0d\u4e00\u6837, \u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06\u53eb\u548c\u8dd1\u62bd\u8c61\u6210\u4e24\u4e2atrait, \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b: trait Speaker { def speak(): String } trait Runner { def run(): Unit } Extending traits \u4e0a\u4e00\u8282\u4e2d\u7684 Speaker \u548c Runner \u4e2d\u4ec5\u4ec5\u662f\u58f0\u660e\u4e86\u529f\u80fd\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u901a\u8fc7\u5177\u4f53\u67d0\u4e00\u79cd\u52a8\u7269\u6765\u5b9e\u73b0\u8fd9\u4e9btrait\u4e2d\u5b9a\u4e49\u7684\u529f\u80fd, \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b: class Dog extends Speaker with Runner { override def speak() = \"dog Woof!\" override def run(): Unit = println(\"dog Run\uff01\") } \u5982\u4e0a\u4ee3\u7801\u6240\u793a\u5c31\u662fScala\u4e2d class \u7ee7\u627f trait \u7684\u65b9\u5f0f\u4e86, \u5f53\u9700\u8981\u7ee7\u627f\u591a\u4e2atrait\u65f6\uff0c\u4f7f\u7528 extends \u5173\u952e\u5b57\u53bb\u7ee7\u627f\u7b2c\u4e00\u4e2atrait, \u4f7f\u7528 with \u5173\u952e\u5b57\u53bb\u7ee7\u627f\u5176\u4ed6\u7684 trait , \u6ce8\u610f\u6bcf\u7ee7\u627f\u4e00\u4e2a\u65b0\u7684 trait \u90fd\u9700\u8981\u5355\u72ec\u4f7f\u7528\u4e00\u4e2a with \u5173\u952e\u5b57, \u793a\u4f8b\u5982\u4e0b: class Dog extends Speaker with Runner with OtherTrait { } \u5982\u679cclass\u53ea\u9700\u8981\u7ee7\u627f\u4e00\u4e2a trait , \u90a3\u4e48\u76f4\u63a5\u4f7f\u7528 extends \u5173\u952e\u5b57\u5373\u53ef. Tip: \u7ee7\u627f trait \u7684\u5b50\u7c7b\u9700\u8981\u5b9e\u73b0 trait \u4e2d\u6240\u6709\u5df2\u58f0\u660e\u7684\u65b9\u6cd5 Using Scala Traits like Abstract Classes \u5f53\u6211\u4eec\u50cf\u62bd\u8c61\u7c7b\u4e00\u6837\u4f7f\u7528 trait \u65f6, \u6211\u4eec\u5373\u53ef\u4ee5\u5728 trait \u4e2d\u58f0\u660e\u53ea\u5305\u542b\u7b7e\u540d\u7684\u65b9\u6cd5(\u6ca1\u6709\u65b9\u6cd5\u4f53)\uff0c\u4e5f\u53ef\u4ee5\u58f0\u660e\u5e26\u65b9\u6cd5\u4f53\u7684\u65b9\u6cd5. A first example \u4e0a\u4e00\u8282\u6211\u4eec\u63d0\u5230\u4e86\u732b\u3001\u72d7\u90fd\u5c5e\u4e8e\u52a8\u7269\uff0c\u7ec6\u5206\u4e0b\u6765\u5176\u5b9e\u732b\u3001\u72d7\u53ef\u4ee5\u5212\u5206\u4e3a\u5ba0\u7269, \u6211\u4eec\u53ef\u4ee5\u5c06\u5ba0\u7269\u7684\u7279\u6027\u63d0\u53d6\u51fa\u6765\uff0c\u62bd\u8c61\u6210\u4e00\u4e2atrait\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b: trait Pet { def eat() = \"eat\" def comeToMaster(): Unit } \u63a5\u4e0b\u91cc\u6211\u4eec\u4f7f\u7528 Pet \u8fd9\u4e2atrait\u6765\u4e30\u5bcc\u72d7\u7684\u6a21\u578b, \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b: class Dog(name: String) extends Speaker with Runner with Pet { override def speak() = \"dog Woof!\" override def run(): Unit = println(\"dog run\") override def comeToMaster(): Unit = println(s\"Woo-hoo, $name is coming!\") } Mixing traits in on the fly Scala\u6709\u4e00\u4e2a\u6709\u8da3\u7684\u7279\u6027\uff0c\u4f60\u53ef\u4ee5\u52a8\u6001\u7684\u6df7\u5408\u591a\u4e2a\u6709\u5b9e\u73b0\u65b9\u6cd5\u7684 trait \uff0c \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b: trait Speaker { def speak() = \"speak\" } trait Runner { def run(): Unit = println(\"I'm running~\") } class Cat(name: String) val cat= new Cat(\"Tom\") with Speaker with Runner \u4ee3\u7801\u4e2d\u7684 cat \u5bf9\u8c61\u62e5\u6709 speak \u548c run \u65b9\u6cd5. \u6ce8\u610f\u5f53 Speaker \u5305\u542b\u4e00\u4e2a\u6ca1\u6709\u5b9e\u73b0\u7684\u65b9\u6cd5\u65f6, \u5c06\u65e0\u6cd5\u901a\u8fc7\u4e0a\u8ff0\u7684\u65b9\u5f0f\u521b\u5efa cat \u5bf9\u8c61, \u56e0\u4e3a\u6211\u4eec\u5fc5\u987b\u5b9e\u73b0\u6240\u6709\u7684\u65b9\u6cd5, \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b: trait Speaker { def speak() = \"speak\" def wait(): Unit } trait Runner { def run(): Unit = println(\"I'm running~\") } class Cat(name: String) val cat= new Cat(\"Tom\") with Speaker with Runner { override def wait(): Unit = println(\"Waiting 1 mins~\") } Abstract Classes Scala\u4e2d\u4e5f\u6709\u62bd\u8c61\u7c7b\u7684\u6982\u5ff5, \u5b83\u4e0eJava\u4e2d\u7684\u62bd\u8c61\u7c7b\u7c7b\u4f3c. \u4f46\u56e0\u4e3a trait \u662f\u5982\u6b64\u7684\u5f3a\u5927, \u6211\u4eec\u5f88\u5c11\u4f1a\u4f7f\u7528\u62bd\u8c61\u7c7b. \u5b9e\u9645\u4e0a, \u53ea\u6709\u5728\u5982\u4e0b\u573a\u666f\u4e0b\u6211\u4eec\u624d\u4f1a\u4f7f\u7528 trait : \u521b\u5efa\u4e00\u4e2a\u6709\u6784\u9020\u53c2\u6570\u7684\u57fa\u7840\u7c7b \u4f60\u7684\u4ee3\u7801\u9700\u8981\u88abJava\u4ee3\u7801\u8c03\u7528 Scala traits don\u2019t allow constructor parameters Scala\u7684 trait \u662f\u4e0d\u5141\u8bb8\u5b9a\u4e49\u6784\u9020\u53c2\u6570\u7684, \u5982\u4e0b\u4ee3\u7801\u5c06\u65e0\u6cd5\u8fdb\u884c\u7f16\u8bd1: // this won\u2019t compile trait Animal(name: String) \u5982\u679c\u4f60\u60f3\u8981\u521b\u5efa\u4e00\u4e2a\u5e26\u6709\u6784\u9020\u53c2\u6570\u7684\u57fa\u7840\u7c7b, \u53ea\u80fd\u4f7f\u7528\u62bd\u8c61\u7c7b, \u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: abstract class Animal(name: String) Tip: \u4e00\u4e2a\u7c7b\u53ea\u80fd\u7ee7\u627f\u4e00\u4e2a\u62bd\u8c61\u7c7b When Scala code will be called from Java code Java\u6839\u672c\u4e0d\u8ba4\u8bc6Scala\u7684 trait , \u56e0\u6b64\u5982\u679c\u4f60\u60f3\u5728Java\u4ee3\u7801\u4e2d\u8c03\u7528Scala\u7684\u4ee3\u7801, \u90a3\u4f60\u53ea\u80fd\u4f7f\u7528\u62bd\u8c61\u7c7b\u800c\u4e0d\u662f trait , \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b: abstract class Pet(name: String) { def speak(): Unit = println(\"Yo\") // concrete implementation def comeToMaster(): Unit // abstract method } class Dog(dogName: String) extends Pet(dogName) { override def speak(): Unit = println(s\"$dogName Woof\") def comeToMaster(): Unit = println(s\"Here I come!\") } val dog = new Dog(\"Tom\") dog.speak() // Tom Woof \u6ce8\u610f Dog \u7684\u53c2\u6570\u662f\u5982\u4f55\u4f20\u5165\u5230 Pet \u7684.","title":"Trait"},{"location":"basics/traits/#traits","text":"trait\u662fScala\u4e2d\u9664\u4e86class\u5916\u7684\u53e6\u4e00\u4e2a\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7279\u6027\uff0c\u4f60\u53ef\u4ee5\u50cfJava\u4e2d\u7684interface\u90a3\u6837\u4f7f\u7528trait\uff0c\u4ec5\u4ec5\u628a\u5b83\u5f53\u505a\u4e00\u4e2a\u63a5\u53e3; \u540c\u65f6\uff0c\u4f60\u4e5f\u53ef\u4ee5\u50cfJava\u4e2d\u7684\u62bd\u8c61\u7c7b(abstract class)\u90a3\u6837\u4f7f\u7528trait, \u5728trait\u4e2d\u5b9a\u4e49\u5b8c\u6574\u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u4ec5\u4ec5\u53ea\u662f\u58f0\u660e\u65b9\u6cd5. Scala\u7684class\u4e5f\u80fd\u7ee7\u627f\u4e00\u4e2a\u6216\u8005\u591a\u4e2atrait.","title":"Traits"},{"location":"basics/traits/#using-scala-traits-as-interfaces","text":"\u5f53\u6211\u4eec\u5c06 trait \u5f53\u505a\u63a5\u53e3\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 trait \u91cc\u4ec5\u4ec5\u5b9a\u4e49\u4e00\u4e9b\u529f\u80fd\u7684\u63a5\u53e3\uff0c\u800c\u5e76\u4e0d\u4e3a\u8fd9\u4e9b\u529f\u80fd\u5b9e\u73b0\u4efb\u4f55\u7684\u884c\u4e3a.","title":"Using Scala Traits as Interfaces"},{"location":"basics/traits/#a-simple-example","text":"\u6211\u4eec\u4ece\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5f00\u59cb\uff0c\u60f3\u8c61\u4e00\u4e0b\u4f60\u60f3\u8981\u5199\u4e00\u4e9b\u4ee3\u7801\u4e3a\u52a8\u7269\u6784\u5efa\u6a21\u578b, \u6bd4\u5982\u732b\u3001\u72d7, \u6211\u4eec\u53ef\u4ee5\u5148\u63d0\u53d6\u4e00\u4e9b\u52a8\u7269\u7684\u901a\u7528\u7279\u6027, \u6bd4\u5982\u52a8\u7269\u90fd\u4f1a\u53eb\uff0c\u52a8\u7269\u90fd\u4f1a\u8dd1, \u4f46\u662f\u53eb\u7684\u58f0\u97f3\u4e0d\u4e00\u6837\uff0c\u8dd1\u7684\u65b9\u5f0f\u4e5f\u4e0d\u4e00\u6837, \u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06\u53eb\u548c\u8dd1\u62bd\u8c61\u6210\u4e24\u4e2atrait, \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b: trait Speaker { def speak(): String } trait Runner { def run(): Unit }","title":"A simple example"},{"location":"basics/traits/#extending-traits","text":"\u4e0a\u4e00\u8282\u4e2d\u7684 Speaker \u548c Runner \u4e2d\u4ec5\u4ec5\u662f\u58f0\u660e\u4e86\u529f\u80fd\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c06\u901a\u8fc7\u5177\u4f53\u67d0\u4e00\u79cd\u52a8\u7269\u6765\u5b9e\u73b0\u8fd9\u4e9btrait\u4e2d\u5b9a\u4e49\u7684\u529f\u80fd, \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b: class Dog extends Speaker with Runner { override def speak() = \"dog Woof!\" override def run(): Unit = println(\"dog Run\uff01\") } \u5982\u4e0a\u4ee3\u7801\u6240\u793a\u5c31\u662fScala\u4e2d class \u7ee7\u627f trait \u7684\u65b9\u5f0f\u4e86, \u5f53\u9700\u8981\u7ee7\u627f\u591a\u4e2atrait\u65f6\uff0c\u4f7f\u7528 extends \u5173\u952e\u5b57\u53bb\u7ee7\u627f\u7b2c\u4e00\u4e2atrait, \u4f7f\u7528 with \u5173\u952e\u5b57\u53bb\u7ee7\u627f\u5176\u4ed6\u7684 trait , \u6ce8\u610f\u6bcf\u7ee7\u627f\u4e00\u4e2a\u65b0\u7684 trait \u90fd\u9700\u8981\u5355\u72ec\u4f7f\u7528\u4e00\u4e2a with \u5173\u952e\u5b57, \u793a\u4f8b\u5982\u4e0b: class Dog extends Speaker with Runner with OtherTrait { } \u5982\u679cclass\u53ea\u9700\u8981\u7ee7\u627f\u4e00\u4e2a trait , \u90a3\u4e48\u76f4\u63a5\u4f7f\u7528 extends \u5173\u952e\u5b57\u5373\u53ef. Tip: \u7ee7\u627f trait \u7684\u5b50\u7c7b\u9700\u8981\u5b9e\u73b0 trait \u4e2d\u6240\u6709\u5df2\u58f0\u660e\u7684\u65b9\u6cd5","title":"Extending traits"},{"location":"basics/traits/#using-scala-traits-like-abstract-classes","text":"\u5f53\u6211\u4eec\u50cf\u62bd\u8c61\u7c7b\u4e00\u6837\u4f7f\u7528 trait \u65f6, \u6211\u4eec\u5373\u53ef\u4ee5\u5728 trait \u4e2d\u58f0\u660e\u53ea\u5305\u542b\u7b7e\u540d\u7684\u65b9\u6cd5(\u6ca1\u6709\u65b9\u6cd5\u4f53)\uff0c\u4e5f\u53ef\u4ee5\u58f0\u660e\u5e26\u65b9\u6cd5\u4f53\u7684\u65b9\u6cd5.","title":"Using Scala Traits like Abstract Classes"},{"location":"basics/traits/#a-first-example","text":"\u4e0a\u4e00\u8282\u6211\u4eec\u63d0\u5230\u4e86\u732b\u3001\u72d7\u90fd\u5c5e\u4e8e\u52a8\u7269\uff0c\u7ec6\u5206\u4e0b\u6765\u5176\u5b9e\u732b\u3001\u72d7\u53ef\u4ee5\u5212\u5206\u4e3a\u5ba0\u7269, \u6211\u4eec\u53ef\u4ee5\u5c06\u5ba0\u7269\u7684\u7279\u6027\u63d0\u53d6\u51fa\u6765\uff0c\u62bd\u8c61\u6210\u4e00\u4e2atrait\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b: trait Pet { def eat() = \"eat\" def comeToMaster(): Unit } \u63a5\u4e0b\u91cc\u6211\u4eec\u4f7f\u7528 Pet \u8fd9\u4e2atrait\u6765\u4e30\u5bcc\u72d7\u7684\u6a21\u578b, \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b: class Dog(name: String) extends Speaker with Runner with Pet { override def speak() = \"dog Woof!\" override def run(): Unit = println(\"dog run\") override def comeToMaster(): Unit = println(s\"Woo-hoo, $name is coming!\") }","title":"A first example"},{"location":"basics/traits/#mixing-traits-in-on-the-fly","text":"Scala\u6709\u4e00\u4e2a\u6709\u8da3\u7684\u7279\u6027\uff0c\u4f60\u53ef\u4ee5\u52a8\u6001\u7684\u6df7\u5408\u591a\u4e2a\u6709\u5b9e\u73b0\u65b9\u6cd5\u7684 trait \uff0c \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b: trait Speaker { def speak() = \"speak\" } trait Runner { def run(): Unit = println(\"I'm running~\") } class Cat(name: String) val cat= new Cat(\"Tom\") with Speaker with Runner \u4ee3\u7801\u4e2d\u7684 cat \u5bf9\u8c61\u62e5\u6709 speak \u548c run \u65b9\u6cd5. \u6ce8\u610f\u5f53 Speaker \u5305\u542b\u4e00\u4e2a\u6ca1\u6709\u5b9e\u73b0\u7684\u65b9\u6cd5\u65f6, \u5c06\u65e0\u6cd5\u901a\u8fc7\u4e0a\u8ff0\u7684\u65b9\u5f0f\u521b\u5efa cat \u5bf9\u8c61, \u56e0\u4e3a\u6211\u4eec\u5fc5\u987b\u5b9e\u73b0\u6240\u6709\u7684\u65b9\u6cd5, \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b: trait Speaker { def speak() = \"speak\" def wait(): Unit } trait Runner { def run(): Unit = println(\"I'm running~\") } class Cat(name: String) val cat= new Cat(\"Tom\") with Speaker with Runner { override def wait(): Unit = println(\"Waiting 1 mins~\") }","title":"Mixing traits in on the fly"},{"location":"basics/traits/#abstract-classes","text":"Scala\u4e2d\u4e5f\u6709\u62bd\u8c61\u7c7b\u7684\u6982\u5ff5, \u5b83\u4e0eJava\u4e2d\u7684\u62bd\u8c61\u7c7b\u7c7b\u4f3c. \u4f46\u56e0\u4e3a trait \u662f\u5982\u6b64\u7684\u5f3a\u5927, \u6211\u4eec\u5f88\u5c11\u4f1a\u4f7f\u7528\u62bd\u8c61\u7c7b. \u5b9e\u9645\u4e0a, \u53ea\u6709\u5728\u5982\u4e0b\u573a\u666f\u4e0b\u6211\u4eec\u624d\u4f1a\u4f7f\u7528 trait : \u521b\u5efa\u4e00\u4e2a\u6709\u6784\u9020\u53c2\u6570\u7684\u57fa\u7840\u7c7b \u4f60\u7684\u4ee3\u7801\u9700\u8981\u88abJava\u4ee3\u7801\u8c03\u7528","title":"Abstract Classes"},{"location":"basics/traits/#scala-traits-dont-allow-constructor-parameters","text":"Scala\u7684 trait \u662f\u4e0d\u5141\u8bb8\u5b9a\u4e49\u6784\u9020\u53c2\u6570\u7684, \u5982\u4e0b\u4ee3\u7801\u5c06\u65e0\u6cd5\u8fdb\u884c\u7f16\u8bd1: // this won\u2019t compile trait Animal(name: String) \u5982\u679c\u4f60\u60f3\u8981\u521b\u5efa\u4e00\u4e2a\u5e26\u6709\u6784\u9020\u53c2\u6570\u7684\u57fa\u7840\u7c7b, \u53ea\u80fd\u4f7f\u7528\u62bd\u8c61\u7c7b, \u4ee3\u7801\u793a\u4f8b\u5982\u4e0b: abstract class Animal(name: String) Tip: \u4e00\u4e2a\u7c7b\u53ea\u80fd\u7ee7\u627f\u4e00\u4e2a\u62bd\u8c61\u7c7b","title":"Scala traits don\u2019t allow constructor parameters"},{"location":"basics/traits/#when-scala-code-will-be-called-from-java-code","text":"Java\u6839\u672c\u4e0d\u8ba4\u8bc6Scala\u7684 trait , \u56e0\u6b64\u5982\u679c\u4f60\u60f3\u5728Java\u4ee3\u7801\u4e2d\u8c03\u7528Scala\u7684\u4ee3\u7801, \u90a3\u4f60\u53ea\u80fd\u4f7f\u7528\u62bd\u8c61\u7c7b\u800c\u4e0d\u662f trait , \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b: abstract class Pet(name: String) { def speak(): Unit = println(\"Yo\") // concrete implementation def comeToMaster(): Unit // abstract method } class Dog(dogName: String) extends Pet(dogName) { override def speak(): Unit = println(s\"$dogName Woof\") def comeToMaster(): Unit = println(s\"Here I come!\") } val dog = new Dog(\"Tom\") dog.speak() // Tom Woof \u6ce8\u610f Dog \u7684\u53c2\u6570\u662f\u5982\u4f55\u4f20\u5165\u5230 Pet \u7684.","title":"When Scala code will be called from Java code"},{"location":"basics/variables/","text":"Variables Two Types of Variables Scala \u4e2d\u6709\u4e24\u79cd\u53d8\u91cf\u7c7b\u578b\uff08\u975e\u6570\u636e\u7c7b\u578b\uff09 val \u7528\u6765\u521b\u5efa\u4e0d\u53ef\u53d8\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u7c7b\u4f3c\u4e8eJava\u4e2d final \u4fee\u9970\u7b26\u7684\u4f5c\u7528 var \u7528\u6765\u521b\u5efa\u53ef\u53d8\u7c7b\u578b\u7684\u53d8\u91cf \u5982\u4e0b\u4e3a Scala \u4e2d\u53d8\u91cf\u58f0\u660e\u7684\u793a\u4f8b\u4ee3\u7801\uff1a // immutable val s = \"hello\" s = \"hello, world\" // compile error: reassignment to val val dog = new Dog(\"Tom\") // mutable var i = 123 i = 456 // compile pass The Type is Optional \u4e0a\u4e00\u4e2aSection\u7684\u793a\u4f8b\u8868\u660e Scala \u7f16\u8bd1\u5668\u8db3\u591f\u667a\u80fd\uff0c\u5728\u7f16\u8bd1\u671f\u95f4\u53ef\u4ee5\u901a\u8fc7 = \u53f3\u4fa7\u7684\u53d8\u91cf\u503c\u63a8\u65ad\u51fa\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b.\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u663e\u5f0f\u5730\u58f0\u660e\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a val s: String = \"hello\" var i: Int = 123 \u4e00\u822c\u6765\u8bf4\uff0c\u5bf9\u4e8e Scala \u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u671f\u95f4\u5bf9\u53d8\u91cf\u6570\u636e\u7c7b\u578b\u7684\u63a8\u65ad\uff0c\u662f\u4e0d\u9700\u8981\u53c2\u8003\u53d8\u91cf\u663e\u5f0f\u58f0\u660e\u7684\u6570\u636e\u7c7b\u578b\u7684\uff0c\u4e0d\u663e\u5f0f\u58f0\u660e\u6570\u636e\u7c7b\u578b\u662f\u9996\u9009\uff0c\u56e0\u4e3a\u663e\u5f0f\u7684\u65b9\u5f0f\u5c06\u8ba9\u4ee3\u7801\u53d8\u5f97\u5197\u4f59. \u4f46\u5982\u679c\u4f60\u89c9\u5f97\u663e\u5f0f\u58f0\u660e\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\u4f1a\u589e\u52a0\u4ee3\u7801\u7684 \u53ef\u8bfb\u6027 \uff0c\u4f60\u53ef\u4ee5\u8fd9\u6837\u505a. Tip: \u5b9e\u9645\u4e0a\uff0c\u5f53\u6211\u4eec\u4f7f\u7528\u7b2c\u4e09\u65b9\u5e93\u4e2d\u7684\u65b9\u6cd5\u65f6\uff0c\u663e\u5f0f\u58f0\u660e\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\u4f1a\u7ed9\u4ee3\u7801\u7684 \u53ef\u8bfb\u6027 \u5e26\u6765\u663e\u8457\u63d0\u5347\uff0c\u5c24\u5176\u662f\u975e\u5e38\u89c1\u5e93\u6216\u8005\u5176\u65b9\u6cd5\u540d\u79f0\u6ca1\u6709\u660e\u786e\u6570\u636e\u7c7b\u578b\u7684\u573a\u666f. \u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 \u6ce8\u91ca \u6765\u9610\u660e\u6570\u636e\u7c7b\u578b, \u4f46\u662f\u4ee3\u7801\u7684 \u89c1\u540d\u77e5\u610f \u662f\u66f4\u52a0\u63a8\u8350\u7684\u505a\u6cd5\uff0c\u6beb\u4e0d\u5938\u5f20\u5730\u8bf4\uff1a \u597d\u4ee3\u7801\u4e0d\u9700\u8981\u6ce8\u91ca","title":"Variables"},{"location":"basics/variables/#variables","text":"","title":"Variables"},{"location":"basics/variables/#two-types-of-variables","text":"Scala \u4e2d\u6709\u4e24\u79cd\u53d8\u91cf\u7c7b\u578b\uff08\u975e\u6570\u636e\u7c7b\u578b\uff09 val \u7528\u6765\u521b\u5efa\u4e0d\u53ef\u53d8\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u7c7b\u4f3c\u4e8eJava\u4e2d final \u4fee\u9970\u7b26\u7684\u4f5c\u7528 var \u7528\u6765\u521b\u5efa\u53ef\u53d8\u7c7b\u578b\u7684\u53d8\u91cf \u5982\u4e0b\u4e3a Scala \u4e2d\u53d8\u91cf\u58f0\u660e\u7684\u793a\u4f8b\u4ee3\u7801\uff1a // immutable val s = \"hello\" s = \"hello, world\" // compile error: reassignment to val val dog = new Dog(\"Tom\") // mutable var i = 123 i = 456 // compile pass","title":"Two Types of Variables"},{"location":"basics/variables/#the-type-is-optional","text":"\u4e0a\u4e00\u4e2aSection\u7684\u793a\u4f8b\u8868\u660e Scala \u7f16\u8bd1\u5668\u8db3\u591f\u667a\u80fd\uff0c\u5728\u7f16\u8bd1\u671f\u95f4\u53ef\u4ee5\u901a\u8fc7 = \u53f3\u4fa7\u7684\u53d8\u91cf\u503c\u63a8\u65ad\u51fa\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b.\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u663e\u5f0f\u5730\u58f0\u660e\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a val s: String = \"hello\" var i: Int = 123 \u4e00\u822c\u6765\u8bf4\uff0c\u5bf9\u4e8e Scala \u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u671f\u95f4\u5bf9\u53d8\u91cf\u6570\u636e\u7c7b\u578b\u7684\u63a8\u65ad\uff0c\u662f\u4e0d\u9700\u8981\u53c2\u8003\u53d8\u91cf\u663e\u5f0f\u58f0\u660e\u7684\u6570\u636e\u7c7b\u578b\u7684\uff0c\u4e0d\u663e\u5f0f\u58f0\u660e\u6570\u636e\u7c7b\u578b\u662f\u9996\u9009\uff0c\u56e0\u4e3a\u663e\u5f0f\u7684\u65b9\u5f0f\u5c06\u8ba9\u4ee3\u7801\u53d8\u5f97\u5197\u4f59. \u4f46\u5982\u679c\u4f60\u89c9\u5f97\u663e\u5f0f\u58f0\u660e\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\u4f1a\u589e\u52a0\u4ee3\u7801\u7684 \u53ef\u8bfb\u6027 \uff0c\u4f60\u53ef\u4ee5\u8fd9\u6837\u505a. Tip: \u5b9e\u9645\u4e0a\uff0c\u5f53\u6211\u4eec\u4f7f\u7528\u7b2c\u4e09\u65b9\u5e93\u4e2d\u7684\u65b9\u6cd5\u65f6\uff0c\u663e\u5f0f\u58f0\u660e\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\u4f1a\u7ed9\u4ee3\u7801\u7684 \u53ef\u8bfb\u6027 \u5e26\u6765\u663e\u8457\u63d0\u5347\uff0c\u5c24\u5176\u662f\u975e\u5e38\u89c1\u5e93\u6216\u8005\u5176\u65b9\u6cd5\u540d\u79f0\u6ca1\u6709\u660e\u786e\u6570\u636e\u7c7b\u578b\u7684\u573a\u666f. \u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 \u6ce8\u91ca \u6765\u9610\u660e\u6570\u636e\u7c7b\u578b, \u4f46\u662f\u4ee3\u7801\u7684 \u89c1\u540d\u77e5\u610f \u662f\u66f4\u52a0\u63a8\u8350\u7684\u505a\u6cd5\uff0c\u6beb\u4e0d\u5938\u5f20\u5730\u8bf4\uff1a \u597d\u4ee3\u7801\u4e0d\u9700\u8981\u6ce8\u91ca","title":"The Type is Optional"},{"location":"build-tool/sbt/","text":"sbt What is sbt? A build tool for Scala (and Java) \u5f53 Mark Harrah \u521b\u9020sbt\u7684\u65f6\u5019, \u5b83\u88ab\u79f0\u4e3a\"Simple Build Tool\" \u4f46\u5b83\u7b2c\u4e00\u6b21\u516c\u5f00\u5ba3\u5e03\u7684\u65f6\u5019\uff0c\u540d\u5b57 sbt \u4e0d\u4ee3\u8868\u4efb\u4f55\u4e1c\u897f\uff0c\u5b83\u53ea\u662f \"sbt\"\uff0c\u5b83\u5e94\u8be5\u8fd9\u6837\u5199 [1] Other options of Scala build tool Java build tools, like ant, maven, gradle Mill Fury seed CBT ... Why sbt? The most used scala build tool Scala\u5b98\u65b9\u63a8\u8350 93.6% Scala\u5f00\u53d1\u8005\u7684\u9009\u62e9 [2] \u4f7f\u7528Scala\u4f5c\u4e3aDSL\u5b9a\u4e49build\u6587\u4ef6 \u5e02\u9762\u4e0a\u51e0\u4e4e\u6240\u6709\u7684Scala\u6307\u5357\u90fd\u662f\u57fa\u4e8e sbt \u53ef\u4ee5\u6df7\u5408\u6784\u5efaJava\u548cScala\u9879\u76ee \u589e\u91cf\u7f16\u8bd1(\u4f18\u79c0\u7684\u589e\u91cf\u7f16\u8bd1\u8bbe\u8ba1) \u901a\u8fc7\u89e6\u53d1\u6267\u884c(trigger execution)\u7279\u6027\u652f\u6301\u6301\u7eed\u7684\u7f16\u8bd1\u4e0e\u6d4b\u8bd5(file changes watch) \u652f\u6301\u5e76\u884c\u4efb\u52a1\u6267\u884c \u652f\u6301\u5927\u91cf\u7684\u63d2\u4ef6 \u53ef\u4ee5\u91cd\u7528Maven\u6216\u8005ivy\u7684repository\u8fdb\u884c\u4f9d\u8d56\u7ba1\u7406 The sbt project structure \u251c\u2500\u2500 build.sbt ------ build definition file \u251c\u2500\u2500 project ------ build support files \u2502 \u251c\u2500\u2500 build.properties \u2502 \u251c\u2500\u2500 plugins.sbt \u2502 \u2514\u2500\u2500 project \u251c\u2500\u2500 src \u2502 \u251c\u2500\u2500 main \u2502 \u2502 \u251c\u2500\u2500 resources \u2502 \u2502 \u2514\u2500\u2500 scala \u2502 \u2514\u2500\u2500 test \u2502 \u251c\u2500\u2500 resources \u2502 \u2514\u2500\u2500 scala \u2514\u2500\u2500 target ------ build products Build Definition Settings Expression Introduction {key} := {body} \u914d\u7f6e\u8868\u8fbe\u5f0f\u5305\u542b\u5982\u4e0b\u4e09\u90e8\u5206: \u64cd\u4f5c\u7b26\u5de6\u4fa7\u88ab\u79f0\u4e3a key \u64cd\u4f5c\u7b26\u7528 := \u8868\u793a \u64cd\u4f5c\u7b26\u53f3\u4fa7\u88ab\u79f0\u4e3a body Keys sbt \u9884\u7f6e\u7684keys\u90fd\u88ab\u5b9a\u4e49\u5728 sbt.Keys \u91cc, \u9884\u7f6e\u7684Keys\u4f1a\u88ab\u5168\u90e8\u5bfc\u5165\u5230 sbt.Keys 3 \u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u81ea\u5b9a\u4e49keys scala lazy val customKey = settingKey[String](\"The custom key\") Adding project description name := \"scala-demo-project\" organization := \"com.shuailli.demo\" version := \"0.1.0-SNAPSHOT\" scalaVersion := \"2.13.5\" Adding library dependencies // define libs version val http4sVersion = \"0.21.29\" val specs2Version = \"4.11.0\" libraryDependencies ++= Seq( \"org.http4s\" %% \"http4s-dsl\" % http4sVersion, \"org.http4s\" %% \"http4s-blaze-client\" % http4sVersion, \"org.http4s\" %% \"http4s-circe\" % http4sVersion, \"org.specs2\" %% \"specs2-core\" % specs2Version % \"test\", ) Tips Scala\u4e3b\u6b21\u7248\u672c\u7684\u7279\u6027\u5dee\u5f02\u8f83\u5927\uff0c\u56e0\u6b64\u5f88\u591alib\u90fd\u4f1a\u88ab\u7f16\u8bd1\u7ed9\u591a\u4e2aScala\u7248\u672c \u53ef\u89c1\u793a\u4f8b \u901a\u8fc7 %% \u65b9\u6cd5\u83b7\u53d6\u76f8\u5e94Scala\u7248\u672c\u7684lib\uff0c\u786e\u4fddlib\u5bf9\u9879\u76ee\u662f\u4e8c\u8fdb\u5236\u517c\u5bb9\u7684 \u5982\u679c\u4f60\u7528\u7684\u662f groupID %% artifactID % revision \u800c\u4e0d\u662f groupID % artifactID % revision\uff08\u533a\u522b\u5728\u4e8e groupID \u540e\u9762\u662f %%\uff09\uff0csbt \u4f1a\u5728 lib\u540d\u79f0\u4e2d\u52a0\u4e0a\u9879\u76ee\u7684 Scala \u7248\u672c\u53f7\u3002 \u8fd9\u53ea\u662f\u4e00\u79cd\u5feb\u6377\u65b9\u6cd5\u3002\u4f60\u53ef\u4ee5\u8fd9\u6837\u5199\u4e0d\u7528 %%: libraryDependencies += \"org.scala-tools\" % \"scala-stm_2.11\" % \"0.3\" \u5047\u8bbe\u8fd9\u4e2a\u6784\u5efa\u7684 scalaVersion \u662f 2.11.1\uff0c\u4e0b\u9762\u8fd9\u79cd\u65b9\u5f0f\u662f\u7b49\u6548\u7684\uff08\u6ce8\u610f \"org.scala-tools\" \u540e\u9762\u662f %%\uff09: libraryDependencies += \"org.scala-tools\" %% \"scala-stm\" % \"0.3\" Compiler Options scalacOptions ++= Seq( \"-encoding\", \"utf8\", // Option and arguments on same line \"-Xfatal-warnings\", // New lines for each options \"-deprecation\", \"-unchecked\", \"-language:implicitConversions\", \"-language:higherKinds\", \"-language:existentials\", \"-language:postfixOps\" ) \u5b98\u65b9\u5b8c\u6574\u7684compiler options\u53ef\u89c1: \u94fe\u63a5 \u4e00\u4efd\u63a8\u8350\u7684compiler options\u914d\u7f6e\u53ef\u89c1: \u94fe\u63a5 Command Alias addCommandAlias(\"checkAndTest\", \";clean;scalafmtCheck;coverage;test;coverageReport;coverageOff\") Adding plugins // define lib version val kindProjectorVersion = \"0.13.0\" addCompilerPlugin(\"org.typelevel\" %% \"kind-projector\" % kindProjectorVersion cross CrossVersion.full) Build Support Files \u76ee\u5f55 project \u4e0b\u4efb\u4f55\u7684\u6587\u4ef6\u90fd\u53ef\u4ee5\u88ab\u7528\u5728\u6784\u5efa\u8fc7\u7a0b\u4e2d. Specifying the sbt version \u4f7f\u7528 project/build.properties \u6587\u4ef6\u6307\u5b9a sbt \u7248\u672c sbt.version = 1.4.7 \u5982\u679c\u6307\u5b9a\u7684 sbt \u7248\u672c\u5728\u672c\u5730\u4e0d\u5b58\u5728, sbt launcher \u5c06\u4f1a\u5728\u6784\u5efa\u5f00\u59cb\u524d\u81ea\u52a8\u4e3a\u4f60\u4e0b\u8f7d. \u8fd9\u4e2a\u7279\u6027\u4f1a\u4fdd\u8bc1\u672c\u5730\u9884\u88c5\u4e86\u4e0d\u540c\u7248\u672c sbt \u7684\u5f00\u53d1\u8005\u5bf9\u540c\u4e00\u9879\u76ee\u7684\u6784\u5efa\u751f\u6210\u4e00\u81f4\u7684\u6784\u5efa\u4ea7\u7269, \u56e0\u4e3a\u5b83\u5c06\u6700\u7ec8\u4f7f\u7528\u6307\u5b9a\u7248\u672c\u7684sbt Organize plugins \u4f7f\u7528 project/plugins.sbt \u6587\u4ef6\u7ba1\u7406 sbt \u63d2\u4ef6 addSbtPlugin(\"com.typesafe.sbt\" % \"sbt-native-packager\" % \"1.8.0\") addSbtPlugin(\"org.scoverage\" % \"sbt-scoverage\" % \"1.6.1\") addSbtPlugin(\"org.scalameta\" % \"sbt-scalafmt\" % \"2.4.2\") How to run sbt? Installation \u5b89\u88c5 JDK \uff08\u63a8\u8350\u5b89\u88c5JDK8\u6216\u8005JDK11\uff09 \u5b89\u88c5 sbt // In MacOS $ brew install sbt \u73b0\u5728\u4f60\u53ef\u4ee5\u5f00\u59cbScala\u9879\u76ee\u7684\u5f00\u53d1 Tips: Scala\u4e0d\u540c\u4e8e\u5176\u4ed6\u8bed\u8a00\uff0cScala\u4e3b\u6b21\u7248\u672c\u4e4b\u95f4\u7684\u7279\u6027\u5dee\u5f02\u8f83\u5927\uff0c\u56e0\u6b64\u901a\u5e38\u90fd\u662f\u4e3a\u6bcf\u4e2a\u9879\u76ee\u5b89\u88c5\u7279\u5b9a\u7248\u672c( build.sbt )\u7684Scala,\u800c\u4e0d\u662f\u5168\u5c40\u5b89\u88c5\uff0c_ sbt _\u5c31\u53ef\u4ee5\u7528\u6765\u7ba1\u7406\u6bcf\u4e2aScala\u9879\u76ee\u7279\u5b9a\u7684Scala\u7248\u672c. \u5b89\u88c5 sbt \u540e\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b, sbt \u4f1a\u4f7f\u7528\u548c\u81ea\u8eab\u7248\u672c\u76f8\u5e94\u7248\u672c\u7684Scala\u6765\u6784\u5efa\u9879\u76ee sbt Shell and common commands \u8fdb\u5165 sbt \u4ea4\u4e92\u6a21\u5f0f $ sbt \u5e38\u7528\u547d\u4ee4: > new > clean > compile > test > testOnly > package > console > run Batch mode \u4f60\u4e5f\u53ef\u4ee5\u7528\u6279\u5904\u7406\u6a21\u5f0f\u6765\u8fd0\u884c sbt\uff0c\u53ef\u4ee5\u4ee5\u7a7a\u683c\u4e3a\u5206\u9694\u7b26\u6307\u5b9a\u53c2\u6570\u3002\u5bf9\u4e8e\u63a5\u53d7\u53c2\u6570\u7684 sbt \u547d\u4ee4\uff0c\u5c06\u547d\u4ee4\u548c\u53c2\u6570\u7528\u5f15\u53f7\u5f15\u8d77\u6765\u4e00\u8d77\u4f20\u7ed9 sbt \u3002\u4f8b\u5982\uff1a $ sbt clean compile \"testOnly TestA TestB\" \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0ctestOnly \u6709\u4e24\u4e2a\u53c2\u6570 TestA \u548c TestB\u3002\u8fd9\u4e2a\u547d\u4ee4\u4f1a\u6309\u987a\u5e8f\u6267\u884c\uff08clean\uff0c compile\uff0c \u7136\u540e testOnly\uff09. \u6279\u5904\u7406\u6a21\u5f0f\u4e0b\uff0c\u6784\u5efa\u5c06\u8fd0\u884c\u7684\u975e\u5e38\u6162. Continuous Build and Test \u4e3a\u4e86\u52a0\u5feb\u7f16\u8f91-\u7f16\u8bd1-\u6d4b\u8bd5\u5faa\u73af\uff0c\u4f60\u53ef\u4ee5\u8ba9 sbt \u5728\u4f60\u4fdd\u5b58\u6e90\u6587\u4ef6\u65f6\u81ea\u52a8\u91cd\u65b0\u7f16\u8bd1\u6216\u8005\u8dd1\u6d4b\u8bd5\u3002 \u5728\u547d\u4ee4\u524d\u9762\u52a0\u4e0a\u524d\u7f00 ~ \u540e\uff0c\u6bcf\u5f53\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u6e90\u6587\u4ef6\u53d1\u751f\u53d8\u5316\u65f6\u5c31\u4f1a\u81ea\u52a8\u8fd0\u884c\u8be5\u547d\u4ee4. \u4ea4\u4e92\u6a21\u5f0f\u4e0b\u5c1d\u8bd5 > ~ compile > ~ run > ~ testQuick \u4ea4\u4e92\u6a21\u5f0f\u4e0b\u6309 \u56de\u8f66\u952e \u505c\u6b62\u76d1\u89c6\u53d8\u5316\uff0c\u5f53\u7136\u4e86\u4ea4\u4e92\u6a21\u5f0f\u6216\u8005\u6279\u5904\u7406\u6a21\u5f0f\u4e0b\u5747\u53ef\u4f7f\u7528 ~ \u524d\u7f00. \u6279\u5904\u7406\u6a21\u5f0f\u4e0b\u5c1d\u8bd5 $ sbt '~ run' \u4e3a\u4e86\u533a\u5206\u7c7bUnix\u7cfb\u7edf\u4e0b\u548c sbt \u4e0b\u7684 ~ \u524d\u7f00(Unix\u7cfb\u7edf\u4e0b\u4ee3\u8868\u5f53\u524d\u7528\u6237\u6839\u76ee\u5f55)\uff0c\u5728\u6279\u5904\u7406\u6a21\u5f0f\u4e0b\u9700\u8981\u4f7f\u7528 ' \u5c06sbt\u7684\u547d\u4ee4\u5305\u8d77\u6765 Common plugins Formatter \u5728 project/plugins.sbt \u6587\u4ef6\u6dfb\u52a0\u63d2\u4ef6 addSbtPlugin(\"org.scalameta\" % \"sbt-scalafmt\" % \"2.4.2\") \u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u6dfb\u52a0\u914d\u7f6e\u6587\u4ef6 .scalafmt.conf \u793a\u4f8b\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u914d\u7f6e, \u5b98\u65b9\u914d\u7f6e\u8bf4\u660e\u8bf7\u89c1: \u94fe\u63a5 version = 2.7.5 maxColumn = 180 align = more danglingParentheses = false continuationIndent.defnSite = 2 \u6307\u5b9a\u5982\u4e0b\u547d\u4ee4\u6267\u884cformatter $ sbt scalafmt // or $ sbt scalafmtCheck Package & Release \u5728 project/plugins.sbt \u6587\u4ef6\u6dfb\u52a0\u6253\u5305\u63d2\u4ef6\uff08\u4ea7\u51fa\u80d6JAR\u5305-\u4e00\u4e2a\u5305\u542b\u4ee3\u7801\u548c\u5e93\u4e2d\u6240\u6709\u7c7b\u6587\u4ef6\u7684JAR\u6587\u4ef6\uff09 addSbtPlugin(\"com.eed3si9n\" % \"sbt-assembly\" % \"1.0.0\") \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u751f\u6210 JAR \u5305 $ sbt package \u5728 project/plugins.sbt \u6587\u4ef6\u6dfb\u52a0\u6253\u5305\u63d2\u4ef6\uff08\u4ea7\u51fa\u90e8\u7f72\u955c\u50cf\uff09 addSbtPlugin(\"com.typesafe.sbt\" % \"sbt-native-packager\" % \"1.7.5\") \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u4e3a\u4e0d\u540c\u7cfb\u7edf\u6784\u5efa\u90e8\u7f72\u955c\u50cf $ sbt debian:packageBin # deb package $ sbt windows:packageBin # msi package $ sbt docker:publishLocal # docker image Test & Coverage \u5728 project/plugins.sbt \u6587\u4ef6\u6dfb\u52a0\u63d2\u4ef6 addSbtPlugin(\"org.scoverage\" % \"sbt-scoverage\" % \"1.6.1\") \u5728 build.sbt \u6587\u4ef6\u6dfb\u52a0\u6d4b\u8bd5\u8986\u76d6\u7387\u914d\u7f6e coverageEnabled in Test := true coverageMinimum := 90 coverageFailOnMinimum := true coverageExcludedPackages := coverageExcludedClasses.mkString(\";\") \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u5747\u53ef\u8c03\u7528\u8986\u76d6\u7387\u68c0\u67e5 $ sbt coverage // or $ sbt test // or $ sbt coverageReport Scopes \u4e4b\u524d\u63d0\u5230\u4e86 key , \u5b9e\u9645\u4e0a\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u4e0a\u4e0b\u6587\u4e2d\u4e3a\u540c\u4e00\u4e2a key \u8d4b\u4e88\u4e0d\u540c\u7684\u503c\uff0c\u6bcf\u4e2a\u4e0a\u4e0b\u6587\u79f0\u4e4b\u4e3a scope \u4f8b\u5982\uff1a\u5982\u679c\u5728\u4f60\u7684\u6784\u5efa\u5b9a\u4e49\u4e2d\u6709\u591a\u4e2a\u9879\u76ee\uff0c\u5728\u6bcf\u4e2a\u9879\u76ee\u4e2d\u7684 version \u53ef\u4ee5\u662f\u4e0d\u540c\u7684\u503c. There are three scope axes Scope \u8f74\u662f\u4e00\u79cd\u7c7b\u578b\uff0c\u8be5\u7c7b\u578b\u7684\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u80fd\u5b9a\u4e49\u81ea\u5df1\u7684 scope\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u7684key\u53ef\u4ee5\u6709\u81ea\u5df1\u7279\u5b9a\u7684\u503c\uff09. Projects Configurations Tasks Scoping by Project axis \u5982\u679c\u4f60\u5c06\u591a\u4e2a\u9879\u76ee\u653e\u5728\u540c\u4e00\u4e2a\u6784\u5efa\u4e2d\uff0c\u6bcf\u4e2a\u9879\u76ee\u9700\u8981\u6709\u5c5e\u4e8e\u81ea\u5df1\u7684 settings \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c keys \u53ef\u4ee5\u6839\u636e\u9879\u76ee\u88ab\u5c40\u9650\u5728\u4e0d\u540c\u7684\u4e0a\u4e0b\u6587\u4e2d. \u5f53\u4e00\u4e2a\u9879\u76ee\u6ca1\u6709\u5b9a\u4e49\u9879\u76ee\u5c42\u7ea7\u7684 settings \u7684\u65f6\u5019\uff0c\u6784\u5efa\u5c42\u7ea7\u7684 settings \u901a\u5e38\u4f5c\u4e3a\u9ed8\u8ba4\u7684\u8bbe\u7f6e. \u5982\u4e0b\u793a\u4f8b\uff0c\u5229\u7528 project \u8f74\u8bbe\u7f6e\u6784\u5efa\u5c42\u7ea7\u7684 settings ThisBuild / scalaVersion := \"2.13.5\" ThisBuild / version := \"0.1.0-SNAPSHOT\" ThisBuild / organization := \"com.shuailli.demo\" ThisBuild \u4ee3\u8868\u7684\u5c31\u662f \u6784\u5efa\u5c42\u7ea7 Scoping by Configuration axis \u4e00\u4e2a configuration \u5b9a\u4e49\u4e00\u79cd\u7279\u5b9a\u7684\u6784\u5efa\uff0c\u53ef\u80fd\u5305\u542b\u5b83\u81ea\u5df1\u7684 classpath\uff0c\u6e90\u6587\u4ef6\u548c\u751f\u6210\u7684\u5305\u7b49. \u5728 sbt \u4e2d\u4f60\u53ef\u4ee5\u770b\u5230\u8fd9\u4e9b configurations\uff1a Compile \u5b9a\u4e49\u4e3b\u6784\u5efa (src/main/scala). Test \u5b9a\u4e49\u5982\u4f55\u6784\u5efa\u6d4b\u8bd5 (src/test/scala). Runtime \u4e3a run task \u5b9a\u4e49 classpath . Provide \u4e3a compiling task \u548c test task \u5b9a\u4e49 classpath . \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u548c\u7f16\u8bd1\u3001\u6253\u5305\u3001\u8fd0\u884c\u76f8\u5173\u7684\u6240\u6709 key \u90fd\u5c40\u9650\u4e8e\u4e00\u4e2a configuration \uff0c\u56e0\u6b64\u5728\u4e0d\u540c\u7684 configuration \u4e2d\u53ef\u80fd\u4ea7\u751f\u4e0d\u540c\u7684\u6548\u679c\u3002\u6700\u660e\u663e\u7684\u4f8b\u5b50\u5c31\u662f task key\uff1acompile\uff0cpackage \u548c run\uff1b \u7136\u800c\u80fd\u591f \u5f71\u54cd \u5230\u8fd9\u4e9b key \u7684\u6240\u6709\u5176\u4ed6 key \uff08\u4f8b\u5982 sourceDirectories\uff0cscalacOptions \u548c fullClasspath\uff09\u4e5f\u90fd\u5c40\u9650\u4e8e\u8be5 configuration . Scoping by Task axis Settings \u53ef\u4ee5\u5f71\u54cd\u4e00\u4e2a task \u5982\u4f55\u5de5\u4f5c. \u4e3a\u4e86\u652f\u6301\u8fd9\u79cd\u7279\u6027\uff0c\u4e00\u4e2a task key \uff08\u4f8b\u5982 packageSrc \uff09\u53ef\u4ee5\u4f5c\u4e3a\u53e6\u4e00\u4e2a key \uff08\u4f8b\u5982 packageOptions \uff09\u7684 scope. \u4e00\u4e9b\u548c\u6253\u5305\u76f8\u5173\u7684 task \uff08 packageSrc , packageBin , packageDoc \uff09\u53ef\u4ee5\u5171\u4eab\u548c\u6253\u5305\u76f8\u5173\u7684 key \uff0c\u4f8b\u5982 artifactName \u548c packageOptions \u3002\u8fd9\u4e9b key \u5bf9\u4e8e\u6bcf\u4e2a\u6253\u5305\u7684 task \u53ef\u4ee5\u6709\u552f\u4e00\u7684\u503c\u3002 packageSrc / packageOptions := ??? packageBin / packageOptions := ??? packageDoc / packageOptions := ??? Referrences [1] sbt Faq, https://www.scala-sbt.org/release/docs/Faq.html [2] 2019 Scala Developer Survey, https://scalacenter.github.io/scala-developer-survey-2019/#what-are-the-*other*-pain-points-to-get-started-in-scala [3] sbt Keys, https://www.scala-sbt.org/1.x/api/sbt/Keys$.html","title":"sbt"},{"location":"build-tool/sbt/#sbt","text":"","title":"sbt"},{"location":"build-tool/sbt/#what-is-sbt","text":"","title":"What is sbt?"},{"location":"build-tool/sbt/#a-build-tool-for-scala-and-java","text":"\u5f53 Mark Harrah \u521b\u9020sbt\u7684\u65f6\u5019, \u5b83\u88ab\u79f0\u4e3a\"Simple Build Tool\" \u4f46\u5b83\u7b2c\u4e00\u6b21\u516c\u5f00\u5ba3\u5e03\u7684\u65f6\u5019\uff0c\u540d\u5b57 sbt \u4e0d\u4ee3\u8868\u4efb\u4f55\u4e1c\u897f\uff0c\u5b83\u53ea\u662f \"sbt\"\uff0c\u5b83\u5e94\u8be5\u8fd9\u6837\u5199 [1]","title":"A build tool for Scala (and Java)"},{"location":"build-tool/sbt/#other-options-of-scala-build-tool","text":"Java build tools, like ant, maven, gradle Mill Fury seed CBT ...","title":"Other options of Scala build tool"},{"location":"build-tool/sbt/#why-sbt","text":"","title":"Why sbt?"},{"location":"build-tool/sbt/#the-most-used-scala-build-tool","text":"Scala\u5b98\u65b9\u63a8\u8350 93.6% Scala\u5f00\u53d1\u8005\u7684\u9009\u62e9 [2] \u4f7f\u7528Scala\u4f5c\u4e3aDSL\u5b9a\u4e49build\u6587\u4ef6 \u5e02\u9762\u4e0a\u51e0\u4e4e\u6240\u6709\u7684Scala\u6307\u5357\u90fd\u662f\u57fa\u4e8e sbt \u53ef\u4ee5\u6df7\u5408\u6784\u5efaJava\u548cScala\u9879\u76ee \u589e\u91cf\u7f16\u8bd1(\u4f18\u79c0\u7684\u589e\u91cf\u7f16\u8bd1\u8bbe\u8ba1) \u901a\u8fc7\u89e6\u53d1\u6267\u884c(trigger execution)\u7279\u6027\u652f\u6301\u6301\u7eed\u7684\u7f16\u8bd1\u4e0e\u6d4b\u8bd5(file changes watch) \u652f\u6301\u5e76\u884c\u4efb\u52a1\u6267\u884c \u652f\u6301\u5927\u91cf\u7684\u63d2\u4ef6 \u53ef\u4ee5\u91cd\u7528Maven\u6216\u8005ivy\u7684repository\u8fdb\u884c\u4f9d\u8d56\u7ba1\u7406","title":"The most used scala build tool"},{"location":"build-tool/sbt/#the-sbt-project-structure","text":"\u251c\u2500\u2500 build.sbt ------ build definition file \u251c\u2500\u2500 project ------ build support files \u2502 \u251c\u2500\u2500 build.properties \u2502 \u251c\u2500\u2500 plugins.sbt \u2502 \u2514\u2500\u2500 project \u251c\u2500\u2500 src \u2502 \u251c\u2500\u2500 main \u2502 \u2502 \u251c\u2500\u2500 resources \u2502 \u2502 \u2514\u2500\u2500 scala \u2502 \u2514\u2500\u2500 test \u2502 \u251c\u2500\u2500 resources \u2502 \u2514\u2500\u2500 scala \u2514\u2500\u2500 target ------ build products","title":"The sbt project structure"},{"location":"build-tool/sbt/#build-definition","text":"","title":"Build Definition"},{"location":"build-tool/sbt/#settings-expression","text":"","title":"Settings Expression"},{"location":"build-tool/sbt/#introduction","text":"{key} := {body} \u914d\u7f6e\u8868\u8fbe\u5f0f\u5305\u542b\u5982\u4e0b\u4e09\u90e8\u5206: \u64cd\u4f5c\u7b26\u5de6\u4fa7\u88ab\u79f0\u4e3a key \u64cd\u4f5c\u7b26\u7528 := \u8868\u793a \u64cd\u4f5c\u7b26\u53f3\u4fa7\u88ab\u79f0\u4e3a body","title":"Introduction"},{"location":"build-tool/sbt/#keys","text":"sbt \u9884\u7f6e\u7684keys\u90fd\u88ab\u5b9a\u4e49\u5728 sbt.Keys \u91cc, \u9884\u7f6e\u7684Keys\u4f1a\u88ab\u5168\u90e8\u5bfc\u5165\u5230 sbt.Keys 3 \u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u81ea\u5b9a\u4e49keys scala lazy val customKey = settingKey[String](\"The custom key\")","title":"Keys"},{"location":"build-tool/sbt/#adding-project-description","text":"name := \"scala-demo-project\" organization := \"com.shuailli.demo\" version := \"0.1.0-SNAPSHOT\" scalaVersion := \"2.13.5\"","title":"Adding project description"},{"location":"build-tool/sbt/#adding-library-dependencies","text":"// define libs version val http4sVersion = \"0.21.29\" val specs2Version = \"4.11.0\" libraryDependencies ++= Seq( \"org.http4s\" %% \"http4s-dsl\" % http4sVersion, \"org.http4s\" %% \"http4s-blaze-client\" % http4sVersion, \"org.http4s\" %% \"http4s-circe\" % http4sVersion, \"org.specs2\" %% \"specs2-core\" % specs2Version % \"test\", ) Tips Scala\u4e3b\u6b21\u7248\u672c\u7684\u7279\u6027\u5dee\u5f02\u8f83\u5927\uff0c\u56e0\u6b64\u5f88\u591alib\u90fd\u4f1a\u88ab\u7f16\u8bd1\u7ed9\u591a\u4e2aScala\u7248\u672c \u53ef\u89c1\u793a\u4f8b \u901a\u8fc7 %% \u65b9\u6cd5\u83b7\u53d6\u76f8\u5e94Scala\u7248\u672c\u7684lib\uff0c\u786e\u4fddlib\u5bf9\u9879\u76ee\u662f\u4e8c\u8fdb\u5236\u517c\u5bb9\u7684 \u5982\u679c\u4f60\u7528\u7684\u662f groupID %% artifactID % revision \u800c\u4e0d\u662f groupID % artifactID % revision\uff08\u533a\u522b\u5728\u4e8e groupID \u540e\u9762\u662f %%\uff09\uff0csbt \u4f1a\u5728 lib\u540d\u79f0\u4e2d\u52a0\u4e0a\u9879\u76ee\u7684 Scala \u7248\u672c\u53f7\u3002 \u8fd9\u53ea\u662f\u4e00\u79cd\u5feb\u6377\u65b9\u6cd5\u3002\u4f60\u53ef\u4ee5\u8fd9\u6837\u5199\u4e0d\u7528 %%: libraryDependencies += \"org.scala-tools\" % \"scala-stm_2.11\" % \"0.3\" \u5047\u8bbe\u8fd9\u4e2a\u6784\u5efa\u7684 scalaVersion \u662f 2.11.1\uff0c\u4e0b\u9762\u8fd9\u79cd\u65b9\u5f0f\u662f\u7b49\u6548\u7684\uff08\u6ce8\u610f \"org.scala-tools\" \u540e\u9762\u662f %%\uff09: libraryDependencies += \"org.scala-tools\" %% \"scala-stm\" % \"0.3\"","title":"Adding library dependencies"},{"location":"build-tool/sbt/#compiler-options","text":"scalacOptions ++= Seq( \"-encoding\", \"utf8\", // Option and arguments on same line \"-Xfatal-warnings\", // New lines for each options \"-deprecation\", \"-unchecked\", \"-language:implicitConversions\", \"-language:higherKinds\", \"-language:existentials\", \"-language:postfixOps\" ) \u5b98\u65b9\u5b8c\u6574\u7684compiler options\u53ef\u89c1: \u94fe\u63a5 \u4e00\u4efd\u63a8\u8350\u7684compiler options\u914d\u7f6e\u53ef\u89c1: \u94fe\u63a5","title":"Compiler Options"},{"location":"build-tool/sbt/#command-alias","text":"addCommandAlias(\"checkAndTest\", \";clean;scalafmtCheck;coverage;test;coverageReport;coverageOff\")","title":"Command Alias"},{"location":"build-tool/sbt/#adding-plugins","text":"// define lib version val kindProjectorVersion = \"0.13.0\" addCompilerPlugin(\"org.typelevel\" %% \"kind-projector\" % kindProjectorVersion cross CrossVersion.full)","title":"Adding plugins"},{"location":"build-tool/sbt/#build-support-files","text":"\u76ee\u5f55 project \u4e0b\u4efb\u4f55\u7684\u6587\u4ef6\u90fd\u53ef\u4ee5\u88ab\u7528\u5728\u6784\u5efa\u8fc7\u7a0b\u4e2d.","title":"Build Support Files"},{"location":"build-tool/sbt/#specifying-the-sbt-version","text":"\u4f7f\u7528 project/build.properties \u6587\u4ef6\u6307\u5b9a sbt \u7248\u672c sbt.version = 1.4.7 \u5982\u679c\u6307\u5b9a\u7684 sbt \u7248\u672c\u5728\u672c\u5730\u4e0d\u5b58\u5728, sbt launcher \u5c06\u4f1a\u5728\u6784\u5efa\u5f00\u59cb\u524d\u81ea\u52a8\u4e3a\u4f60\u4e0b\u8f7d. \u8fd9\u4e2a\u7279\u6027\u4f1a\u4fdd\u8bc1\u672c\u5730\u9884\u88c5\u4e86\u4e0d\u540c\u7248\u672c sbt \u7684\u5f00\u53d1\u8005\u5bf9\u540c\u4e00\u9879\u76ee\u7684\u6784\u5efa\u751f\u6210\u4e00\u81f4\u7684\u6784\u5efa\u4ea7\u7269, \u56e0\u4e3a\u5b83\u5c06\u6700\u7ec8\u4f7f\u7528\u6307\u5b9a\u7248\u672c\u7684sbt","title":"Specifying the sbt version"},{"location":"build-tool/sbt/#organize-plugins","text":"\u4f7f\u7528 project/plugins.sbt \u6587\u4ef6\u7ba1\u7406 sbt \u63d2\u4ef6 addSbtPlugin(\"com.typesafe.sbt\" % \"sbt-native-packager\" % \"1.8.0\") addSbtPlugin(\"org.scoverage\" % \"sbt-scoverage\" % \"1.6.1\") addSbtPlugin(\"org.scalameta\" % \"sbt-scalafmt\" % \"2.4.2\")","title":"Organize plugins"},{"location":"build-tool/sbt/#how-to-run-sbt","text":"","title":"How to run sbt?"},{"location":"build-tool/sbt/#installation","text":"\u5b89\u88c5 JDK \uff08\u63a8\u8350\u5b89\u88c5JDK8\u6216\u8005JDK11\uff09 \u5b89\u88c5 sbt // In MacOS $ brew install sbt \u73b0\u5728\u4f60\u53ef\u4ee5\u5f00\u59cbScala\u9879\u76ee\u7684\u5f00\u53d1 Tips: Scala\u4e0d\u540c\u4e8e\u5176\u4ed6\u8bed\u8a00\uff0cScala\u4e3b\u6b21\u7248\u672c\u4e4b\u95f4\u7684\u7279\u6027\u5dee\u5f02\u8f83\u5927\uff0c\u56e0\u6b64\u901a\u5e38\u90fd\u662f\u4e3a\u6bcf\u4e2a\u9879\u76ee\u5b89\u88c5\u7279\u5b9a\u7248\u672c( build.sbt )\u7684Scala,\u800c\u4e0d\u662f\u5168\u5c40\u5b89\u88c5\uff0c_ sbt _\u5c31\u53ef\u4ee5\u7528\u6765\u7ba1\u7406\u6bcf\u4e2aScala\u9879\u76ee\u7279\u5b9a\u7684Scala\u7248\u672c. \u5b89\u88c5 sbt \u540e\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b, sbt \u4f1a\u4f7f\u7528\u548c\u81ea\u8eab\u7248\u672c\u76f8\u5e94\u7248\u672c\u7684Scala\u6765\u6784\u5efa\u9879\u76ee","title":"Installation"},{"location":"build-tool/sbt/#sbt-shell-and-common-commands","text":"\u8fdb\u5165 sbt \u4ea4\u4e92\u6a21\u5f0f $ sbt \u5e38\u7528\u547d\u4ee4: > new > clean > compile > test > testOnly > package > console > run","title":"sbt Shell and common commands"},{"location":"build-tool/sbt/#batch-mode","text":"\u4f60\u4e5f\u53ef\u4ee5\u7528\u6279\u5904\u7406\u6a21\u5f0f\u6765\u8fd0\u884c sbt\uff0c\u53ef\u4ee5\u4ee5\u7a7a\u683c\u4e3a\u5206\u9694\u7b26\u6307\u5b9a\u53c2\u6570\u3002\u5bf9\u4e8e\u63a5\u53d7\u53c2\u6570\u7684 sbt \u547d\u4ee4\uff0c\u5c06\u547d\u4ee4\u548c\u53c2\u6570\u7528\u5f15\u53f7\u5f15\u8d77\u6765\u4e00\u8d77\u4f20\u7ed9 sbt \u3002\u4f8b\u5982\uff1a $ sbt clean compile \"testOnly TestA TestB\" \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0ctestOnly \u6709\u4e24\u4e2a\u53c2\u6570 TestA \u548c TestB\u3002\u8fd9\u4e2a\u547d\u4ee4\u4f1a\u6309\u987a\u5e8f\u6267\u884c\uff08clean\uff0c compile\uff0c \u7136\u540e testOnly\uff09. \u6279\u5904\u7406\u6a21\u5f0f\u4e0b\uff0c\u6784\u5efa\u5c06\u8fd0\u884c\u7684\u975e\u5e38\u6162.","title":"Batch mode"},{"location":"build-tool/sbt/#continuous-build-and-test","text":"\u4e3a\u4e86\u52a0\u5feb\u7f16\u8f91-\u7f16\u8bd1-\u6d4b\u8bd5\u5faa\u73af\uff0c\u4f60\u53ef\u4ee5\u8ba9 sbt \u5728\u4f60\u4fdd\u5b58\u6e90\u6587\u4ef6\u65f6\u81ea\u52a8\u91cd\u65b0\u7f16\u8bd1\u6216\u8005\u8dd1\u6d4b\u8bd5\u3002 \u5728\u547d\u4ee4\u524d\u9762\u52a0\u4e0a\u524d\u7f00 ~ \u540e\uff0c\u6bcf\u5f53\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u6e90\u6587\u4ef6\u53d1\u751f\u53d8\u5316\u65f6\u5c31\u4f1a\u81ea\u52a8\u8fd0\u884c\u8be5\u547d\u4ee4. \u4ea4\u4e92\u6a21\u5f0f\u4e0b\u5c1d\u8bd5 > ~ compile > ~ run > ~ testQuick \u4ea4\u4e92\u6a21\u5f0f\u4e0b\u6309 \u56de\u8f66\u952e \u505c\u6b62\u76d1\u89c6\u53d8\u5316\uff0c\u5f53\u7136\u4e86\u4ea4\u4e92\u6a21\u5f0f\u6216\u8005\u6279\u5904\u7406\u6a21\u5f0f\u4e0b\u5747\u53ef\u4f7f\u7528 ~ \u524d\u7f00. \u6279\u5904\u7406\u6a21\u5f0f\u4e0b\u5c1d\u8bd5 $ sbt '~ run' \u4e3a\u4e86\u533a\u5206\u7c7bUnix\u7cfb\u7edf\u4e0b\u548c sbt \u4e0b\u7684 ~ \u524d\u7f00(Unix\u7cfb\u7edf\u4e0b\u4ee3\u8868\u5f53\u524d\u7528\u6237\u6839\u76ee\u5f55)\uff0c\u5728\u6279\u5904\u7406\u6a21\u5f0f\u4e0b\u9700\u8981\u4f7f\u7528 ' \u5c06sbt\u7684\u547d\u4ee4\u5305\u8d77\u6765","title":"Continuous Build and Test"},{"location":"build-tool/sbt/#common-plugins","text":"","title":"Common plugins"},{"location":"build-tool/sbt/#formatter","text":"\u5728 project/plugins.sbt \u6587\u4ef6\u6dfb\u52a0\u63d2\u4ef6 addSbtPlugin(\"org.scalameta\" % \"sbt-scalafmt\" % \"2.4.2\") \u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u6dfb\u52a0\u914d\u7f6e\u6587\u4ef6 .scalafmt.conf \u793a\u4f8b\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u914d\u7f6e, \u5b98\u65b9\u914d\u7f6e\u8bf4\u660e\u8bf7\u89c1: \u94fe\u63a5 version = 2.7.5 maxColumn = 180 align = more danglingParentheses = false continuationIndent.defnSite = 2 \u6307\u5b9a\u5982\u4e0b\u547d\u4ee4\u6267\u884cformatter $ sbt scalafmt // or $ sbt scalafmtCheck","title":"Formatter"},{"location":"build-tool/sbt/#package-release","text":"\u5728 project/plugins.sbt \u6587\u4ef6\u6dfb\u52a0\u6253\u5305\u63d2\u4ef6\uff08\u4ea7\u51fa\u80d6JAR\u5305-\u4e00\u4e2a\u5305\u542b\u4ee3\u7801\u548c\u5e93\u4e2d\u6240\u6709\u7c7b\u6587\u4ef6\u7684JAR\u6587\u4ef6\uff09 addSbtPlugin(\"com.eed3si9n\" % \"sbt-assembly\" % \"1.0.0\") \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u751f\u6210 JAR \u5305 $ sbt package \u5728 project/plugins.sbt \u6587\u4ef6\u6dfb\u52a0\u6253\u5305\u63d2\u4ef6\uff08\u4ea7\u51fa\u90e8\u7f72\u955c\u50cf\uff09 addSbtPlugin(\"com.typesafe.sbt\" % \"sbt-native-packager\" % \"1.7.5\") \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u4e3a\u4e0d\u540c\u7cfb\u7edf\u6784\u5efa\u90e8\u7f72\u955c\u50cf $ sbt debian:packageBin # deb package $ sbt windows:packageBin # msi package $ sbt docker:publishLocal # docker image","title":"Package &amp; Release"},{"location":"build-tool/sbt/#test-coverage","text":"\u5728 project/plugins.sbt \u6587\u4ef6\u6dfb\u52a0\u63d2\u4ef6 addSbtPlugin(\"org.scoverage\" % \"sbt-scoverage\" % \"1.6.1\") \u5728 build.sbt \u6587\u4ef6\u6dfb\u52a0\u6d4b\u8bd5\u8986\u76d6\u7387\u914d\u7f6e coverageEnabled in Test := true coverageMinimum := 90 coverageFailOnMinimum := true coverageExcludedPackages := coverageExcludedClasses.mkString(\";\") \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u5747\u53ef\u8c03\u7528\u8986\u76d6\u7387\u68c0\u67e5 $ sbt coverage // or $ sbt test // or $ sbt coverageReport","title":"Test &amp; Coverage"},{"location":"build-tool/sbt/#scopes","text":"\u4e4b\u524d\u63d0\u5230\u4e86 key , \u5b9e\u9645\u4e0a\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u4e0a\u4e0b\u6587\u4e2d\u4e3a\u540c\u4e00\u4e2a key \u8d4b\u4e88\u4e0d\u540c\u7684\u503c\uff0c\u6bcf\u4e2a\u4e0a\u4e0b\u6587\u79f0\u4e4b\u4e3a scope \u4f8b\u5982\uff1a\u5982\u679c\u5728\u4f60\u7684\u6784\u5efa\u5b9a\u4e49\u4e2d\u6709\u591a\u4e2a\u9879\u76ee\uff0c\u5728\u6bcf\u4e2a\u9879\u76ee\u4e2d\u7684 version \u53ef\u4ee5\u662f\u4e0d\u540c\u7684\u503c.","title":"Scopes"},{"location":"build-tool/sbt/#there-are-three-scope-axes","text":"Scope \u8f74\u662f\u4e00\u79cd\u7c7b\u578b\uff0c\u8be5\u7c7b\u578b\u7684\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u80fd\u5b9a\u4e49\u81ea\u5df1\u7684 scope\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u7684key\u53ef\u4ee5\u6709\u81ea\u5df1\u7279\u5b9a\u7684\u503c\uff09. Projects Configurations Tasks","title":"There are three scope axes"},{"location":"build-tool/sbt/#scoping-by-project-axis","text":"\u5982\u679c\u4f60\u5c06\u591a\u4e2a\u9879\u76ee\u653e\u5728\u540c\u4e00\u4e2a\u6784\u5efa\u4e2d\uff0c\u6bcf\u4e2a\u9879\u76ee\u9700\u8981\u6709\u5c5e\u4e8e\u81ea\u5df1\u7684 settings \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c keys \u53ef\u4ee5\u6839\u636e\u9879\u76ee\u88ab\u5c40\u9650\u5728\u4e0d\u540c\u7684\u4e0a\u4e0b\u6587\u4e2d. \u5f53\u4e00\u4e2a\u9879\u76ee\u6ca1\u6709\u5b9a\u4e49\u9879\u76ee\u5c42\u7ea7\u7684 settings \u7684\u65f6\u5019\uff0c\u6784\u5efa\u5c42\u7ea7\u7684 settings \u901a\u5e38\u4f5c\u4e3a\u9ed8\u8ba4\u7684\u8bbe\u7f6e. \u5982\u4e0b\u793a\u4f8b\uff0c\u5229\u7528 project \u8f74\u8bbe\u7f6e\u6784\u5efa\u5c42\u7ea7\u7684 settings ThisBuild / scalaVersion := \"2.13.5\" ThisBuild / version := \"0.1.0-SNAPSHOT\" ThisBuild / organization := \"com.shuailli.demo\" ThisBuild \u4ee3\u8868\u7684\u5c31\u662f \u6784\u5efa\u5c42\u7ea7","title":"Scoping by Project axis"},{"location":"build-tool/sbt/#scoping-by-configuration-axis","text":"\u4e00\u4e2a configuration \u5b9a\u4e49\u4e00\u79cd\u7279\u5b9a\u7684\u6784\u5efa\uff0c\u53ef\u80fd\u5305\u542b\u5b83\u81ea\u5df1\u7684 classpath\uff0c\u6e90\u6587\u4ef6\u548c\u751f\u6210\u7684\u5305\u7b49. \u5728 sbt \u4e2d\u4f60\u53ef\u4ee5\u770b\u5230\u8fd9\u4e9b configurations\uff1a Compile \u5b9a\u4e49\u4e3b\u6784\u5efa (src/main/scala). Test \u5b9a\u4e49\u5982\u4f55\u6784\u5efa\u6d4b\u8bd5 (src/test/scala). Runtime \u4e3a run task \u5b9a\u4e49 classpath . Provide \u4e3a compiling task \u548c test task \u5b9a\u4e49 classpath . \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u548c\u7f16\u8bd1\u3001\u6253\u5305\u3001\u8fd0\u884c\u76f8\u5173\u7684\u6240\u6709 key \u90fd\u5c40\u9650\u4e8e\u4e00\u4e2a configuration \uff0c\u56e0\u6b64\u5728\u4e0d\u540c\u7684 configuration \u4e2d\u53ef\u80fd\u4ea7\u751f\u4e0d\u540c\u7684\u6548\u679c\u3002\u6700\u660e\u663e\u7684\u4f8b\u5b50\u5c31\u662f task key\uff1acompile\uff0cpackage \u548c run\uff1b \u7136\u800c\u80fd\u591f \u5f71\u54cd \u5230\u8fd9\u4e9b key \u7684\u6240\u6709\u5176\u4ed6 key \uff08\u4f8b\u5982 sourceDirectories\uff0cscalacOptions \u548c fullClasspath\uff09\u4e5f\u90fd\u5c40\u9650\u4e8e\u8be5 configuration .","title":"Scoping by Configuration axis"},{"location":"build-tool/sbt/#scoping-by-task-axis","text":"Settings \u53ef\u4ee5\u5f71\u54cd\u4e00\u4e2a task \u5982\u4f55\u5de5\u4f5c. \u4e3a\u4e86\u652f\u6301\u8fd9\u79cd\u7279\u6027\uff0c\u4e00\u4e2a task key \uff08\u4f8b\u5982 packageSrc \uff09\u53ef\u4ee5\u4f5c\u4e3a\u53e6\u4e00\u4e2a key \uff08\u4f8b\u5982 packageOptions \uff09\u7684 scope. \u4e00\u4e9b\u548c\u6253\u5305\u76f8\u5173\u7684 task \uff08 packageSrc , packageBin , packageDoc \uff09\u53ef\u4ee5\u5171\u4eab\u548c\u6253\u5305\u76f8\u5173\u7684 key \uff0c\u4f8b\u5982 artifactName \u548c packageOptions \u3002\u8fd9\u4e9b key \u5bf9\u4e8e\u6bcf\u4e2a\u6253\u5305\u7684 task \u53ef\u4ee5\u6709\u552f\u4e00\u7684\u503c\u3002 packageSrc / packageOptions := ??? packageBin / packageOptions := ??? packageDoc / packageOptions := ???","title":"Scoping by Task axis"},{"location":"build-tool/sbt/#referrences","text":"[1] sbt Faq, https://www.scala-sbt.org/release/docs/Faq.html [2] 2019 Scala Developer Survey, https://scalacenter.github.io/scala-developer-survey-2019/#what-are-the-*other*-pain-points-to-get-started-in-scala [3] sbt Keys, https://www.scala-sbt.org/1.x/api/sbt/Keys$.html","title":"Referrences"}]}